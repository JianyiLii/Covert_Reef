[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "Clepper, a lead investigator on Oceanus, has been closely monitoring the closure of Nemo Reef. Over the span of two weeks, he and his intern listened to and analyzed radio communications and utilized his investigative tools to uncover a complex web of expedited approvals, hidden communication, and secretive logistics. Their investigation revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and the Green Guardians, who are a local conservationist group, pointing towards possibilities of corruption and manipulation. Amidst this investigation, Nadia Conti, a known figure formerly entangled in illegal fishing operations, has resurfaced as a person of interest. The project aims to develop new and novel visual analytics techniques to support Clepper’s investigation in uncovering the full extent of the events on Oceanus."
  },
  {
    "objectID": "proposal.html#website-look",
    "href": "proposal.html#website-look",
    "title": "Project Proposal",
    "section": "Website Look",
    "text": "Website Look"
  },
  {
    "objectID": "proposal.html#shiny-applications-on-networks-and-visualisations",
    "href": "proposal.html#shiny-applications-on-networks-and-visualisations",
    "title": "Project Proposal",
    "section": "Shiny Applications on Networks and Visualisations",
    "text": "Shiny Applications on Networks and Visualisations\n\n\nInputsOutputs\n\n\nThe Shiny app will include some of these parts.\n\nKnowledge graph\nAs the entire network is very large, containing 1,159 nodes and 3,226 edges, it is not suitable to visualize the entire network. Hence, we will plot with subgraphs and other visualisations.\n\n\nReference Node\nFor Nadia’s ego network, we require a reference node (Nadia).\n\n\nNetwork depth\nIn relation to the reference node, this serves to narrow down the network to view. The depth dictates how far from the reference node to network. As Nadia’s networks are at distance 1 or distance 2, we will add an option to toggle whether to render the full network or use the option to render by distance to the reference node.\n\n\n\n\nPlot area\nShows the network or visualisation plot. It will be interactive to enable closer inspection of network or visual elements.\n\n\n\n\nThese are some prototypes of the webpage and shiny application that we are planning to build for the project. The whole concept of this storyboard is mainly to allow the user to utilise interactive visualisations such as timeseries slides, clickable components, or hovers to get to the bottom of the activites brewing at Oceanus such as the Nemo Reef Operation. Hence, enhancing the whole user experience as they follow us along on uncovering the story."
  },
  {
    "objectID": "meeting_minutes.html",
    "href": "meeting_minutes.html",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 15/05/2025 \nTime: 7:30 - 8:00 PM\nIn Attendance: Li Jianyi, Yang Lu \nAgenda Items \n\nDiscussion on project topic \n\n\n\nAction items \n\nAgenda Item 1: Discussion on project topic \n\nPrior to the meeting, the team read the different challenges from VAST Challenge 2025 to select our respective preferences.  \n\n\n\nThe team disagreed to do the challenge as Yang Lu prefers MC2, while Li JianYi prefers MC3. \n\n\n\nThe team agreed on MC3 as we thought that through the challenge, we could utilise what we have learned in class and add more insights from our own current knowledge bank. \n\n\n\nThe team also informed Audrey on the team’s choice of MC3 as she mentioned she was fine with any topic since she was on medical leave. \n\nAction Items \n\nAll members will revisit the MC3 document to identify any gaps in understanding the knowledge graph’s structure and content. \n\n\n\n\nDate: 24/05/2025 \nTime: 3.45 - 4:15 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nSharing our work progress for MC3 \n\n\n\nDivision of tasks for Project Proposal \n\nAgenda Item 1: Sharing our work progress \n\nYang Lu is completing Question 1. Audrey is completing Questions 2 and 4.  \n\n\n\nJianyi will work on Question 3 and attempt other Questions if he has the time.  \n\nAgenda Item 2: Division of tasks for the project. \n\nThe team agreed to complete their assigned questions and attempt to complete other questions as much as possible if they have the time. \n\n\n\nThe team will refer to the project requirements and seniors’ work for references.\n\n\n\n\nDate: 02/06/2025 \nTime: 8.00 - 8:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nDivision of tasks for the project. \n\n\n\nAction items \n\nAgenda Item 1: Division of tasks for Project \n\nWe decided to focus on the most urgent component, which was the project proposal due on 8 June 2025.  \n\n\n\nJianyi will cover the Shiny and Netlify setup. \n\n\n\nYang Lu and Audrey will cover the Meeting Minutes and Project Proposal. \n\nAgenda Item 2: Action Items \n\nJianyi will help the team to push the Project Proposal to GitHub after Yang Lu and Audrey finish the Meeting Minutes and Project Proposal. \n\n\n\n\nDate: 07/06/2025 \nTime: 2.45 - 4:35 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nUI storyboard template and format\nThe distinction between Take-home Exercise 3 and the group project deliverable\nGitHub branching & collaboration workflow\n\nAgenda Item 1: UI Storyboard Template & Format\nTemplate Style\n\nAdopt a clean “dark-blue” or similar professional colour palette to be consistent with the theme of the project.\nUse consistent title headers, footers, and navigation bar mock-ups.\nPrint-screen of each implemented UI page\nCapture one overall shot of each primary view in the app, such as the homepage, the detail page, and the filter/control panel, so the storyboard illustrates the full user journey.\n\nAgenda Item 2: Distinction Group Project Website (Covert Reef)\n\nStatic homepage summarizing group methodology, team introduction and proposal.\nMay include embedded visuals, but not required to be Shiny.\nShared Netlify site under group account\nGitHub repo link for group deliverable (proposal, poster, minutes).\n\n\n\n\nDate: 23/06/2025 \nTime: 8.00PM - 9:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nHarmonization of data variables and nomenclature\nWebsite architecture and content framework\nWork distribution and consolidation approach\nInteractive vs static visualization deployment strategy\n\nAgenda Item 1: Harmonization of data variables and nomenclature\n\nIssue Identified: Inconsistent variable naming across individual team contributions creating merge conflicts\n\n\n\nResolution: Establish unified naming standards for all data objects and variables prior to code integration\n\n\n\nImplementation: Conduct comprehensive review to synchronize nomenclature across all team member submissions\n\nAgenda Item 2: Website architecture and content framework\n\nData Preparation Section: Decided to create a unified data preparation section combining all team members’ preprocessing work\nMethodology vs Findings: Clarified that methodology should cover overall approach, while findings will contain question-specific analyses\nContent Strategy:\n\nCopy and paste shared components (packages, introduction, data preparation)\nCombine individual question analyses under findings section\nMaintain consistent formatting across all sections\n\n\nAgenda Item 3: Work distribution and consolidation approach\nAnalysis 1: Primary implementation using Yang Lu’s temporal heat map visualization, supplemented by Audrey’s community structure analysis\nAnalysis 2:\n\nComponent A: Deploy Audrey’s community detection visualizations (reference sections 7.5.8 through 7.5.11)\nComponent B: Incorporate Li Jianyi’s network metrics including betweenness centrality calculations\nIntegration: Merge Audrey’s visual community mapping with Jianyi’s quantitative connectivity analysis (degree and betweenness centrality measures)\n\nAnalysis 3: Synthesize findings from Analyses 2A&B with 3A investigation, utilizing Audrey’s Interactive Alluvial Diagrams as analytical foundation while ensuring coherence across related questions\nAnalysis 4: Maintain existing individual response with team validation\nAgenda Item 4: Interactive vs static visualization deployment strategy\n\nTechnical Constraint: Shiny applications offer superior user interaction but lack direct Netlify compatibility\n\n\n\nHybrid Approach:\n\nPreserve Shiny implementations for enhanced demonstration capabilities\nDevelop static alternatives optimized for Netlify integration\n\n\n\n\nDevelopment Priority: Emphasize functional delivery over visual sophistication for web deployment"
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-1",
    "href": "meeting_minutes.html#project-meeting-1",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 15/05/2025 \nTime: 7:30 - 8:00 PM\nIn Attendance: Li Jianyi, Yang Lu \nAgenda Items \n\nDiscussion on project topic \n\n\n\nAction items \n\nAgenda Item 1: Discussion on project topic \n\nPrior to the meeting, the team read the different challenges from VAST Challenge 2025 to select our respective preferences.  \n\n\n\nThe team disagreed to do the challenge as Yang Lu prefers MC2, while Li JianYi prefers MC3. \n\n\n\nThe team agreed on MC3 as we thought that through the challenge, we could utilise what we have learned in class and add more insights from our own current knowledge bank. \n\n\n\nThe team also informed Audrey on the team’s choice of MC3 as she mentioned she was fine with any topic since she was on medical leave. \n\nAction Items \n\nAll members will revisit the MC3 document to identify any gaps in understanding the knowledge graph’s structure and content."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-2",
    "href": "meeting_minutes.html#project-meeting-2",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 24/05/2025 \nTime: 3.45 - 4:15 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nSharing our work progress for MC3 \n\n\n\nDivision of tasks for Project Proposal \n\nAgenda Item 1: Sharing our work progress \n\nYang Lu is completing Question 1. Audrey is completing Questions 2 and 4.  \n\n\n\nJianyi will work on Question 3 and attempt other Questions if he has the time.  \n\nAgenda Item 2: Division of tasks for the project. \n\nThe team agreed to complete their assigned questions and attempt to complete other questions as much as possible if they have the time. \n\n\n\nThe team will refer to the project requirements and seniors’ work for references."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-3",
    "href": "meeting_minutes.html#project-meeting-3",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 02/06/2025 \nTime: 8.00 - 8:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nDivision of tasks for the project. \n\n\n\nAction items \n\nAgenda Item 1: Division of tasks for Project \n\nWe decided to focus on the most urgent component, which was the project proposal due on 8 June 2025.  \n\n\n\nJianyi will cover the Shiny and Netlify setup. \n\n\n\nYang Lu and Audrey will cover the Meeting Minutes and Project Proposal. \n\nAgenda Item 2: Action Items \n\nJianyi will help the team to push the Project Proposal to GitHub after Yang Lu and Audrey finish the Meeting Minutes and Project Proposal."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-4",
    "href": "meeting_minutes.html#project-meeting-4",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 07/06/2025 \nTime: 2.45 - 4:35 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nUI storyboard template and format\nThe distinction between Take-home Exercise 3 and the group project deliverable\nGitHub branching & collaboration workflow\n\nAgenda Item 1: UI Storyboard Template & Format\nTemplate Style\n\nAdopt a clean “dark-blue” or similar professional colour palette to be consistent with the theme of the project.\nUse consistent title headers, footers, and navigation bar mock-ups.\nPrint-screen of each implemented UI page\nCapture one overall shot of each primary view in the app, such as the homepage, the detail page, and the filter/control panel, so the storyboard illustrates the full user journey.\n\nAgenda Item 2: Distinction Group Project Website (Covert Reef)\n\nStatic homepage summarizing group methodology, team introduction and proposal.\nMay include embedded visuals, but not required to be Shiny.\nShared Netlify site under group account\nGitHub repo link for group deliverable (proposal, poster, minutes)."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-5",
    "href": "meeting_minutes.html#project-meeting-5",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 23/06/2025 \nTime: 8.00PM - 9:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nHarmonization of data variables and nomenclature\nWebsite architecture and content framework\nWork distribution and consolidation approach\nInteractive vs static visualization deployment strategy\n\nAgenda Item 1: Harmonization of data variables and nomenclature\n\nIssue Identified: Inconsistent variable naming across individual team contributions creating merge conflicts\n\n\n\nResolution: Establish unified naming standards for all data objects and variables prior to code integration\n\n\n\nImplementation: Conduct comprehensive review to synchronize nomenclature across all team member submissions\n\nAgenda Item 2: Website architecture and content framework\n\nData Preparation Section: Decided to create a unified data preparation section combining all team members’ preprocessing work\nMethodology vs Findings: Clarified that methodology should cover overall approach, while findings will contain question-specific analyses\nContent Strategy:\n\nCopy and paste shared components (packages, introduction, data preparation)\nCombine individual question analyses under findings section\nMaintain consistent formatting across all sections\n\n\nAgenda Item 3: Work distribution and consolidation approach\nAnalysis 1: Primary implementation using Yang Lu’s temporal heat map visualization, supplemented by Audrey’s community structure analysis\nAnalysis 2:\n\nComponent A: Deploy Audrey’s community detection visualizations (reference sections 7.5.8 through 7.5.11)\nComponent B: Incorporate Li Jianyi’s network metrics including betweenness centrality calculations\nIntegration: Merge Audrey’s visual community mapping with Jianyi’s quantitative connectivity analysis (degree and betweenness centrality measures)\n\nAnalysis 3: Synthesize findings from Analyses 2A&B with 3A investigation, utilizing Audrey’s Interactive Alluvial Diagrams as analytical foundation while ensuring coherence across related questions\nAnalysis 4: Maintain existing individual response with team validation\nAgenda Item 4: Interactive vs static visualization deployment strategy\n\nTechnical Constraint: Shiny applications offer superior user interaction but lack direct Netlify compatibility\n\n\n\nHybrid Approach:\n\nPreserve Shiny implementations for enhanced demonstration capabilities\nDevelop static alternatives optimized for Netlify integration\n\n\n\n\nDevelopment Priority: Emphasize functional delivery over visual sophistication for web deployment"
  },
  {
    "objectID": "tasks.html",
    "href": "tasks.html",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "",
    "text": "pacman::p_load(jsonlite, tidyverse, ggtext,   \n               knitr, lubridate, hms, scales,   \n               tidytext, tm, SnowballC,   \n               patchwork, ggraph,    \n               tidygraph, igraph, ggiraph,    \n               SmartEDA, plotly, wordcloud,    \n               ggh4x, visNetwork, RColorBrewer, \n               circlize, ggalluvial, reactable)\nmc3_data &lt;- fromJSON(\"data/mc3_graph.json\")\nmc3_schema &lt;- fromJSON(\"data/MC3_schema.json\")\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",\n  \"Relationship\" = \"#AF8DC3\",\n  \"Nadia Conti\" = \"red\"\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",\n  \"Relationship\" = \"square x\",\n  \"Nadia Conti\" = \"star\"\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)\nmc3_nodes_raw &lt;- as_tibble(mc3_data$nodes)\nmc3_edges_raw &lt;- as_tibble(mc3_data$edges)\nlibrary(ggplot2)\n\n# Run ExpCatViz once at the top to avoid recomputing\nExpCatViz(data=mc3_nodes_raw,\n          col=\"navyblue\")\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n\n\n\n\n[[14]]\n# Step 1: Count and reorder\nmc3_nodes_ordered &lt;- mc3_nodes_raw %&gt;%\n  count(sub_type) %&gt;%\n  arrange((n)) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type))\n\n# Step 2: Plot with navy bars, sorted, and horizontal\nggplot(mc3_nodes_ordered, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(x = \"Sub_type\", y = \"Count\",\n    title = \"Distribution of Subtypes\") +\n  theme_minimal()\n# Step 1: Filter for type == \"Entity\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Entity\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type)) \n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Entity Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Entity Subtypes\"\n  ) +\n  theme_minimal()\n# Step 1: Filter for type == \"Event\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Event\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type)) \n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Event Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Event Subtypes\"\n  ) +\n  theme_minimal()\n# Step 1: Filter for type == \"Relationship\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Relationship\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type))\n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Relationship Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Relationship Subtypes\"\n  ) +\n  theme_minimal()\nExpCatViz(data=mc3_edges_raw,\n          col=\"navyblue\")\n\n[[1]]\n# Step 1: Filter for type == \"sent\"\nfiltered_edges &lt;- mc3_edges_raw %&gt;%\n  filter(type == \"sent\") %&gt;%\n  count(source) %&gt;%\n  arrange(desc(n)) %&gt;%\n  mutate(source = factor(source, levels = rev(unique(source))))  # descending \n\n# Step 2: Plot\nggplot(filtered_edges, aes(x = source, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of 'sent' Edges type by Source\",\n    x = \"Source\",\n    y = \"Count\"\n  ) +\n  theme_minimal()\nmc3_nodes_cleaned &lt;- mc3_nodes_raw %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  select(-thing_collected, -time, -date, -friendship_type)\n# Find the number of unique types in each column and sort descending\nunique_counts &lt;- mc3_nodes_cleaned %&gt;%\n  summarise_all(n_distinct) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"column\", values_to = \"unique_count\") %&gt;%\n  arrange(desc(unique_count))  # sort by unique_count in descending order\n\n# Print the result\nprint(unique_counts)\n\n# A tibble: 27 × 2\n   column            unique_count\n   &lt;chr&gt;                    &lt;int&gt;\n 1 id                        1159\n 2 timestamp                  612\n 3 content                    581\n 4 label                       92\n 5 name                        73\n 6 findings                    70\n 7 start_date                  69\n 8 coordination_type           53\n 9 operational_role            35\n10 results                     33\n# ℹ 17 more rows\nmc3_edges_cleaned &lt;- mc3_edges_raw %&gt;%\n  rename(from_id = source,\n         to_id = target) %&gt;%\n  mutate(across(c(from_id, to_id), as.character)) %&gt;%\n  # Parse to_id to get supertype and sub_type for target nodes (e.g., Event_Communication)\n  separate(to_id, into = c(\"to_id_supertype\", \"to_id_sub_type\", \"to_id_num\"),\n           sep = \"_\", remove = FALSE, fill = \"right\", extra = \"merge\") %&gt;%\n  # Filter to ensure from_id and to_id exist in mc3_nodes_cleaned (prevent orphaned edges)\n  filter(from_id %in% mc3_nodes_cleaned$id,\n         to_id %in% mc3_nodes_cleaned$id) %&gt;%\n  filter(!is.na(from_id), !is.na(to_id))\n\nprint(\"Columns in mc3_edges_cleaned after initial cleaning:\")\n\n[1] \"Columns in mc3_edges_cleaned after initial cleaning:\"\n\nprint(colnames(mc3_edges_cleaned))\n\n[1] \"id\"              \"is_inferred\"     \"from_id\"         \"to_id\"          \n[5] \"to_id_supertype\" \"to_id_sub_type\"  \"to_id_num\"       \"type\"           \n\nprint(\"Head of mc3_edges_cleaned after initial cleaning:\")\n\n[1] \"Head of mc3_edges_cleaned after initial cleaning:\"\n\nprint(head(mc3_edges_cleaned))\n\n# A tibble: 6 × 8\n  id    is_inferred from_id to_id to_id_supertype to_id_sub_type to_id_num type \n  &lt;chr&gt; &lt;lgl&gt;       &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt;\n1 2     TRUE        Sam     Rela… Relationship    Suspicious     217       &lt;NA&gt; \n2 3     FALSE       Sam     Even… Event           Communication  370       sent \n3 5     TRUE        Sam     Even… Event           Assessment     600       &lt;NA&gt; \n4 3013  TRUE        Sam     Rela… Relationship    Colleagues     430       &lt;NA&gt; \n5 &lt;NA&gt;  TRUE        Sam     Rela… Relationship    Friends        272       &lt;NA&gt; \n6 &lt;NA&gt;  TRUE        Sam     Rela… Relationship    Colleagues     215       &lt;NA&gt;\n# Find the number of unique types in each column\nunique_counts &lt;- mc3_edges_cleaned %&gt;%\n  summarise_all(n_distinct) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"column\", values_to = \"unique_count\")\n\n# Print the unique counts for each column\nprint(unique_counts)\n\n# A tibble: 8 × 2\n  column          unique_count\n  &lt;chr&gt;                  &lt;int&gt;\n1 id                      3170\n2 is_inferred                2\n3 from_id                 1052\n4 to_id                   1156\n5 to_id_supertype           71\n6 to_id_sub_type            21\n7 to_id_num                860\n8 type                       4\nnode_index_lookup &lt;- mc3_nodes_cleaned %&gt;%\n  mutate(.row_id = row_number()) %&gt;%\n  select(id, .row_id)\nmc3_edges_indexed &lt;- mc3_edges_cleaned %&gt;%\n  left_join(node_index_lookup, by = c(\"from_id\" = \"id\")) %&gt;%\n  rename(from = .row_id) %&gt;%\n  left_join(node_index_lookup, by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(to = .row_id) %&gt;%\n  # Filter out edges where either source or target node was not found\n  filter(!is.na(from) & !is.na(to)) %&gt;%\n  # Select all columns to carry forward to mc3_edges_final\n  select(from, to, id, is_inferred, type, # Original edge attributes\n         from_id, to_id, to_id_supertype, to_id_sub_type, to_id_num # Original IDs and parsed target type\n         )\nused_node_indices &lt;- sort(unique(c(mc3_edges_indexed$from, mc3_edges_indexed$to)))\nmc3_nodes_final &lt;- mc3_nodes_cleaned %&gt;%\n  slice(used_node_indices) %&gt;%\n  mutate(new_index = row_number())\nold_to_new_index &lt;- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(used_node_indices)\n)\nmc3_edges_final &lt;- mc3_edges_indexed %&gt;%\n  left_join(old_to_new_index, by = c(\"from\" = \"old_index\")) %&gt;%\n  rename(from_new = new_index) %&gt;%\n  left_join(old_to_new_index, by = c(\"to\" = \"old_index\")) %&gt;%\n  rename(to_new = new_index) %&gt;%\n  # Explicitly select all columns that are needed downstream\n  select(from = from_new, to = to_new,\n         id, is_inferred, type,\n         from_id, to_id, to_id_supertype, to_id_sub_type, to_id_num)\nmc3_graph &lt;- tbl_graph(\n  nodes = mc3_nodes_final,\n  edges = mc3_edges_final,\n  directed = TRUE\n)\n# ---- 1. Define styles and legends ----\n\nevent_subtypes &lt;- c(\n  \"Communication\", \"Monitoring\", \"VesselMovement\", \"Assessment\",\n  \"Collaborate\", \"Endorsement\", \"TourActivity\", \"TransponderPing\",\n  \"Harbor Report\", \"Fishing\", \"Criticize\"\n)\n\nrelationship_subtypes &lt;- c(\n  \"Coordinates\", \"AccessPermission\", \"Operates\", \"Colleagues\",\n  \"Suspicious\", \"Reports\", \"Jurisdiction\", \"Unfriendly\", \"Friends\"\n)\n\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",         # type level\n  \"Relationship\" = \"#AF8DC3\"   # type level\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",              # type level\n  \"Relationship\" = \"square x\"    # type level\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)\n\n# ---- 2. Prepare nodes ----\nnodes &lt;- mc3_nodes_final %&gt;%\n  mutate(\n    label = ifelse(is.na(name), id, name),\n    \n    # These parts are for pulling the related data from other fields\n    tooltip_extra = case_when(\n      type == \"Event\" & sub_type == \"Communication\" ~ content,\n      type == \"Event\" & sub_type == \"Monitoring\" ~ findings,\n      type == \"Event\" & sub_type == \"VesselMovement\" ~ destination,\n      type == \"Event\" & sub_type == \"Assessment\" ~ results,\n      type == \"Relationship\" & sub_type == \"Coordinates\" ~ coordination_type,\n      type == \"Relationship\" & sub_type == \"Operates\" ~ operational_role,\n      type == \"Relationship\" & sub_type == \"Jurisdiction\" ~ jurisdiction_type,\n      TRUE ~ NA_character_\n    ),\n    \n    title = paste0(\n      \"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Type: \", type, \"&lt;br&gt;\",\n      \"Sub-type: \", sub_type, \"&lt;br&gt;\",\n      ifelse(!is.na(tooltip_extra), paste0(\"&lt;br&gt;&lt;b&gt;Details:&lt;/b&gt; \", tooltip_extra), \"\")\n    ),\n    \n    # Fallback logic: if sub_type is NA or not in styling list, use type instead\n    group = ifelse(sub_type %in% names(node_legend_colors_plot), sub_type, type)\n  ) %&gt;%\n  select(id, label, group, title) %&gt;%\n  distinct()\n\n# ---- 3. Prepare directed edges (type == \"sent\") ----\n\nedges &lt;- mc3_edges_final %&gt;%\n  filter(from_id %in% nodes$id & to_id %in% nodes$id) %&gt;%\n  select(from = from_id, to = to_id)\n\n# ---- 4. Build visNetwork ----\n\nnet &lt;- visNetwork(nodes, edges, width = \"100%\", height = \"600px\") %&gt;%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 1.5))) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(\n    size = 14,\n    color = STYLES$node_label_dark,\n    face = STYLES$font_family,\n    vadjust = -15\n  ))\n\n# ---- 5. Apply shape and color per group ----\n\nfor (group_name in names(node_legend_colors_plot)) {\n  net &lt;- net %&gt;% visGroups(\n    groupname = group_name,\n    color = node_legend_colors_plot[[group_name]],\n    shape = node_legend_shapes_plot[[group_name]]\n  )\n}\n# ---- 6. Add legend ----\n\nused_groups &lt;- unique(nodes$group)\n\nlegend_df &lt;- tibble::tibble(\n  label = used_groups,\n  shape = node_legend_shapes_plot[used_groups],\n  color = node_legend_colors_plot[used_groups]\n) %&gt;%\n  distinct(label, .keep_all = TRUE)  # remove duplicates just in case\n\nnet &lt;- net %&gt;% visLegend(\n  addNodes = legend_df,\n  ncol = 2,                         # number of columns\n  position = \"left\",              \n  main = \"Entity (Sub)Types\",      # title\n  useGroups = FALSE                # show custom legend entries\n)\n# ---- 7. Render ----\nnet\n# ---- 1. Define styles and legends ----\n\nevent_subtypes &lt;- c(\n  \"Communication\", \"Monitoring\", \"VesselMovement\", \"Assessment\",\n  \"Collaborate\", \"Endorsement\", \"TourActivity\", \"TransponderPing\",\n  \"Harbor Report\", \"Fishing\", \"Criticize\"\n)\n\nrelationship_subtypes &lt;- c(\n  \"Coordinates\", \"AccessPermission\", \"Operates\", \"Colleagues\",\n  \"Suspicious\", \"Reports\", \"Jurisdiction\", \"Unfriendly\", \"Friends\"\n)\n\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",         # type level\n  \"Relationship\" = \"#AF8DC3\"   # type level\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",              # type level\n  \"Relationship\" = \"square x\"    # type level\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)\n\n# ---- 2. Prepare nodes ----\nnodes &lt;- mc3_nodes_final %&gt;%\n  mutate(\n    label = ifelse(is.na(name), id, name),\n    \n    # These parts are for pulling the related data from other fields\n    tooltip_extra = case_when(\n      type == \"Event\" & sub_type == \"Communication\" ~ content,\n      type == \"Event\" & sub_type == \"Monitoring\" ~ findings,\n      type == \"Event\" & sub_type == \"VesselMovement\" ~ destination,\n      type == \"Event\" & sub_type == \"Assessment\" ~ results,\n      type == \"Relationship\" & sub_type == \"Coordinates\" ~ coordination_type,\n      type == \"Relationship\" & sub_type == \"Operates\" ~ operational_role,\n      type == \"Relationship\" & sub_type == \"Jurisdiction\" ~ jurisdiction_type,\n      TRUE ~ NA_character_\n    ),\n    \n    title = paste0(\n      \"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Type: \", type, \"&lt;br&gt;\",\n      \"Sub-type: \", sub_type, \"&lt;br&gt;\",\n      ifelse(!is.na(tooltip_extra), paste0(\"&lt;br&gt;&lt;b&gt;Details:&lt;/b&gt; \", tooltip_extra), \"\")\n    ),\n    \n    # Fallback logic: if sub_type is NA or not in styling list, use type instead\n    group = ifelse(sub_type %in% names(node_legend_colors_plot), sub_type, type)\n  ) %&gt;%\n  select(id, label, group, title) %&gt;%\n  distinct()\n\n# ---- 3. Prepare directed edges (type == \"sent\") ----\n\nedges &lt;- mc3_edges_final %&gt;%\n  filter(from_id %in% nodes$id & to_id %in% nodes$id) %&gt;%\n  select(from = from_id, to = to_id)\n\n# ---- 4. Build visNetwork ----\n\nnet &lt;- visNetwork(nodes, edges, width = \"100%\", height = \"600px\") %&gt;%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 1.5))) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(\n    size = 14,\n    color = STYLES$node_label_dark,\n    face = STYLES$font_family,\n    vadjust = -15\n  ))\n\n# ---- 5. Apply shape and color per group ----\n\nfor (group_name in names(node_legend_colors_plot)) {\n  net &lt;- net %&gt;% visGroups(\n    groupname = group_name,\n    color = node_legend_colors_plot[[group_name]],\n    shape = node_legend_shapes_plot[[group_name]]\n  )\n}\n# ---- 6. Add legend ----\n\nused_groups &lt;- unique(nodes$group)\n\nlegend_df &lt;- tibble::tibble(\n  label = used_groups,\n  shape = node_legend_shapes_plot[used_groups],\n  color = node_legend_colors_plot[used_groups]\n) %&gt;%\n  distinct(label, .keep_all = TRUE)  # remove duplicates just in case\n\nnet &lt;- net %&gt;% visLegend(\n  addNodes = legend_df,\n  ncol = 2,                         # number of columns\n  position = \"left\",              \n  main = \"Entity (Sub)Types\",      # title\n  useGroups = FALSE                # show custom legend entries\n)\n# ---- 7. Render ----\nnet\nmc3_nodes_cleaned %&gt;%\n  group_by(type, sub_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  arrange(-count) %&gt;%\n  kable()\n\n\n\n\ntype\nsub_type\ncount\n\n\n\n\nEvent\nCommunication\n584\n\n\nRelationship\nCoordinates\n74\n\n\nEvent\nMonitoring\n70\n\n\nRelationship\nAccessPermission\n68\n\n\nEvent\nVesselMovement\n46\n\n\nRelationship\nOperates\n40\n\n\nEvent\nAssessment\n36\n\n\nRelationship\nColleagues\n30\n\n\nEntity\nLocation\n29\n\n\nRelationship\nSuspicious\n28\n\n\nEvent\nCollaborate\n25\n\n\nRelationship\nReports\n25\n\n\nEvent\nEnforcement\n21\n\n\nEntity\nPerson\n18\n\n\nEntity\nVessel\n15\n\n\nEvent\nTourActivity\n13\n\n\nRelationship\nJurisdiction\n13\n\n\nEntity\nGroup\n5\n\n\nEntity\nOrganization\n5\n\n\nRelationship\nUnfriendly\n5\n\n\nEvent\nTransponderPing\n3\n\n\nEvent\nHarborReport\n2\n\n\nRelationship\nFriends\n2\n\n\nEvent\nCriticize\n1\n\n\nEvent\nFishing\n1\n# Split the 'from_id' column\nmc3_edges_cleaned &lt;- mc3_edges_cleaned %&gt;%\n  separate(from_id, into = c(\"from_id_supertype\", \"from_id_sub_type\", \"from_id_id\"), sep = \"_\", remove = FALSE, extra = \"drop\")\n\n# Split the 'target' column into \nmc3_edges_cleaned &lt;- mc3_edges_cleaned %&gt;%\n  separate(to_id, into = c(\"to_id_supertype\", \"to_id_sub_type\",\"to_id_id\"), sep = \"_\", remove = FALSE, extra = \"drop\")\n\n# Find the number of unique types in each column\nunique_counts &lt;- mc3_edges_cleaned %&gt;%\n  summarise_all(n_distinct) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"column\", values_to = \"unique_count\")\n\n# Print the unique counts for each column\nprint(unique_counts)\n\n# A tibble: 12 × 2\n   column            unique_count\n   &lt;chr&gt;                    &lt;int&gt;\n 1 id                        3170\n 2 is_inferred                  2\n 3 from_id                   1052\n 4 from_id_supertype           48\n 5 from_id_sub_type            20\n 6 from_id_id                 822\n 7 to_id                     1156\n 8 to_id_supertype             71\n 9 to_id_sub_type              21\n10 to_id_id                   860\n11 to_id_num                  860\n12 type                         4\n# Check the mapping\nmc3_edges_cleaned %&gt;%\n  group_by(from_id_supertype, from_id_sub_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  arrange(-count) %&gt;%\n  kable()\n\n\n\n\nfrom_id_supertype\nfrom_id_sub_type\ncount\n\n\n\n\nEvent\nCommunication\n1620\n\n\nGreen Guardians\nNA\n90\n\n\nRelationship\nCoordinates\n81\n\n\nMako\nNA\n78\n\n\nReef Guardian\nNA\n72\n\n\nRelationship\nAccessPermission\n63\n\n\nOceanus City Council\nNA\n62\n\n\nRemora\nNA\n62\n\n\nEvent\nMonitoring\n59\n\n\nNeptune\nNA\n57\n\n\nEcoVigil\nNA\n51\n\n\nSentinel\nNA\n47\n\n\nDavis\nNA\n46\n\n\nThe Lookout\nNA\n44\n\n\nEvent\nVesselMovement\n43\n\n\nRelationship\nOperates\n41\n\n\nThe Intern\nNA\n37\n\n\nEvent\nAssessment\n33\n\n\nHorizon\nNA\n32\n\n\nV. Miesel Shipping\nNA\n32\n\n\nHimark Harbor\nNA\n31\n\n\nMrs. Money\nNA\n31\n\n\nMiranda Jordan\nNA\n30\n\n\nClepper Jensen\nNA\n27\n\n\nLiam Thorne\nNA\n26\n\n\nRelationship\nSuspicious\n26\n\n\nRelationship\nReports\n25\n\n\nRodriguez\nNA\n25\n\n\nEvent\nEnforcement\n23\n\n\nPaackland Harbor\nNA\n22\n\n\nBoss\nNA\n21\n\n\nThe Middleman\nNA\n19\n\n\nEvent\nCollaborate\n17\n\n\nNadia Conti\nNA\n17\n\n\nSmall Fry\nNA\n17\n\n\nMarlin\nNA\n15\n\n\nOsprey\nNA\n15\n\n\nSamantha Blake\nNA\n15\n\n\nSerenity\nNA\n15\n\n\nEvent\nTourActivity\n14\n\n\nRelationship\nJurisdiction\n14\n\n\nDefender\nNA\n12\n\n\nKnowles\nNA\n12\n\n\nSeawatch\nNA\n12\n\n\nElise\nNA\n10\n\n\nGlitters Team\nNA\n9\n\n\nHaacklee Harbor\nNA\n9\n\n\nSailor Shifts Team\nNA\n9\n\n\nNorthern Light\nNA\n8\n\n\nThe Accountant\nNA\n8\n\n\nSam\nNA\n7\n\n\nRelationship\nUnfriendly\n5\n\n\nConservation Vessels\nNA\n4\n\n\nKelly\nNA\n4\n\n\nEvent\nHarborReport\n3\n\n\nEvent\nTransponderPing\n3\n\n\nMariner’s Dream\nNA\n3\n\n\nRecreational Fishing Boats\nNA\n3\n\n\nPort Security\nNA\n2\n\n\nRelationship\nColleagues\n2\n\n\nTourists\nNA\n2\n\n\nDiving Tour Operators\nNA\n1\n\n\nEvent\nCriticize\n1\n\n\nEvent\nFishing\n1\n\n\nSailor Shift\nNA\n1\n\n\n\n\n# Check the mapping\nmc3_edges_cleaned %&gt;%\n  group_by(to_id_supertype, to_id_sub_type) %&gt;%\n  summarize(count = n()) %&gt;%\n  arrange(-count) %&gt;%\n  kable()\n\n\n\n\nto_id_supertype\nto_id_sub_type\ncount\n\n\n\n\nEvent\nCommunication\n584\n\n\nEvent\nMonitoring\n240\n\n\nRelationship\nAccessPermission\n225\n\n\nRelationship\nCoordinates\n207\n\n\nEvent\nVesselMovement\n160\n\n\nRelationship\nColleagues\n160\n\n\nRelationship\nOperates\n129\n\n\nEvent\nAssessment\n103\n\n\nNemo Reef\nNA\n102\n\n\nMako\nNA\n89\n\n\nRelationship\nReports\n72\n\n\nOceanus City Council\nNA\n68\n\n\nRelationship\nSuspicious\n68\n\n\nRelationship\nJurisdiction\n63\n\n\nEvent\nCollaborate\n62\n\n\nRemora\nNA\n60\n\n\nEvent\nEnforcement\n47\n\n\nNeptune\nNA\n45\n\n\nHimark Harbor\nNA\n38\n\n\nReef Guardian\nNA\n38\n\n\nGreen Guardians\nNA\n37\n\n\nSentinel\nNA\n36\n\n\nV. Miesel Shipping\nNA\n35\n\n\nEvent\nTourActivity\n32\n\n\nHorizon\nNA\n32\n\n\nPaackland Harbor\nNA\n29\n\n\nMrs. Money\nNA\n26\n\n\nBoss\nNA\n24\n\n\nEcoVigil\nNA\n21\n\n\nMiranda Jordan\nNA\n20\n\n\nNadia Conti\nNA\n20\n\n\nProtected areas\nNA\n20\n\n\nClepper Jensen\nNA\n19\n\n\nDavis\nNA\n18\n\n\nThe Intern\nNA\n18\n\n\nLiam Thorne\nNA\n17\n\n\nSeawatch\nNA\n16\n\n\nEvent\nTransponderPing\n12\n\n\nSailor Shifts Team\nNA\n12\n\n\nRelationship\nUnfriendly\n11\n\n\nSerenity\nNA\n11\n\n\nMarlin\nNA\n10\n\n\nRestricted Zone\nNA\n10\n\n\nSam\nNA\n10\n\n\nRestricted areas\nNA\n9\n\n\nRodriguez\nNA\n9\n\n\nSouth Dock\nNA\n9\n\n\nThe Lookout\nNA\n9\n\n\nHaacklee Harbor\nNA\n7\n\n\nSamantha Blake\nNA\n7\n\n\nThe Middleman\nNA\n7\n\n\nEastern reefs\nNA\n6\n\n\nElise\nNA\n6\n\n\nKnowles\nNA\n6\n\n\nNorthern quadrant\nNA\n6\n\n\nRelationship\nFriends\n6\n\n\nWestern quadrant\nNA\n6\n\n\nDolphin Bay\nNA\n5\n\n\nEastern Boundary\nNA\n5\n\n\nNorthern Light\nNA\n5\n\n\nWestern Boundary\nNA\n5\n\n\nEastern quadrant\nNA\n4\n\n\nCity Officials\nNA\n3\n\n\nCoral Point\nNA\n3\n\n\nDefender\nNA\n3\n\n\nE7\nNA\n3\n\n\nEvent\nHarborReport\n3\n\n\nOsprey\nNA\n3\n\n\nRoute C\nNA\n3\n\n\nThe Accountant\nNA\n3\n\n\nBerth 14\nNA\n2\n\n\nCastaway Cove\nNA\n2\n\n\nEastern Islands\nNA\n2\n\n\nEastern Shoals\nNA\n2\n\n\nEvent\nCriticize\n2\n\n\nEvent\nFishing\n2\n\n\nMariner’s Dream\nNA\n2\n\n\nSouthern Boundary\nNA\n2\n\n\nSouthern coastline\nNA\n2\n\n\nSouthern islands\nNA\n2\n\n\nAzure Cove\nNA\n1\n\n\nConservation Vessels\nNA\n1\n\n\nEastern Coastline\nNA\n1\n\n\nGlitters Team\nNA\n1\n\n\nKelly\nNA\n1\n\n\nPort Security\nNA\n1\n\n\nRecreational Fishing Boats\nNA\n1\n\n\nSmall Fry\nNA\n1\n\n\nSouthern quadrant\nNA\n1\n# checking for duplicates\nduplicate_values1 &lt;- mc3_nodes_cleaned %&gt;%\n  count(content) %&gt;%\n  filter(n &gt; 1)\n\n# View duplicates\nprint(duplicate_values1)\n\n# A tibble: 5 × 2\n  content                                                                      n\n  &lt;chr&gt;                                                                    &lt;int&gt;\n1 Boss, The Accountant here. Conservation vessels deploying underwater mi…     2\n2 Davis here to V. Miesel Shipping. Crew reallocation from Remora to Nept…     2\n3 Mrs. Money, this is Middleman. I've redirected Council's attention to o…     2\n4 Rodriguez, Davis here. Maintain current position with Mako at Nemo Reef…     2\n5 &lt;NA&gt;                                                                       575"
  },
  {
    "objectID": "tasks.html#the-table",
    "href": "tasks.html#the-table",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "The Table",
    "text": "The Table\n\n\n\n\n|timestamp           |sender_name |recipient_name       |content                                                                                                                                                                                                                                                                                    |\n|:-------------------|:-----------|:--------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|2040-10-05 10:48:00 |Sam         |Kelly                |Hey Kelly, it's Sam. This permit approval seems fishy. Could you get details on who signed off on it while you're at the harbor? I need to understand these 'special access corridors' before my meeting with Elise tomorrow.                                                              |\n|2040-10-01 08:13:00 |Kelly       |Sam                  |Sam, it's Kelly! Let's meet at Sunrise Point at 7 AM for birdwatching. Bring your new binoculars and some water. I've heard there might be some rare shorebirds passing through this weekend. Can't wait!                                                                                  |\n|2040-10-07 08:11:00 |Kelly       |Sam                  |Hey Sam, it's Kelly! Got some photos of those crates - definitely marked 'fragile' and 'handle with care.' Neptune's crew is being super secretive. They're using special loading equipment I've never seen before. See you at 7 for birdwatching!                                         |\n|2040-10-05 09:45:00 |Nadia Conti |Haacklee Harbor      |Haacklee Harbor, this is Nadia Conti. I need to cancel the special access corridor arrangements for Nemo Reef immediately. Plans have changed due to unforeseen circumstances. Destroy all related documentation. I'll contact you when we're ready to proceed with alternative locations. |\n|2040-10-05 09:49:00 |Nadia Conti |Oceanus City Council |This is Nadia Conti. My cancellation was due to scheduling conflicts with our tourism development initiatives. I wasn't aware of any permit approvals. I'll submit revised documentation for alternative sustainable tourism proposals next week.                                          |\n|2040-10-08 08:18:00 |Nadia Conti |Liam Thorne          |Liam, Nadia here. Need your services urgently. Investigation brewing around Nemo Reef permits. Double your usual fee if you can ensure Harbor Master remains cooperative through next week. Meet at the usual place tomorrow, 10PM.                                                        |\n|2040-10-08 08:25:00 |Nadia Conti |Neptune              |Neptune, this is Nadia. Need clarity on 'underwater foundation work' at Nemo Reef. This extends beyond our agreed scope. Meet me at the marina tomorrow at 6AM to discuss implications and additional resource requirements.                                                               |\n|2040-10-08 08:30:00 |Nadia Conti |Neptune              |Neptune, Nadia here. Just confirming our 0600 meeting at the marina. I've reviewed the modified equipment specs with The Accountant. Please bring detailed timeline for foundation work and cost implications. We need to stay under radar.                                                |\n|2040-10-08 11:23:00 |Nadia Conti |Marlin               |Marlin, Nadia here. I understand you're inquiring about eastern shoal routes. Those are temporary diversions due to equipment transport needs. I'll have Davis provide the necessary documentation tonight. Nothing to be concerned about.                                                 |\n|2040-10-12 08:44:00 |Nadia Conti |Liam Thorne          |Liam, Nadia here. Redirect all remaining operations from southwest immediately. Move equipment to our secondary location. I'll handle EcoVigil through proper channels. Meet me at the usual place at 2100 hours with updated documentation.                                               |"
  },
  {
    "objectID": "tasks.html#people-and-vessels",
    "href": "tasks.html#people-and-vessels",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "2.2 People and Vessels",
    "text": "2.2 People and Vessels\n\n2.2.1 Filter by Vessel and Person only\n\nperson_vessel_df &lt;- other_communications_df %&gt;%\n  filter(\n    (sender_sub_type == \"Person\" & recipient_sub_type == \"Vessel\") |\n    (sender_sub_type == \"Vessel\" & recipient_sub_type == \"Person\") |\n    (sender_sub_type == \"Person\" & recipient_sub_type == \"Person\") |\n    (sender_sub_type == \"Vessel\" & recipient_sub_type == \"Vessel\")\n  )\n\n\n\n2.2.2 Plotted Timeline- People & Vessels\n\n\nShow the code\n# --- FACTORING and DATETIME CLEANING ---\nperson_vessel_df_for_plot &lt;- person_vessel_df %&gt;%\n  mutate(\n    timestamp = as.POSIXct(timestamp),\n    comm_date = as.Date(timestamp),\n    comm_time_of_day = hms::as_hms(format(timestamp, \"%H:%M:%S\")),\n    sender_sub_type = factor(sender_sub_type, levels = c(\"Person\", \"Vessel\")),\n    communicating_pair_sorted = paste(pmin(sender_name, recipient_name), pmax(sender_name, recipient_name), sep = \" & \")\n  )\n\n# --- WRAPPING CONTENT AND TOOLTIP ---\nplot_data1 &lt;- person_vessel_df_for_plot %&gt;%\n  mutate(\n    timestamp = as.POSIXct(timestamp),\n    date = as.Date(timestamp),\n    time = format(timestamp, \"%H:%M:%S\"),\n    wrapped_content = str_wrap(content, width = 50),\n    tooltip_text = paste0(\n      \"&lt;b&gt;Date:&lt;/b&gt; \", date, \"&lt;br&gt;\",\n      \"&lt;b&gt;Time:&lt;/b&gt; \", time, \"&lt;br&gt;\",\n      \"&lt;b&gt;From:&lt;/b&gt; \", sender_name, \"&lt;br&gt;\",\n      \"&lt;b&gt;To:&lt;/b&gt; \", recipient_name, \"&lt;br&gt;\",\n      \"&lt;b&gt;Event_id:&lt;/b&gt; \", event_id, \"&lt;br&gt;&lt;br&gt;\",\n      \"&lt;b&gt;Content:&lt;/b&gt;&lt;br&gt;\", wrapped_content\n    )\n  )\n\n# Plot\np &lt;-ggplot(plot_data1, aes(x = comm_date, y = comm_time_of_day)) +\n  geom_point(aes(\n    color = sender_id,\n    shape = sender_sub_type,\n    text = tooltip_text\n  ),show.legend = c(color = TRUE, shape = FALSE), \n  size = 2, alpha = 0.7) +\n  scale_shape_manual(values = c(\"Person\" = 16, \"Vessel\" = 17)) +\n  facet_wrap(~ sender_sub_type, ncol = 1, scales = \"fixed\") +\n  scale_y_time(\n    limits = hms::as_hms(c(\"08:00:00\", \"14:00:00\")),  # reversed to show time top-to-bottom\n    breaks = hms::as_hms(c(\"08:00:00\", \"09:00:00\", \"10:00:00\", \"11:00:00\", \"12:00:00\", \"13:00:00\", \"14:00:00\")),\n    labels = c(\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\")\n)+\n  scale_x_date(\n  date_breaks = \"1 day\",\n  date_labels = \"%d %b\"\n)+\n  labs(\n    title = \"Communication Events Over Time (Sender's Perspective)\",\n    x = \"Date\",\n    y = \"Time of Day\",\n    color = \"Sender (subtype, name)\"\n  ) +\n  theme_grey() +\n  theme(\n    axis.text.y = element_text(size = 6),\n    axis.title.y = element_text(size = 7),\n    axis.ticks.y = element_line(),\n    axis.text.x = element_text(size = 6, angle = 45, hjust = 1),\n    axis.title.x = element_text(margin = margin(t = 8), size = 7),\n    panel.spacing = unit(0.5, \"lines\"),  # Applies to both x and y spacing\n    strip.text = element_text(size = 8, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 6),\n    legend.title = element_blank()\n  )\n\n# --- Convert to interactive plot ---\nggplotly(p, tooltip = \"tooltip_text\")\n\n\n\n\n\n\n\n2.2.3 Findings on People/ Vessels:\n\nCore logic:\n\nIf two names appear as sender and recipient in the same message, they cannot belong to the same person — i.e., they’re not aliases of each other.\nIf two names sent a message at the exact time, they cannot belong to the same person.\nFor instance, if Nadia sent a message to The Accountant, they would not be the same individual. If Nadia sent a message at 10am to The Accountant and The Lookout also sent a message at 10am to The Intern, Nadia and The Lookout cannot be the same person.\n\nSelect only The Accountant, Mrs. Money, Elise: We see close timings between Mrs. Money and Elise on 8 Oct, and 10 Oct. These were on the same topic. Elise then disappears from radar on 10 Oct. She reappears as The Accountant and Mrs. Money on 11 Oct on the same topic and remains only as The Accountant till 14 Oct.\nSelect only Liam and The Middleman: The Middleman disappeared on 7 Oct and appeared as Liam on 8 Oct. On 11 Oct Mrs. Money asked The Middleman if anything was found by conservation vessels. On the same day, Liam reappeared and replied Elise that nothing was found by them.\nSelect only The Boss and Nadia: The Boss disappeared on 5 Oct and reappeared as Nadia on 8 Oct. Likely the same person.\nSelect only Small Fry and Rodriguez: on 2 Oct Rodriguez corresponded with Remora and Mako on meeting at the slip #14. It happened again on 14 Oct as he took on dual roles and responded to the same message with different names. Likely the same person.\nSelect only The Lookout and Sam: on 7 Oct Sam asked Kelly to get information on who authorized the permit. 2 minutes later, The Lookout (Kelly) responded to The Intern (Sam), that it was signed by Jensen from City Council.\nSeawatch only appeared on 10 Oct but Horizon talked to Seawatch on 8 Oct. Therefore, some other entity is Seawatch before or during 8 Oct. Defender told Seawatch on 3 Oct at 8.39am that it increased its patrol and informed Seawatch to maintain vigilance. The Lookout (Seawatch) responded to Sentinel (Defender) at 8.41am that it acknowledged the need for vigilance."
  },
  {
    "objectID": "tasks.html#entities-breakdown",
    "href": "tasks.html#entities-breakdown",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "3.1 Entities Breakdown",
    "text": "3.1 Entities Breakdown\nCore Logic:\n\nIf two names appear as sender and recipient in the same message, they cannot belong to the same person — i.e., they’re not aliases of each other.\nIf two names sent a message at the exact time, they cannot belong to the same person.\n\nWe created Alluvial Diagrams to chart: real_identity → observed_name → community\n\nExtraction of the list of Entity namesManual Mapping\n\n\n\nunique_names &lt;- sort(unique(c(other_communications_df$sender_name, \n                              other_communications_df$recipient_name)))\nunique_names\n\n [1] \"Boss\"                 \"City Officials\"       \"Clepper Jensen\"      \n [4] \"Davis\"                \"Defender\"             \"EcoVigil\"            \n [7] \"Elise\"                \"Glitters Team\"        \"Green Guardians\"     \n[10] \"Haacklee Harbor\"      \"Himark Harbor\"        \"Horizon\"             \n[13] \"Kelly\"                \"Knowles\"              \"Liam Thorne\"         \n[16] \"Mako\"                 \"Marlin\"               \"Miranda Jordan\"      \n[19] \"Mrs. Money\"           \"Nadia Conti\"          \"Neptune\"             \n[22] \"Northern Light\"       \"Oceanus City Council\" \"Osprey\"              \n[25] \"Paackland Harbor\"     \"Port Security\"        \"Reef Guardian\"       \n[28] \"Remora\"               \"Rodriguez\"            \"Sailor Shifts Team\"  \n[31] \"Sam\"                  \"Samantha Blake\"       \"Seawatch\"            \n[34] \"Sentinel\"             \"Serenity\"             \"Small Fry\"           \n[37] \"The Accountant\"       \"The Intern\"           \"The Lookout\"         \n[40] \"The Middleman\"        \"V. Miesel Shipping\"  \n\n\n\n\n\nname_mapping &lt;- tibble::tibble(\n  observed_name = c(\n    \"Boss\", \"City Officials\", \"Clepper Jensen\", \"Davis\", \"Defender\", \"EcoVigil\",\n    \"Elise\", \"Glitters Team\", \"Green Guardians\", \"Haacklee Harbor\", \"Himark Harbor\", \"Horizon\",\n    \"Kelly\", \"Knowles\", \"Liam Thorne\", \"Mako\", \"Marlin\", \"Miranda Jordan\",\n    \"Mrs. Money\", \"Nadia Conti\", \"Neptune\", \"Northern Light\", \"Oceanus City Council\", \"Osprey\",\n    \"Paackland Harbor\", \"Port Security\", \"Reef Guardian\", \"Remora\", \"Rodriguez\", \"Sailor Shift Team\",\n    \"Sam\", \"Samantha Blake\", \"Seawatch\", \"Sentinel\", \"Serenity\", \"Small Fry\",\n    \"The Accountant\", \"The Intern\", \"The Lookout\", \"The Middleman\", \"V. Miesel Shipping\"\n  ),\n  real_identity = c(\n    \"Nadia Conti\", \"Oceanus City Council\", \"Clepper Jensen\", \"Captain Davis\", \"Sentinel\", \"EcoVigil\",\n    \"Elise\", \"Sailor Shift Team\", \"Green Guardians\", \"Harbor Authority\",\"Harbor Authority\", \"Horizon\",\n    \"Kelly\", \"Knowles\", \"Liam Thorne\", \"Mako\", \"Small Fishing Vessel\", \"Miranda Jordan\",\n    \"Elise\", \"Nadia Conti\", \"Neptune\", \"Commercial Vessel\", \"Oceanus City Council\", \"Tourism Vessel\",\n    \"Harbor Authority\", \"Oceanus City Council\", \"Reef Guardian\", \"Remora\", \"Rodriguez\", \"Sailor Shift Team\",\n    \"Sam\", \"Samantha Blake\", \"Kelly\", \"Sentinel\", \"Private Luxury Yacht\", \"Rodriguez\",\n    \"Elise\", \"Sam\", \"Kelly\", \"Liam Thorne\", \"V. Miesel Shipping\"\n  ),\n  community = c(\n    \"V. Miesel Shipping\", \"City Council\", \"Haacklee Herald\", \"V. Miesel Shipping\", \"Local Conservationist Group\", \"Local Conservationist Group\",\n    \"V. Miesel Shipping\", \"Sailor Shift Team\", \"Local Conservationist Group\", \"Harbor Authority\", \"Harbor Authority\", \"Local Conservationist Group\",\n    \"Local Conservationist Group\", \"V. Miesel Shipping\", \"City Council\", \"V. Miesel Shipping\", \"Maritime\", \"Haacklee Herald\",\n    \"V. Miesel Shipping\", \"V. Miesel Shipping\", \"V. Miesel Shipping\", \"Maritime\", \"City Council\", \"Maritime\",\n    \"Harbor Authority\", \"City Council\", \"Local Conservationist Group\", \"V. Miesel Shipping\", \"V. Miesel Shipping\", \"Sailor Shift Team\",\n    \"V. Miesel Shipping\", \"Sailor Shift Team\", \"Local Conservationist Group\", \"Local Conservationist Group\", \"Maritime\", \"V. Miesel Shipping\",\n    \"V. Miesel Shipping\", \"V. Miesel Shipping\", \"Local Conservationist Group\", \"City Council\", \"V. Miesel Shipping\"\n  )\n)\n\nmulti_members &lt;- tibble::tibble(\n  observed_name = c(\n    #  City Council members (additional to existing)\n    \"Commissioner Blake\", \"Commissioner Torres\", \"Council Knowles\", \"The Middleman\", \"Jensen from City Council\", \"Liam Thorne\",\n\n    # Sailor Shift Team (may already exist, but we ensure all)\n    \"Boss\", \"Council Knowles\", \"Davis\", \"Glitters Team\", \"Liam Thorne\", \"Mako\", \"Mrs. Money\", \"Nadia Conti\", \"Neptune\",\n    \"Remora\", \"Rodriguez\", \"Sam\", \"Samantha Blake\", \"Small Fry\", \"The Accountant\", \"The Intern\", \"The Middleman\", \"Elise\",\n\n    #  Influential Families\n    \"Council Knowles\", \"V. Miesel Shipping\",\n\n    #  Conservationist Group\n    \"Defender\", \"EcoVigil\", \"Green Guardians\", \"Horizon\", \"Kelly\", \"Reef Guardian\", \"Seawatch\", \"Sentinel\", \"The Lookout\"\n  ),\n  real_identity = c(\n    \"Commissioner Blake\", \"Commissioner Torres\", \"Council Knowles\", \"Liam Thorne\", \"Clepper Jensen\", \"Liam Thorne\",\n\n    \"Nadia Conti\", \"Council Knowles\", \"Captain Davis\", \"Sailor Shift Team\", \"Liam Thorne\", \"Mako\", \"Elise\", \"Nadia Conti\", \"Neptune\",\n    \"Remora\", \"Rodriguez\", \"Sam\", \"Samantha Blake\", \"Rodriguez\", \"Elise\", \"Sam\", \"Liam Thorne\", \"Elise\",\n\n    \"Council Knowles\", \"V. Miesel Shipping\",\n\n    \"Sentinel\", \"EcoVigil\", \"Green Guardians\", \"Horizon\", \"Kelly\", \"Reef Guardian\", \"The Lookout\", \"Sentinel\", \"Kelly\"\n  ),\n  community = c(\n    rep(\"City Council\", 6),\n    rep(\"Sailor Shift Team\", 18),\n    rep(\"Influential Families\", 2),\n    rep(\"Local Conservationist Group\", 9)\n  )\n)"
  },
  {
    "objectID": "tasks.html#entities--interactive-alluvial-diagrams",
    "href": "tasks.html#entities--interactive-alluvial-diagrams",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "Entities- Interactive Alluvial Diagrams",
    "text": "Entities- Interactive Alluvial Diagrams\nHover to see details for individual identities.\nReal Identity from analysis -&gt; Observed Name from data -&gt; Community\nThis will probably be a drop down for each name in Shiny.\n\n# --- Libraries ---\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggalluvial)\nlibrary(stringr)\nlibrary(plotly)\n\n# --- 1. Build Alluvial Dataset ---\nalluvial_data &lt;- name_mapping %&gt;%\n  bind_rows(multi_members) %&gt;% # Combine the two data sources\n  distinct() %&gt;% # Remove any duplicate rows after combining\n  filter(!is.na(real_identity) & !is.na(community)) %&gt;%\n  count(real_identity, observed_name, community, name = \"value\") %&gt;%\n  mutate(tooltip = paste0( # Create the tooltip string\n    \"Real Identity: \", real_identity, \"&lt;br&gt;\",\n    \"Observed Name: \", observed_name, \"&lt;br&gt;\",\n    \"Community: \", community, \"&lt;br&gt;\",\n    \"Count: \", value\n  ))\n\n# --- 3. Create static ggplot object (original version) ---\np &lt;- ggplot(alluvial_data,\n            aes(axis1 = real_identity, axis2 = observed_name, axis3 = community,\n                y = value,\n                text = tooltip # Map the custom tooltip string to the 'text' aesthetic\n            )) +\n  geom_alluvium(aes(fill = real_identity), width = 1/12, alpha = 0.8) +\n  geom_stratum(width = 1/12, fill = \"grey90\", color = \"black\", aes(text = NULL)) + # No dual-role fill here\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 3.5, hjust = 0) +\n  scale_x_discrete(\n    limits = c(\"Real Identity\", \"Observed Name\", \"Community\"),\n    expand = c(.05, .25)\n  ) +\n  labs(\n    title = \"All Identity Flows\",\n    x = NULL, y = \"Link Count\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\", # No legend for fill here\n    panel.grid = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks = element_blank(),\n    plot.margin = margin(10, 80, 10, 10),\n    axis.text.x = element_text(face = \"bold\")\n  )\n\n# --- 4. Convert to interactive Plotly object ---\n# 'tooltip = \"text\"' tells Plotly to use the content of the 'text' aesthetic\ninteractive_plot &lt;- ggplotly(p, tooltip = \"text\", height = 800, width = 1000)\ninteractive_plot # This line will print the Plotly object in  Quarto output"
  },
  {
    "objectID": "tasks.html#nadias-ego-network--louvain-community",
    "href": "tasks.html#nadias-ego-network--louvain-community",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "4.1 Nadia’s Ego Network- Louvain community",
    "text": "4.1 Nadia’s Ego Network- Louvain community\n\nEgo NetworkThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\nset.seed(1234)\n\n# Assume g_full includes Nadia — not g from other_communications_df\ng_igraph &lt;- as.igraph(g)\n\n# Confirm Nadia exists\nif (!\"Nadia Conti\" %in% V(g_igraph)$name) stop(\"Nadia Conti not found in the graph.\")\n\n# Get ego subgraph\nnadia_ego_igraph &lt;- make_ego_graph(g_igraph, order = 1, nodes = which(V(g_igraph)$name == \"Nadia Conti\"), mode = \"all\")[[1]]\n\n# Convert to tidygraph\nnadia_ego_graph &lt;- as_tbl_graph(nadia_ego_igraph)\n\n# Convert to undirected for Louvain\nnadia_ego_graph &lt;- nadia_ego_graph %&gt;% \n  to_undirected() %&gt;% \n  activate(nodes) %&gt;%\n  mutate(\n    community = group_louvain(),\n    pagerank = centrality_pagerank()\n  )\n\n# Plot Nadia's ego network\nggraph(nadia_ego_graph, layout = \"fr\") +\n  geom_edge_link(alpha = 0.4) +\n  geom_node_point(aes(size = pagerank, color = as.factor(community)), alpha = 0.9) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_void() +\n  labs(\n    title = \"Nadia Conti’s Ego Network\",\n    subtitle = \"Nodes sized by PageRank, colored by Louvain community\",\n    color = \"Community\",\n    size = \"PageRank\"\n  )\n\n\n\n\nWe wanted to find out if there were sub communities within Nadia’s direct network that worked closely together.\nThe orange community were possibly involved in Sailor Shifts’s music video, while the green community were likely regarding ensuring compliance to authorities such as officials, the harbour and conservation team.\nNadia, Elise, and Marlin were the orange nodes that directly linked to the green nodes."
  },
  {
    "objectID": "tasks.html#nadias-sent-and-received-ego-networks--viznetwork",
    "href": "tasks.html#nadias-sent-and-received-ego-networks--viznetwork",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "4.2 Nadia’s Sent and Received Ego Networks- VizNetwork",
    "text": "4.2 Nadia’s Sent and Received Ego Networks- VizNetwork\n\n4.2.1 Data Preparation\n\nPreparation- Nodes & EdgesThe Code\n\n\n\n\n[1] \"Nadia Conti's ID: Nadia Conti\"\n\n\n[1] \"Nadia Conti's Sub_type: Person\"\n\n\n[1] \"--- Nadia's Sent Communications ---\"\n\n\n\n\n|communication_type |sender_id   |recipient_id         |recipient_name       |recipient_sub_type |event_id                |content                                                                                                                                                                                                                                                                                    |timestamp           |sender_name |sender_sub_type |\n|:------------------|:-----------|:--------------------|:--------------------|:------------------|:-----------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------|:-----------|:---------------|\n|sent               |Nadia Conti |Haacklee Harbor      |Haacklee Harbor      |Location           |Event_Communication_331 |Haacklee Harbor, this is Nadia Conti. I need to cancel the special access corridor arrangements for Nemo Reef immediately. Plans have changed due to unforeseen circumstances. Destroy all related documentation. I'll contact you when we're ready to proceed with alternative locations. |2040-10-05 09:45:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |Oceanus City Council |Oceanus City Council |Organization       |Event_Communication_334 |This is Nadia Conti. My cancellation was due to scheduling conflicts with our tourism development initiatives. I wasn't aware of any permit approvals. I'll submit revised documentation for alternative sustainable tourism proposals next week.                                          |2040-10-05 09:49:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |Liam Thorne          |Liam Thorne          |Person             |Event_Communication_529 |Liam, Nadia here. Need your services urgently. Investigation brewing around Nemo Reef permits. Double your usual fee if you can ensure Harbor Master remains cooperative through next week. Meet at the usual place tomorrow, 10PM.                                                        |2040-10-08 08:18:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |Neptune              |Neptune              |Vessel             |Event_Communication_536 |Neptune, this is Nadia. Need clarity on 'underwater foundation work' at Nemo Reef. This extends beyond our agreed scope. Meet me at the marina tomorrow at 6AM to discuss implications and additional resource requirements.                                                               |2040-10-08 08:25:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |Neptune              |Neptune              |Vessel             |Event_Communication_538 |Neptune, Nadia here. Just confirming our 0600 meeting at the marina. I've reviewed the modified equipment specs with The Accountant. Please bring detailed timeline for foundation work and cost implications. We need to stay under radar.                                                |2040-10-08 08:30:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |Marlin               |Marlin               |Vessel             |Event_Communication_584 |Marlin, Nadia here. I understand you're inquiring about eastern shoal routes. Those are temporary diversions due to equipment transport needs. I'll have Davis provide the necessary documentation tonight. Nothing to be concerned about.                                                 |2040-10-08 11:23:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |Liam Thorne          |Liam Thorne          |Person             |Event_Communication_795 |Liam, Nadia here. Redirect all remaining operations from southwest immediately. Move equipment to our secondary location. I'll handle EcoVigil through proper channels. Meet me at the usual place at 2100 hours with updated documentation.                                               |2040-10-12 08:44:00 |Nadia Conti |Person          |\n|sent               |Nadia Conti |V. Miesel Shipping   |V. Miesel Shipping   |Organization       |Event_Communication_847 |This is Nadia. Documentation for permit #CR-7844 is complete. Meeting The Middleman at 2100 to handle final details. Recommend accelerating timeline due to EcoVigil's ROV approval. Shifting operations from southwest immediately. Will update after meeting.                            |2040-10-12 11:19:00 |Nadia Conti |Person          |\n\n\n[1] \"--- Nadia's Received Communications ---\"\n\n\n\n\n|communication_type |sender_id            |sender_name          |sender_sub_type |recipient_id |event_id                |content                                                                                                                                                                                                                                                                                                  |timestamp           |recipient_name |recipient_sub_type |\n|:------------------|:--------------------|:--------------------|:---------------|:------------|:-----------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------|:--------------|:------------------|\n|received           |Haacklee Harbor      |Haacklee Harbor      |Location        |Nadia Conti  |Event_Communication_330 |Haacklee Harbor to Nadia Conti. Following your visit yesterday regarding the Nemo Reef event logistics, we've prepared the necessary documentation. Harbor staff is ready to facilitate the special access corridor arrangements as discussed. Please confirm timeline for implementation.               |2040-10-05 09:44:00 |Nadia Conti    |Person             |\n|received           |Oceanus City Council |Oceanus City Council |Organization    |Nadia Conti  |Event_Communication_333 |Ms. Conti, this is Oceanus City Council. We need clarification regarding your canceled Nemo Reef event arrangements at Haacklee Harbor. Please explain your documentation destruction request immediately. This relates to our newly expedited permit approvals.                                         |2040-10-05 09:48:00 |Nadia Conti    |Person             |\n|received           |Sailor Shifts Team   |Sailor Shifts Team   |Organization    |Nadia Conti  |Event_Communication_520 |Hi Nadia, this is the Sailor Shifts Team. Received your message about permit assistance - thank you! We urgently need to discuss tomorrow's staffing requirements. Can you confirm how many additional crew members we should bring for the setup?                                                       |2040-10-07 11:57:00 |Nadia Conti    |Person             |\n|received           |Davis                |Davis                |Person          |Nadia Conti  |Event_Communication_521 |Davis, Nadia here. Let's meet at 7PM at the marina office to review documentation. I've been working with alternative channels for permits. Bring all shipping manifests - we'll need to create a clean paper trail immediately.                                                                         |2040-10-07 12:00:00 |Nadia Conti    |Person             |\n|received           |Elise                |Elise                |Person          |Nadia Conti  |Event_Communication_528 |Nadia, Elise here. Meeting at Nemo Reef 0500 tomorrow to establish payment protocols. Sam uncovered V. Miesel shipping lanes overlapping with Mako by 40%. Neptune mentioned 'underwater foundation work' - outside our original scope. Need your assessment.                                            |2040-10-08 08:15:00 |Nadia Conti    |Person             |\n|received           |Liam Thorne          |Liam Thorne          |Person          |Nadia Conti  |Event_Communication_535 |Nadia, Liam here. Meeting confirmed for tomorrow at 10PM. I've redirected Harbor Master's attention and implemented new patrol schedules that work in our favor. Council suspects nothing about Nemo Reef. Bring payment as discussed.                                                                   |2040-10-08 08:24:00 |Nadia Conti    |Person             |\n|received           |Neptune              |Neptune              |Vessel          |Nadia Conti  |Event_Communication_537 |Neptune to Nadia. I'm aware of the foundation work concerns. We're delivering the additional heavy equipment today as requested. Will meet you at 0600 as planned to discuss resource adjustments and review modified equipment specifications that Elise has approved funding for.                      |2040-10-08 08:27:00 |Nadia Conti    |Person             |\n|received           |Davis                |Davis                |Person          |Nadia Conti  |Event_Communication_582 |Nadia, Davis here. I'll be at the marina office at 7PM with all shipping manifests. Could you bring copies of permit #CR-7844? Marlin's asking about unusual vessel routes near eastern shoals - might need to address this.                                                                             |2040-10-08 11:21:00 |Nadia Conti    |Person             |\n|received           |Davis                |Davis                |Person          |Nadia Conti  |Event_Communication_585 |Davis, Marlin here again. Nadia mentioned you'd provide documentation about those eastern shoal diversions tonight. Just checking if that's still coming through. Need to understand these new patterns while my vessel's being repaired.                                                                |2040-10-08 11:26:00 |Nadia Conti    |Person             |\n|received           |Elise                |Elise                |Person          |Nadia Conti  |Event_Communication_601 |Nadia, Elise here. Situation escalating. Permanent underwater construction confirmed at Nemo Reef. Sam reports concrete forms suggesting structures beyond equipment installation. Need urgent clarification on real scope and V. Miesel's involvement before tomorrow's meeting. Prepare contingencies. |2040-10-09 08:54:00 |Nadia Conti    |Person             |\n\n\n[1] \"--- Nadia's Full Communication Timeline (Combined) ---\"\n\n\n\n\n|communication_type |sender_id            |recipient_id         |recipient_name       |recipient_sub_type |event_id                |content                                                                                                                                                                                                                                                                                    |timestamp           |sender_name          |sender_sub_type |communicating_pair_sorted        |\n|:------------------|:--------------------|:--------------------|:--------------------|:------------------|:-----------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------|:--------------------|:---------------|:--------------------------------|\n|received           |Haacklee Harbor      |Nadia Conti          |Nadia Conti          |Person             |Event_Communication_330 |Haacklee Harbor to Nadia Conti. Following your visit yesterday regarding the Nemo Reef event logistics, we've prepared the necessary documentation. Harbor staff is ready to facilitate the special access corridor arrangements as discussed. Please confirm timeline for implementation. |2040-10-05 09:44:00 |Haacklee Harbor      |Location        |Haacklee Harbor_Nadia Conti      |\n|sent               |Nadia Conti          |Haacklee Harbor      |Haacklee Harbor      |Location           |Event_Communication_331 |Haacklee Harbor, this is Nadia Conti. I need to cancel the special access corridor arrangements for Nemo Reef immediately. Plans have changed due to unforeseen circumstances. Destroy all related documentation. I'll contact you when we're ready to proceed with alternative locations. |2040-10-05 09:45:00 |Nadia Conti          |Person          |Haacklee Harbor_Nadia Conti      |\n|received           |Oceanus City Council |Nadia Conti          |Nadia Conti          |Person             |Event_Communication_333 |Ms. Conti, this is Oceanus City Council. We need clarification regarding your canceled Nemo Reef event arrangements at Haacklee Harbor. Please explain your documentation destruction request immediately. This relates to our newly expedited permit approvals.                           |2040-10-05 09:48:00 |Oceanus City Council |Organization    |Nadia Conti_Oceanus City Council |\n|sent               |Nadia Conti          |Oceanus City Council |Oceanus City Council |Organization       |Event_Communication_334 |This is Nadia Conti. My cancellation was due to scheduling conflicts with our tourism development initiatives. I wasn't aware of any permit approvals. I'll submit revised documentation for alternative sustainable tourism proposals next week.                                          |2040-10-05 09:49:00 |Nadia Conti          |Person          |Nadia Conti_Oceanus City Council |\n|received           |Sailor Shifts Team   |Nadia Conti          |Nadia Conti          |Person             |Event_Communication_520 |Hi Nadia, this is the Sailor Shifts Team. Received your message about permit assistance - thank you! We urgently need to discuss tomorrow's staffing requirements. Can you confirm how many additional crew members we should bring for the setup?                                         |2040-10-07 11:57:00 |Sailor Shifts Team   |Organization    |Nadia Conti_Sailor Shifts Team   |\n|received           |Davis                |Nadia Conti          |Nadia Conti          |Person             |Event_Communication_521 |Davis, Nadia here. Let's meet at 7PM at the marina office to review documentation. I've been working with alternative channels for permits. Bring all shipping manifests - we'll need to create a clean paper trail immediately.                                                           |2040-10-07 12:00:00 |Davis                |Person          |Davis_Nadia Conti                |\n|received           |Elise                |Nadia Conti          |Nadia Conti          |Person             |Event_Communication_528 |Nadia, Elise here. Meeting at Nemo Reef 0500 tomorrow to establish payment protocols. Sam uncovered V. Miesel shipping lanes overlapping with Mako by 40%. Neptune mentioned 'underwater foundation work' - outside our original scope. Need your assessment.                              |2040-10-08 08:15:00 |Elise                |Person          |Elise_Nadia Conti                |\n|sent               |Nadia Conti          |Liam Thorne          |Liam Thorne          |Person             |Event_Communication_529 |Liam, Nadia here. Need your services urgently. Investigation brewing around Nemo Reef permits. Double your usual fee if you can ensure Harbor Master remains cooperative through next week. Meet at the usual place tomorrow, 10PM.                                                        |2040-10-08 08:18:00 |Nadia Conti          |Person          |Liam Thorne_Nadia Conti          |\n|received           |Liam Thorne          |Nadia Conti          |Nadia Conti          |Person             |Event_Communication_535 |Nadia, Liam here. Meeting confirmed for tomorrow at 10PM. I've redirected Harbor Master's attention and implemented new patrol schedules that work in our favor. Council suspects nothing about Nemo Reef. Bring payment as discussed.                                                     |2040-10-08 08:24:00 |Liam Thorne          |Person          |Liam Thorne_Nadia Conti          |\n|sent               |Nadia Conti          |Neptune              |Neptune              |Vessel             |Event_Communication_536 |Neptune, this is Nadia. Need clarity on 'underwater foundation work' at Nemo Reef. This extends beyond our agreed scope. Meet me at the marina tomorrow at 6AM to discuss implications and additional resource requirements.                                                               |2040-10-08 08:25:00 |Nadia Conti          |Person          |Nadia Conti_Neptune              |\n\n\n[1] \"--- Checking: Number of nodes and edges in Nadia's Ego Network Graph ---\"\n\n\n[1] \"Nodes: 13 Edges: 17\"\n\n\n[1] \"---------------------------------------------------------------------\"\n\n\n\n\n# --- 2. Clean and Prepare Nodes ---\nmc3_nodes_cleaned &lt;- mc3_nodes_raw %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  # Rename 'type' to 'supertype' to reduce confusion with communication type\n  rename(supertype = type) %&gt;%\n  # Select only columns that are needed and are consistently present\n  select(id, name, sub_type, content, timestamp) # Keep timestamp as character for now\n\n# --- 3. Clean and Prepare Edges ---\n# Rename 'type' in edges to 'edge_type' to avoid conflict with node 'supertype'\nmc3_edges_cleaned &lt;- mc3_edges_raw %&gt;%\n  rename(from_id = source,\n         to_id = target,\n         edge_type = type) %&gt;% # Renamed 'type' to 'edge_type'\n  mutate(across(c(from_id, to_id), as.character)) %&gt;%\n  # Filter out any edges where from_id or to_id are not in cleaned nodes\n  filter(from_id %in% mc3_nodes_cleaned$id,\n         to_id %in% mc3_nodes_cleaned$id)\n\n# --- 4. Identify Nadia Conti's ID and Sub_type ---\nnadia_info &lt;- mc3_nodes_cleaned %&gt;%\n  filter(name == \"Nadia Conti\") %&gt;%\n  select(id, sub_type) # Corrected: Select sub_type here, not supertype\n\nnadia_id &lt;- nadia_info %&gt;% pull(id)\nnadia_sub_type &lt;- nadia_info %&gt;% pull(sub_type) # New variable for Nadia's sub_type\n\n\nif (length(nadia_id) == 0) {\n  stop(\"Nadia Conti not found in the nodes data. Please check the 'name' column or the ID.\")\n} else if (length(nadia_id) &gt; 1) {\n  warning(\"Multiple entries found for Nadia Conti. Using the first one.\")\n  nadia_id &lt;- nadia_id[1]\n  nadia_sub_type &lt;- nadia_sub_type[1] # Ensure sub_type is also taken for the first one\n}\n\nprint(paste(\"Nadia Conti's ID:\", nadia_id))\nprint(paste(\"Nadia Conti's Sub_type:\", nadia_sub_type))\n\n# --- 5. Extract Nadia's Sent Communications ---\n# Logic: Nadia (source) --sent--&gt; Event_Communication (target) --received--&gt; Recipient (target)\nnadia_sent_communications &lt;- mc3_edges_cleaned %&gt;%\n  filter(from_id == nadia_id, edge_type == \"sent\") %&gt;%\n  # Join with nodes to get content and timestamp of the Event_Communication node\n  left_join(mc3_nodes_cleaned %&gt;% select(id, content, timestamp),\n            by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(event_id = to_id, event_content = content, event_timestamp = timestamp) %&gt;%\n  # Now, find the recipient of this communication event\n  left_join(mc3_edges_cleaned %&gt;%\n              filter(edge_type == \"received\") %&gt;%\n              select(event_id_match = from_id, recipient_id = to_id),\n            by = c(\"event_id\" = \"event_id_match\")) %&gt;%\n  # Join with nodes to get the recipient's name AND sub_type\n  left_join(mc3_nodes_cleaned %&gt;% select(id, name, sub_type), # Select sub_type here\n            by = c(\"recipient_id\" = \"id\")) %&gt;%\n  rename(recipient_name = name, recipient_sub_type = sub_type) %&gt;% # Rename sub_type\n  # Select and rename final columns for sent communications\n  select(\n    communication_type = edge_type, # This will be \"sent\"\n    sender_id = from_id,\n    recipient_id,\n    recipient_name,\n    recipient_sub_type, # Include in final select\n    event_id,\n    content = event_content,\n    timestamp = event_timestamp # Timestamp is still character here\n  ) %&gt;%\n  mutate(\n    sender_name = !!nadia_id, # Explicitly set sender_name to Nadia's ID/name using !!\n    sender_sub_type = !!nadia_sub_type # Assign Nadia's sub_type as a constant value using !!\n  )\n\nprint(\"--- Nadia's Sent Communications ---\")\nprint(kable(head(nadia_sent_communications, 10), format = \"markdown\", align = \"l\"))\n\n\n# --- 6. Extract Nadia's Received Communications ---\n# Logic: Sender (source) --sent--&gt; Event_Communication (target) --received--&gt; Nadia (target)\nnadia_received_communications &lt;- mc3_edges_cleaned %&gt;%\n  filter(to_id == nadia_id, edge_type == \"received\") %&gt;%\n  # The source of this edge is the Event_Communication node\n  rename(event_id = from_id) %&gt;%\n  # Join with nodes to get content and timestamp of the Event_Communication node\n  left_join(mc3_nodes_cleaned %&gt;% select(id, content, timestamp),\n            by = c(\"event_id\" = \"id\")) %&gt;%\n  rename(event_content = content, event_timestamp = timestamp) %&gt;%\n  # Now, find the original sender of this communication event\n  left_join(mc3_edges_cleaned %&gt;%\n              filter(edge_type == \"sent\") %&gt;%\n              select(event_id_match = to_id, sender_id = from_id),\n            by = c(\"event_id\" = \"event_id_match\")) %&gt;%\n  # Join with nodes to get the sender's name AND sub_type\n  left_join(mc3_nodes_cleaned %&gt;% select(id, name, sub_type), # Select sub_type here\n            by = c(\"sender_id\" = \"id\")) %&gt;%\n  rename(sender_name = name, sender_sub_type = sub_type) %&gt;% # Rename sub_type\n  # Select and rename final columns for received communications\n  select(\n    communication_type = edge_type, # This will be \"received\"\n    sender_id,\n    sender_name,\n    sender_sub_type, # Include in final select\n    recipient_id = to_id,\n    event_id,\n    content = event_content,\n    timestamp = event_timestamp\n  ) %&gt;%\n  mutate(\n    recipient_name = !!nadia_id, # Explicitly set recipient_name to Nadia's ID/name using !!\n    recipient_sub_type = !!nadia_sub_type # Assign Nadia's sub_type as a constant value using !!\n  )\n\nprint(\"--- Nadia's Received Communications ---\")\nprint(kable(head(nadia_received_communications, 10), format = \"markdown\", align = \"l\"))\n\n# --- 7. Combine Sent and Received Communications for Full Timeline ---\nnadia_full_communications_timeline &lt;- bind_rows(\n  nadia_sent_communications,\n  nadia_received_communications\n) %&gt;%\n  arrange(timestamp) %&gt;%\n  # CRITICAL FIX: Explicitly convert timestamp to POSIXct after bind_rows\n  # Use as.POSIXct with the observed format string\n  mutate(timestamp = as.POSIXct(timestamp, format = \"%Y-%m-%d %H:%M:%S\")) %&gt;%\n  # NEW: Create a sorted communicating pair for consistent coloring\n  rowwise() %&gt;% # Process row by row\n  mutate(communicating_pair_sorted = paste(sort(c(sender_name, recipient_name)), collapse = \"_\")) %&gt;%\n  ungroup() # Return to normal data frame operations\n\nprint(\"--- Nadia's Full Communication Timeline (Combined) ---\")\nprint(kable(head(nadia_full_communications_timeline, 10), format = \"markdown\", align = \"l\"))\n\n# --- 8. Prepare Data for Ego Network Visualization (Direct Person-to-Person/Entity) ---\n# Build nodes and edges directly from nadia_full_communications_timeline,\n# focusing on direct sender-recipient connections.\n# Nodes for the ego network graph: Collect all unique sender and recipient IDs\nall_ego_person_entity_ids &lt;- nadia_full_communications_timeline %&gt;%\n  select(id = sender_id) %&gt;%\n  bind_rows(nadia_full_communications_timeline %&gt;% select(id = recipient_id)) %&gt;%\n  distinct(id) %&gt;%\n  filter(!is.na(id)) # Ensure no NA IDs\n\n# Filter mc3_nodes_cleaned to get attributes for these person/entity nodes\nego_nodes_for_graph &lt;- mc3_nodes_cleaned %&gt;%\n  filter(id %in% all_ego_person_entity_ids$id) %&gt;%\n  filter(!is.na(id)) %&gt;% # Ensure no NA IDs in nodes for graph\n  # Add attributes for visualization\n  mutate(\n    is_nadia = ifelse(id == nadia_id, TRUE, FALSE),\n    # Create a new column for legend grouping that includes Nadia as a distinct category\n    node_legend_group = ifelse(is_nadia, \"Nadia Conti\", sub_type),\n    node_size = ifelse(is_nadia, 20, 18), # Further increased node sizes: Nadia 20, others 10\n    display_name = ifelse(is_nadia, \"Nadia Conti\", name) # Use actual name for others\n  ) %&gt;%\n  filter(!is.na(sub_type)) # Ensure nodes have a sub_type for consistent plotting\n\n# Calculate communication counts for each node for hover text\nnode_comm_summary &lt;- nadia_full_communications_timeline %&gt;%\n  group_by(id = sender_id) %&gt;%\n  summarise(sent_count = n(), .groups = 'drop') %&gt;%\n  full_join(nadia_full_communications_timeline %&gt;%\n              group_by(id = recipient_id) %&gt;%\n              summarise(received_count = n(), .groups = 'drop'),\n            by = \"id\") %&gt;%\n  mutate(\n    sent_count = replace_na(sent_count, 0),\n    received_count = replace_na(received_count, 0)\n  )\n\n# Join communication summary and create hover text for nodes\nego_nodes_for_graph &lt;- ego_nodes_for_graph %&gt;%\n  left_join(node_comm_summary, by = \"id\") %&gt;%\n  mutate(\n    hover_text = paste(\n      \"Name:\", display_name, \"&lt;br&gt;\",\n      \"Type:\", node_legend_group, \"&lt;br&gt;\",\n      \"Sent Communications:\", sent_count, \"&lt;br&gt;\",\n      \"Received Communications:\", received_count\n    )\n  )\n\n# Edges for the ego network graph: Direct Sender -&gt; Recipient edges\n# Aggregate to count occurrences for edge thickness\nego_edges_for_graph &lt;- nadia_full_communications_timeline %&gt;%\n  # Group by sender, recipient, their names, and communication type to count interactions\n  group_by(from = sender_id, to = recipient_id, sender_name, recipient_name, communication_type) %&gt;%\n  summarise(\n    count_of_comm = n(), # Number of times this specific communication happened\n    content_sample = paste(head(content, 1), collapse = \"; \"), # Sample content\n    timestamp_min = min(timestamp, na.rm = TRUE),\n    timestamp_max = max(timestamp, na.rm = TRUE),\n    .groups = 'drop'\n  ) %&gt;%\n  # Add the 'nadia_role_in_comm' column for coloring based on Nadia's perspective\n  mutate(\n    nadia_role_in_comm = case_when(\n      from == nadia_id & communication_type == \"sent\" ~ \"Nadia Sent\",\n      to == nadia_id & communication_type == \"received\" ~ \"Nadia Received\",\n      TRUE ~ \"Other Communication\" # For communications not directly involving Nadia as sender/recipient\n    )\n  ) %&gt;%\n  # Ensure 'from' and 'to' are character and non-NA\n  mutate(\n    from = as.character(from),\n    to = as.character(to)\n  ) %&gt;%\n  filter(!is.na(from) & !is.na(to)) %&gt;%\n  # Filter out edges where 'from' or 'to' IDs are NOT in the final ego_nodes_for_graph\n  filter(from %in% ego_nodes_for_graph$id, to %in% ego_nodes_for_graph$id) %&gt;%\n  # Create hover text for edges\n  mutate(\n    hover_text = paste(\n      \"From:\", sender_name, \"&lt;br&gt;\",\n      \"To:\", recipient_name, \"&lt;br&gt;\",\n      \"Type:\", communication_type, \"&lt;br&gt;\",\n      \"Count:\", count_of_comm, \"&lt;br&gt;\",\n      \"First:\", format(timestamp_min, \"%Y-%m-%d %H:%M:%S\"), \"&lt;br&gt;\",\n      \"Last:\", format(timestamp_max, \"%Y-%m-%d %H:%M:%S\"), \"&lt;br&gt;\",\n      \"Content Sample:\", content_sample\n    )\n  )\n\n# Create the tbl_graph object for the ego network\nnadia_ego_network_graph &lt;- tbl_graph(nodes = ego_nodes_for_graph, edges = ego_edges_for_graph, directed = TRUE)\n\nprint(\"--- Checking: Number of nodes and edges in Nadia's Ego Network Graph ---\")\nprint(paste(\"Nodes:\", gorder(nadia_ego_network_graph), \"Edges:\", gsize(nadia_ego_network_graph)))\nprint(\"---------------------------------------------------------------------\")\n\n\n\n\n\n4.2.2 Nadia’s Sent and Received Ego Networks\n\n\n4.2.2.1 Sent Communications Network\n\n\n\n\n\n\n\n\n\n\nShow the code\n# Define custom colors for node types (reusing from previous code)\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",      # Blue\n  \"Vessel\" = \"#D55E00\",      # Orange\n  \"Organization\" = \"#117733\", # Green\n  \"Location\" = \"#AA4499\",   # Purple\n  \"Nadia Conti\" = \"red\"      # Special color for Nadia\n)\n\n# Define custom shapes for node subtypes\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",        # Circle for visNetwork\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Nadia Conti\" = \"star\"   # Star shape for Nadia in visNetwork\n)\n\n# Separate the edges into two sets: Nadia Sent and Nadia Received\nedges_sent &lt;- ego_edges_for_graph %&gt;%\n  filter(nadia_role_in_comm == \"Nadia Sent\")\n\nedges_received &lt;- ego_edges_for_graph %&gt;%\n  filter(nadia_role_in_comm == \"Nadia Received\")\n\n# Function to build visNetwork plot for a given edge set\nbuild_visnetwork_plot &lt;- function(edge_df, title_label) {\n  # Prepare nodes from edge list\n  node_ids &lt;- unique(c(edge_df$from, edge_df$to))\n\n  nodes &lt;- ego_nodes_for_graph %&gt;%\n    filter(id %in% node_ids) %&gt;%\n    mutate(\n      label = ifelse(display_name == \"Nadia Conti\", \"\", display_name),\n      title = paste0(\n        \"&lt;b&gt;\", display_name, \"&lt;/b&gt;&lt;br&gt;\",\n        \"Type: \", node_legend_group, \"&lt;br&gt;\",\n        \"Sent: \", sent_count, \"&lt;br&gt;\",\n        \"Received: \", received_count\n      ),\n      group = ifelse(display_name == \"Nadia Conti\", \"Nadia Conti\", node_legend_group)\n    ) %&gt;%\n    select(id, label, title, group, value = node_size)\n\n  # Prepare edges with arrow and tooltip\n  edges &lt;- edge_df %&gt;%\n    filter(!is.na(from) & !is.na(to)) %&gt;%\n    mutate(\n      arrows = \"to\",\n      title = paste0(\n        \"&lt;b&gt;From:&lt;/b&gt; \", sender_name, \"&lt;br&gt;\",\n        \"&lt;b&gt;To:&lt;/b&gt; \", recipient_name, \"&lt;br&gt;\",\n        \"&lt;b&gt;Type:&lt;/b&gt; \", communication_type, \"&lt;br&gt;\",\n        \"&lt;b&gt;Count:&lt;/b&gt; \", count_of_comm, \"&lt;br&gt;\",\n        \"&lt;b&gt;First:&lt;/b&gt; \", format(timestamp_min, \"%Y-%m-%d %H:%M:%S\"), \"&lt;br&gt;\",\n        \"&lt;b&gt;Last:&lt;/b&gt; \", format(timestamp_max, \"%Y-%m-%d %H:%M:%S\"), \"&lt;br&gt;\",\n      \"&lt;b&gt;Content Sample:&lt;/b&gt;&lt;br&gt;&lt;div style='max-width:300px;white-space:normal;'&gt;\", content_sample, \"&lt;/div&gt;\"\n      )\n    ) %&gt;%\n    select(from, to, arrows, title, width = count_of_comm)\n\n  # Create visNetwork\n  visNetwork(nodes, edges, width = \"100%\", height = \"600px\") %&gt;%\n    visEdges(smooth = FALSE, arrows = list(to = list(enabled = TRUE, scaleFactor = 1.5))) %&gt;%\n    visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n    visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n    visNodes(font = list(size = 14)) %&gt;%\n    visGroups(groupname = \"Person\", color = node_legend_colors_plot[[\"Person\"]], shape = node_legend_shapes_plot[[\"Person\"]]) %&gt;%\n    visGroups(groupname = \"Vessel\", color = node_legend_colors_plot[[\"Vessel\"]], shape = node_legend_shapes_plot[[\"Vessel\"]]) %&gt;%\n    visGroups(groupname = \"Organization\", color = node_legend_colors_plot[[\"Organization\"]], shape = node_legend_shapes_plot[[\"Organization\"]]) %&gt;%\n    visGroups(groupname = \"Location\", color = node_legend_colors_plot[[\"Location\"]], shape = node_legend_shapes_plot[[\"Location\"]]) %&gt;%\n    visGroups(groupname = \"Nadia Conti\", color = node_legend_colors_plot[[\"Nadia Conti\"]], shape = node_legend_shapes_plot[[\"Nadia Conti\"]]) %&gt;%\n      visLegend(\n    addNodes = legend_df,\n    ncol = 2,\n    position = \"left\",\n    main = \"Entity (Sub)Types\",\n    useGroups = FALSE) %&gt;%\n    visLayout(randomSeed = 123) %&gt;%\n    visNetwork::visExport() %&gt;%\n    visNetwork::visPhysics(enabled = TRUE) %&gt;%\n    visNetwork::visInteraction(navigationButtons = TRUE) %&gt;%\n    visNetwork::visEvents(stabilizationIterationsDone = \"function () {this.setOptions({physics:false});}\")\n}\n\n# Build and show visNetwork plots\nbuild_visnetwork_plot(edges_sent, \"Nadia Sent Ego Network\")\n\n\n\n\n4.2.2.2 Received Communications Network\n\n\n\n\n\n\n\n\n\n\nShow the code\nbuild_visnetwork_plot(edges_received, \"Nadia Received Ego Network\")\n\n\n\n\n4.2.3 Findings:\nWe then wanted to find more about the correspondences. The first graph illustrated Nadia’s sent communications and the second graph were her received communications. Hover over nodes to see the sent or received count from the perspective of the entity. Hover over arrowheads to see the number, direction, count, first and last correspondence time, type of sent or received, and content of one communication. Nadia sent only 8 but received 18 communications (possibly indicative of using a pseudonym):\n\nNodes involved: Nadia, Davis, Elise, Haacklee Habor, Liam, Marlin, Neptune, Oceanus City Council, Remora, Rodriguez, Sailor Shifts Team, Sentinel, V. Miesel Shipping.\nSent more direct communications to Liam (2) and Neptune (2), relative to others.\nReceived more from Davis (5), Elise (3), and Liam (2), relative to others.\nThe next step would be to find out the suspicious characters/ activities."
  },
  {
    "objectID": "tasks.html#nadias-ego-network-3-hops-degree-centrality",
    "href": "tasks.html#nadias-ego-network-3-hops-degree-centrality",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "4.3 Nadia’s Ego Network: 3-hops degree centrality",
    "text": "4.3 Nadia’s Ego Network: 3-hops degree centrality\nTo uncover more details, we designed n-hops degree centrality here. We input 3 hops to hover over the nodes and look into the communications in a wider network. 3-hop exposes overlapping communites (Nadia communicating with someone who coordinates between groups). The “bridges” may show their value in 3-hops. It also increases the change of detecting complete or near complete cliques. We understand that should there be requirements for details, we could look into n-hops and more.\n\n\n\n\n\n\n\n\n\n\nShow the code\n# --- Define event and relationship subtypes (optional, for filtering or labeling) ---\nevent_subtypes &lt;- c(\n  \"Communication\", \"Monitoring\", \"VesselMovement\", \"Assessment\",\n  \"Collaborate\", \"Endorsement\", \"TourActivity\", \"TransponderPing\",\n  \"Harbor Report\", \"Fishing\", \"Criticize\"\n)\n\nrelationship_subtypes &lt;- c(\n  \"Coordinates\", \"AccessPermission\", \"Operates\", \"Colleagues\",\n  \"Suspicious\", \"Reports\", \"Jurisdiction\", \"Unfriendly\", \"Friends\"\n)\n\n# --- Define node colors and shapes by type or key sub-type ---\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\" = \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",\n  \"Relationship\" = \"#AF8DC3\"\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle\",\n  \"Event\" = \"star\",\n  \"Relationship\" = \"square\"\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)\n\n# ---- 2. Define function to extract ego subgraph ----\nextract_ego_subgraph &lt;- function(center_node = \"Nadia Conti\", hops = 3) {\n  # Construct igraph object\n  g &lt;- graph_from_data_frame(\n    d = mc3_edges_final %&gt;% select(from = from_id, to = to_id),\n    vertices = mc3_nodes_final %&gt;% select(id) %&gt;% distinct() %&gt;% rename(name = id),\n    directed = TRUE\n  )\n\n  # Extract ego network\n  ego_graph &lt;- make_ego_graph(g, order = hops, nodes = center_node, mode = \"all\")[[1]]\n  node_ids &lt;- V(ego_graph)$name\n  edge_df &lt;- as_data_frame(ego_graph, what = \"edges\")\n\n  # Prepare node metadata for visNetwork\n  ego_nodes &lt;- mc3_nodes_final %&gt;%\n    filter(id %in% node_ids) %&gt;%\n    mutate(\n      label = ifelse(is.na(name), id, name),\n      tooltip_extra = case_when(\n        type == \"Event\" & sub_type == \"Communication\" ~ content,\n        type == \"Event\" & sub_type == \"Monitoring\" ~ findings,\n        type == \"Event\" & sub_type == \"VesselMovement\" ~ destination,\n        type == \"Event\" & sub_type == \"Assessment\" ~ results,\n        type == \"Relationship\" & sub_type == \"Coordinates\" ~ coordination_type,\n        type == \"Relationship\" & sub_type == \"Operates\" ~ operational_role,\n        type == \"Relationship\" & sub_type == \"Jurisdiction\" ~ jurisdiction_type,\n        TRUE ~ NA_character_\n      ),\n      title = paste0(\n        \"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;\",\n        \"Type: \", type, \"&lt;br&gt;\",\n        \"Sub-type: \", sub_type, \"&lt;br&gt;\",\n        ifelse(!is.na(tooltip_extra), paste0(\"&lt;br&gt;&lt;b&gt;Details:&lt;/b&gt; \", tooltip_extra), \"\")\n      ),\n      group = case_when(\n        sub_type %in% names(node_legend_colors_plot) ~ sub_type,\n        type %in% names(node_legend_colors_plot) ~ type,\n        TRUE ~ \"Other\"\n      )\n    ) %&gt;%\n    select(id, label, group, title) %&gt;%\n    distinct(id, .keep_all = TRUE)\n\n  list(nodes = ego_nodes, edges = edge_df)\n}\n\n# ---- 3. Extract Nadia Conti's 3-hop ego network ----\nego_data &lt;- extract_ego_subgraph(\"Nadia Conti\", hops = 3)\nnodes &lt;- ego_data$nodes\nedges &lt;- ego_data$edges\n\n# (Optional) Save output\nnadia_ego_nodes_2hop &lt;- nodes\nnadia_ego_edges_2hop &lt;- edges\n\n# ---- 4. Build visNetwork plot ----\nnet &lt;- visNetwork(nodes, edges, width = \"100%\", height = \"600px\") %&gt;%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 1.5))) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(\n    size = 14,\n    color = STYLES$node_label_dark,\n    face = STYLES$font_family,\n    vadjust = -15\n  ))\n\n# ---- 5. Apply color/shape for known groups ----\nused_groups &lt;- intersect(unique(nodes$group), names(node_legend_colors_plot))\n\nfor (group_name in used_groups) {\n  net &lt;- net %&gt;% visGroups(\n    groupname = group_name,\n    color = node_legend_colors_plot[[group_name]],\n    shape = node_legend_shapes_plot[[group_name]]\n  )\n}\n\n# ---- 6. Add legend dynamically ----\nlegend_df &lt;- tibble::tibble(\n  label = used_groups,\n  shape = node_legend_shapes_plot[used_groups],\n  color = node_legend_colors_plot[used_groups]\n) %&gt;%\n  distinct(label, .keep_all = TRUE)\n\nnet &lt;- net %&gt;% visLegend(\n  addNodes = legend_df,\n  ncol = 2,\n  position = \"left\",\n  main = \"Entity (Sub)Types\",\n  useGroups = FALSE\n)\n\n# ---- 7. Render the network ----\nnet\n\n\n\n9.3.1 Findings:\n\nNodes from 1-hop: Nadia, Davis, Elise, Haacklee Habor, Liam, Marlin, Neptune, Oceanus City Council, Remora, Rodriguez, Sailor Shifts Team, Sentinel, V. Miesel Shipping.\nAdditional nodes from 3-hop: Conservation vessels, EcoVigil, Sam, The Accountant, Mako, Nemo Reef.\nWe would then use these 3-hop nodes to drill in deeper to find suspicious relationships between nodes."
  },
  {
    "objectID": "tasks.html#summary-of-nadias-actions",
    "href": "tasks.html#summary-of-nadias-actions",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "4.4 Summary of Nadia’s Actions",
    "text": "4.4 Summary of Nadia’s Actions\n\n4.4.1 Sequential Timeline in Table (3-hop)\n\nThe Suspicious EntitiesThe Code\n\n\n\n\n [1] \"Sam\"                         \"Elise\"                      \n [3] \"Liam Thorne\"                 \"Davis\"                      \n [5] \"Rodriguez\"                   \"The Accountant\"             \n [7] \"V. Miesel Shipping\"          \"EcoVigil\"                   \n [9] \"Sentinel\"                    \"Remora\"                     \n[11] \"Event_Communication_222\"     \"Event_Communication_270\"    \n[13] \"Event_Communication_272\"     \"Event_Communication_370\"    \n[15] \"Event_Communication_485\"     \"Event_Communication_535\"    \n[17] \"Event_Communication_565\"     \"Event_Communication_574\"    \n[19] \"Event_Communication_601\"     \"Event_Communication_612\"    \n[21] \"Event_Communication_639\"     \"Event_Communication_677\"    \n[23] \"Event_Communication_724\"     \"Event_Communication_726\"    \n[25] \"Event_Communication_753\"     \"Event_Communication_761\"    \n[27] \"Event_Communication_833\"     \"Event_Communication_916\"    \n[29] \"Event_Communication_951\"     \"Relationship_Suspicious_71\" \n[31] \"Relationship_Suspicious_74\"  \"Relationship_Suspicious_106\"\n[33] \"Relationship_Suspicious_107\" \"Relationship_Suspicious_110\"\n[35] \"Relationship_Suspicious_112\" \"Relationship_Suspicious_123\"\n[37] \"Relationship_Suspicious_145\" \"Relationship_Suspicious_209\"\n[39] \"Relationship_Suspicious_217\" \"Relationship_Suspicious_293\"\n[41] \"Relationship_Suspicious_294\" \"Relationship_Suspicious_317\"\n[43] \"Relationship_Suspicious_341\" \"Relationship_Suspicious_360\"\n[45] \"Relationship_Suspicious_368\" \"Relationship_Suspicious_410\"\n[47] \"Relationship_Suspicious_436\" \"Relationship_Suspicious_457\"\n[49] \"Relationship_Suspicious_483\" \"Relationship_Suspicious_600\"\n[51] \"Relationship_Suspicious_577\" \"Relationship_Suspicious_113\"\n[53] \"Relationship_Suspicious_470\" \"Sailor Shifts Team\"         \n[55] \"Oceanus City Council\"        \"Mako\"                       \n[57] \"Neptune\"                    \n\n\n\n\n# Extract Nadia Conti's 3-hop ego network\n#| code-fold: true\n#| code-summary: \"Show the code\"\n\n# ---- Step 1: Create igraph from edge list ----\ng &lt;- graph_from_data_frame(\n  d = mc3_edges_final %&gt;% select(from = from_id, to = to_id),\n  vertices = mc3_nodes_final %&gt;% select(id) %&gt;% distinct() %&gt;% rename(name = id),\n  directed = TRUE\n)\n\n# ---- Step 2: Extract 3-hop ego network for Nadia Conti ----\nego_graph &lt;- make_ego_graph(g, order = 3, nodes = \"Nadia Conti\", mode = \"all\")[[1]]\nnode_ids &lt;- V(ego_graph)$name\nedge_df &lt;- as_data_frame(ego_graph, what = \"edges\")\n\n# ---- Step 3: Enrich ego nodes with labels and metadata ----\nnadia_ego_nodes_3hop &lt;- mc3_nodes_final %&gt;%\n  filter(id %in% node_ids) %&gt;%\n  mutate(\n    label = ifelse(is.na(name), id, name),\n    tooltip_extra = case_when(\n      type == \"Event\" & sub_type == \"Communication\" ~ content,\n      type == \"Event\" & sub_type == \"Monitoring\" ~ findings,\n      type == \"Event\" & sub_type == \"VesselMovement\" ~ destination,\n      type == \"Event\" & sub_type == \"Assessment\" ~ results,\n      type == \"Relationship\" & sub_type == \"Coordinates\" ~ coordination_type,\n      type == \"Relationship\" & sub_type == \"Operates\" ~ operational_role,\n      type == \"Relationship\" & sub_type == \"Jurisdiction\" ~ jurisdiction_type,\n      TRUE ~ NA_character_\n    )\n  )\n\n# ---- Step 4: Enrich edges with sender/recipient names and types ----\nnadia_ego_edges_3hop &lt;- edge_df %&gt;%\n  left_join(nadia_ego_nodes_3hop %&gt;% select(id, sender_name = label, sender_sub_type = sub_type), by = c(\"from\" = \"id\")) %&gt;%\n  left_join(nadia_ego_nodes_3hop %&gt;% select(id, recipient_name = label, recipient_sub_type = sub_type), by = c(\"to\" = \"id\"))\n\n# ---- Step 5: Create detailed communication dataframe ----\nnadia_ego_comm_df_3hop &lt;- edge_df %&gt;%\n  left_join(\n    nadia_ego_nodes_3hop %&gt;%\n      select(id, name, sub_type),\n    by = c(\"from\" = \"id\")\n  ) %&gt;%\n  rename(\n    sender_id = from,\n    sender_name = name,\n    sender_type = sub_type\n  ) %&gt;%\n  left_join(\n    nadia_ego_nodes_3hop %&gt;%\n      select(id, name, sub_type, content, findings, destination, results,\n             coordination_type, operational_role, jurisdiction_type, timestamp),\n    by = c(\"to\" = \"id\")\n  ) %&gt;%\n  rename(\n    recipient_id = to,\n    recipient_name = name,\n    recipient_type = sub_type\n  ) %&gt;%\n  mutate(\n    details = coalesce(content, findings, destination, results,\n                       coordination_type, operational_role, jurisdiction_type),\n    timestamp = suppressWarnings(ymd_hms(timestamp))\n  ) %&gt;%\n  select(\n    sender_id, sender_name, sender_type,\n    recipient_id, recipient_name, recipient_type,\n    timestamp, details\n  )\n\n# ---- Step 6: Filter for 'suspicious' in any relevant field ----\nsuspicious_links &lt;- nadia_ego_comm_df_3hop %&gt;%\n  filter(\n    grepl(\"suspicious\", sender_id, ignore.case = TRUE) |\n    grepl(\"suspicious\", sender_type, ignore.case = TRUE) |\n    grepl(\"suspicious\", recipient_id, ignore.case = TRUE) |\n    grepl(\"suspicious\", recipient_type, ignore.case = TRUE)\n  ) %&gt;%\n  select(\n    sender_id, sender_name, sender_type,\n    recipient_id, recipient_name, recipient_type\n  )\n\n\n# ---- Step 7: View suspicious interactions ----\nunique_ids &lt;- unique(c(suspicious_links$sender_id, suspicious_links$recipient_id))\nprint(unique_ids)\n\n\n\n\nElise, EcoVigil, Elise, Davis, Liam, Mako, Neptune, Sam, Remora, Rodriguez, Sailor Shifts Team, Sentinel, The Accountant, Oceanus City Council, V. Miesel Shipping possibly found something suspicious or were involved in something suspicious.\n\n\n\n4.4.2 Plotted Timeline (3-hop)- Only suspicious communications\nThese are the suspicious communications extracted from 4.4.1.\n\n\nShow the code\n# ---- Step 1: Define fixed suspicious Event_Communication IDs ----\nevent_ids_to_extract &lt;- c(\n  \"Event_Communication_222\", \"Event_Communication_270\",\n  \"Event_Communication_272\", \"Event_Communication_370\",\n  \"Event_Communication_485\", \"Event_Communication_535\",\n  \"Event_Communication_565\", \"Event_Communication_574\",\n  \"Event_Communication_601\", \"Event_Communication_612\",\n  \"Event_Communication_639\", \"Event_Communication_677\",\n  \"Event_Communication_724\", \"Event_Communication_726\",\n  \"Event_Communication_753\", \"Event_Communication_761\",\n  \"Event_Communication_833\", \"Event_Communication_916\",\n  \"Event_Communication_951\"\n)\n\n# ---- Step 2: Match to master communication events ----\nmatched_comms_df &lt;- other_communications_df %&gt;%\n  filter(event_id %in% event_ids_to_extract)\n\n# ---- Step 3: Prepare data for plotting ----\nmatched_comms_df_for_plot &lt;- matched_comms_df %&gt;%\n  mutate(\n    timestamp = as.POSIXct(timestamp),\n    comm_date = as.Date(timestamp),\n    comm_time_of_day = hms::as_hms(format(timestamp, \"%H:%M:%S\")),\n    sender_sub_type = factor(sender_sub_type, levels = c(\"Person\", \"Vessel\", \"Organization\", \"Location\")),\n    communicating_pair_sorted = paste(pmin(sender_name, recipient_name), pmax(sender_name, recipient_name), sep = \" & \")\n  )\n\n# ---- Step 4: Add tooltip labels ----\nplot_data &lt;- matched_comms_df_for_plot %&gt;%\n  mutate(\n    wrapped_content = str_wrap(content, width = 50),\n    tooltip_text = paste0(\n      \"&lt;b&gt;Date:&lt;/b&gt; \", comm_date, \"&lt;br&gt;\",\n      \"&lt;b&gt;Time:&lt;/b&gt; \", format(comm_time_of_day, \"%H:%M:%S\"), \"&lt;br&gt;\",\n      \"&lt;b&gt;Event ID:&lt;/b&gt; \", event_id, \"&lt;br&gt;&lt;br&gt;\",\n      \"&lt;b&gt;From:&lt;/b&gt; \", sender_name, \"&lt;br&gt;\",\n      \"&lt;b&gt;To:&lt;/b&gt; \", recipient_name, \"&lt;br&gt;&lt;br&gt;\",\n      \"&lt;b&gt;Content:&lt;/b&gt;&lt;br&gt;\", wrapped_content\n    )\n  )\n\n# ---- Step 5: Generate timeline plot ----\np &lt;- ggplot(plot_data, aes(x = comm_date, y = comm_time_of_day)) +\n  geom_point(aes(\n    color = sender_name,\n    shape = sender_sub_type,\n    text = tooltip_text\n  ), show.legend = c(color = TRUE, shape = FALSE), size = 2, alpha = 0.7) +\n\n  scale_shape_manual(values = c(\n    \"Person\" = 16,\n    \"Vessel\" = 17,\n    \"Organization\" = 15,\n    \"Location\" = 18\n  )) +\n\n  scale_y_time(\n    limits = hms::as_hms(c(\"08:00:00\", \"14:00:00\")),\n    breaks = hms::as_hms(c(\"08:00:00\", \"09:00:00\", \"10:00:00\", \"11:00:00\", \"12:00:00\", \"13:00:00\", \"14:00:00\")),\n    labels = c(\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\")\n  ) +\n\n  scale_x_date(\n    date_breaks = \"1 day\",\n    date_labels = \"%d %b\"\n  ) +\n\n  facet_wrap(~ sender_sub_type, ncol = 1, scales = \"fixed\") +\n\n  labs(\n    title = \"Suspicious Communications Timeline (Nadia's 3-hop Ego Network)\",\n    x = \"Date\",\n    y = \"Time of Day\",\n    color = \"Sender\"\n  ) +\n\n  theme_grey() +\n  theme(\n    axis.text.y = element_text(size = 6),\n    axis.title.y = element_text(size = 7),\n    axis.text.x = element_text(size = 6, angle = 45, hjust = 1),\n    axis.title.x = element_text(margin = margin(t = 10), size = 7),\n    panel.spacing = unit(0.5, \"lines\"),\n    strip.text = element_text(size = 8, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 6),\n    legend.title = element_text(size = 7)\n  )\n\n# ---- Step 6: Convert to interactive plot ----\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\nPlotted Timeline (3-hop)- Full communications\n\n\nShow the code\n# ---- Step 1: Extract Communication Event IDs from Nadia's 3-hop ego network ----\nevent_ids_to_extract &lt;- nadia_ego_comm_df_3hop %&gt;%\n  filter(str_starts(sender_id, \"Event_Communication_\")) %&gt;%\n  pull(sender_id) %&gt;%\n  unique()\n\n# ---- Step 2: Match to master communication events ----\nmatched_comms_df &lt;- other_communications_df %&gt;%\n  filter(event_id %in% event_ids_to_extract)\n\n# ---- Step 3: Prepare data for plotting ----\nmatched_comms_df_for_plot &lt;- matched_comms_df %&gt;%\n  mutate(\n    timestamp = as.POSIXct(timestamp),\n    comm_date = as.Date(timestamp),\n    comm_time_of_day = hms::as_hms(format(timestamp, \"%H:%M:%S\")),\n    sender_sub_type = factor(sender_sub_type, levels = c(\"Person\", \"Vessel\", \"Organization\", \"Location\")),\n    communicating_pair_sorted = paste(pmin(sender_name, recipient_name), pmax(sender_name, recipient_name), sep = \" & \")\n  )\n\n# ---- Step 4: Add tooltip labels ----\nplot_data &lt;- matched_comms_df_for_plot %&gt;%\n  mutate(\n    wrapped_content = str_wrap(content, width = 50),\n    tooltip_text = paste0(\n      \"&lt;b&gt;Date:&lt;/b&gt; \", comm_date, \"&lt;br&gt;\",\n      \"&lt;b&gt;Time:&lt;/b&gt; \", format(comm_time_of_day, \"%H:%M:%S\"), \"&lt;br&gt;\",\n      \"&lt;b&gt;Event ID:&lt;/b&gt; \", event_id, \"&lt;br&gt;&lt;br&gt;\",\n      \"&lt;b&gt;From:&lt;/b&gt; \", sender_name, \"&lt;br&gt;\",\n      \"&lt;b&gt;To:&lt;/b&gt; \", recipient_name, \"&lt;br&gt;&lt;br&gt;\",\n      \"&lt;b&gt;Content:&lt;/b&gt;&lt;br&gt;\", wrapped_content\n    )\n  )\n\n# ---- Step 5: Generate timeline plot ----\np &lt;- ggplot(plot_data, aes(x = comm_date, y = comm_time_of_day)) +\n  geom_point(aes(\n    color = sender_name,\n    shape = sender_sub_type,\n    text = tooltip_text\n  ), show.legend = c(color = TRUE, shape = FALSE), size = 2, alpha = 0.7) +\n\n  scale_shape_manual(values = c(\n    \"Person\" = 16,\n    \"Vessel\" = 17,\n    \"Organization\" = 15,\n    \"Location\" = 18\n  )) +\n\n  scale_y_time(\n    limits = hms::as_hms(c(\"08:00:00\", \"14:00:00\")),\n    breaks = hms::as_hms(c(\"08:00:00\", \"09:00:00\", \"10:00:00\", \"11:00:00\", \"12:00:00\", \"13:00:00\", \"14:00:00\")),\n    labels = c(\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\")\n  ) +\n\n  scale_x_date(\n    date_breaks = \"1 day\",\n    date_labels = \"%d %b\"\n  ) +\n\n  facet_wrap(~ sender_sub_type, ncol = 1, scales = \"fixed\") +\n\n  labs(\n    title = \"Nadia's 3-hop Communications Timeline (Sender Perspective)\",\n    x = \"Date\",\n    y = \"Time of Day\",\n    color = \"Sender\"\n  ) +\n\n  theme_grey() +\n  theme(\n    axis.text.y = element_text(size = 6),\n    axis.title.y = element_text(size = 7),\n    axis.text.x = element_text(size = 6, angle = 45, hjust = 1),\n    axis.title.x = element_text(margin = margin(t = 10), size = 7),\n    panel.spacing = unit(0.5, \"lines\"),\n    strip.text = element_text(size = 8, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 6),\n    legend.title = element_text(size = 7)\n  )\n\n# ---- Step 6: Convert to interactive plot ----\nggplotly(p, tooltip = \"text\")"
  },
  {
    "objectID": "tasks.html#discussioninterpretation-1-3-hop-data",
    "href": "tasks.html#discussioninterpretation-1-3-hop-data",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "4.5 Discussion/Interpretation (1 & 3 hop data):",
    "text": "4.5 Discussion/Interpretation (1 & 3 hop data):\nThere were certain questions we posted to ourselves and came out with the answers.\n\n4.5.1 The Community and Ego Network:\n\nQuestion and Answer Analysis\n\n\n\n\n\n\n\nQuestion\nAnswer\n\n\n\n\nWho were Nadia’s direct communication contacts (1-hop degree centrality)? Are any of them known to be suspicious or involved in illicit activities?\nFrom the thicker width in the Ego network, it appeared that Nadia often communicated with Liam, Elise, and Davis.\nLiam appeared to be The Middleman within Nadia’s direct community from the Louvain Community Network.\nFrom the filtered table on suspicious relationships, Elise, Liam, EcoVigil, Sentinel, Oceanus City Council, and V. Miesel Shipping were noted to have suspicious relationships.\nTheir conversations were the area of focus to uncover their roles, relationships and identities.\n\n\nWere there any other ‘Event’ or ‘Relationship’ nodes directly connected to Nadia in this communication network that hinted at suspicious people/ activities?\nBased on information from question 2, Rodriguez was previously involved in mining activities that affected the environment. ‘Mining’ as a topic and his conversations would be tracked.\n\n\n\n\n\n\n9.5.2 The Communication Timeline and Content:\nIn the nadia_full_communications_timeline table, the actual content of her direct two-way communications were investigated over the course of 9 days. There were certain suspicious entities, keywords, coded language, or unusual topics detected that were suspicious. We have tabled out the segmented suspicious and non-suspicious entities for investigation and elimination.\n\nNot in the Network but Mentioned in the ContentSuspicious EntityNon Suspicious Entity\n\n\n\n\n\n\n\n\n\n\n\nEntity\nForm of Subject Matter\nRationale\nEvent ID\n\n\n\n\nNemo Reef\nLocation\nLikely conservation area which was picked by the characters for illicit activities.\n331, 943\n\n\nPermit #CR-7844\nItem\nLikely a permit to show tourism activity as a cover for suspicious activities. Rodriguez is likely linked to vessels Mako, Neptune, and Remora operating under this permit with a tourism facade.\n582, 847, 805\n\n\nEcoVigil\nVessel\nEcoVigil will likely affect Nadia’s operations when they use their ROV. Nadia recommended to V. Miesel to accelerate the planned operation. They were likely working for different sides.\n753, 847\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSuspicious Entity\nSub Type\nCommunity\nRationale\nEvent ID\n\n\n\n\nHaacklee Harbor\nLocation\n2\nNadia’s communication to Haacklee Harbor is suspicious when she wanted the documents destroyed and the special corridor to Nemo Reef cancelled.\n331\n\n\nLiam aka The Middleman\nPerson\n2\nNadia wanted him to double his usual fee to ensure Harbor Master remains cooperative. Identity revealed through:\n529, 795, 847\n\n\nDavis\nPerson\n1\nNadia told him to create a clean paper trail. She will provide permits.\n521\n\n\nElise aka Mrs. Money\nPerson\n1\nNadia warned Elise that conservation vessels might complicate their operation. Identity revealed through:\n708, 528, 538, 677\n\n\nRodriguez aka Small Fry\nPerson\n1\nLinked to Mako, which is operating under a permit with a tourism facade.\n805\n\n\nRemora\nVessel\n1\nRemora reported a tourism facade to Nadia and planned underwater lighting placements in Nemo Reef while monitoring conservation vessels.\n943\n\n\nNeptune\nVessel\n1\nNadia told Neptune to stay under the radar.\n538\n\n\nV. Miesel HQ\nOrganisation\n1\nOrganisation was aware of the suspicious permit and The Middleman.\n846, 847\n\n\nSailor Shifts Team aka Glitters Team\nOrganisation\n1\nNadia provided crew members for the setup related to the permit.\n520\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNon Suspicious Entity\nSub Type\nCommunity\nRationale\nEvent ID\n\n\n\n\nOceanus City Council\nOrganisation\n2\nOceanus City Council as a whole is not suspicious as an organisation as Liam stated this organisation suspected nothing.\n535\n\n\nSentinel\nVessel\n2\nSentinel Vessel suspected ulterior motives as the water quality was fine.\n677\n\n\nMarlin\nVessel\n2\nMarlin inquired about unusual vessel routes near eastern shoals, Nadia and Davis might need to address this.\n584"
  },
  {
    "objectID": "tasks.html#querying-keywords",
    "href": "tasks.html#querying-keywords",
    "title": "🌊 Visual Analysis Finding 🪸",
    "section": "4.6 Querying Keywords",
    "text": "4.6 Querying Keywords\nBased on our knowledge, we decided to connect to external information. We used knowledge from Nadia’s current network and communication with keyword search of our queries.\n\n4.6.1 Plotted Timeline (Word Query: Permit related)\n\n\nShow the code\n# -- Step 1: Define keywords\nkeywords &lt;- c(\"permit\", \"1045\", \"7844\")\npattern &lt;- paste0(\"\\\\b(\", paste(keywords, collapse = \"|\"), \")\\\\b\")\n\n# -- Step 2: Filter messages with keyword match (case-insensitive)\nkeyword_matches_df &lt;- other_communications_df %&gt;%\n  mutate(content_lower = tolower(content)) %&gt;%\n  filter(str_detect(content_lower, pattern))\n\n# -- Step 3: Extract and annotate keyword matches\nplot_data &lt;- keyword_matches_df %&gt;%\n  mutate(\n    matched_keywords = str_extract_all(content_lower, pattern),\n    timestamp = suppressWarnings(as.POSIXct(timestamp)),\n    comm_date = as.Date(timestamp),\n    comm_time_of_day = suppressWarnings(hms::as_hms(format(timestamp, \"%H:%M:%S\"))),\n    wrapped_content = str_wrap(content, width = 50)\n  ) %&gt;%\n  unnest(matched_keywords) %&gt;%\n  mutate(\n    matched_keywords = recode(matched_keywords,\n      \"permit\" = \"Permit\",\n      \"1045\" = \"# 1045\",\n      \"7844\" = \"# 7844\"\n    ),\n    tooltip_text = paste0(\n      \"&lt;b&gt;Date:&lt;/b&gt; \", comm_date,\n      \"&lt;br&gt;&lt;b&gt;Time:&lt;/b&gt; \", format(comm_time_of_day, \"%H:%M:%S\"),\n      \"&lt;br&gt;&lt;b&gt;Event ID:&lt;/b&gt; \", event_id,\n      \"&lt;br&gt;&lt;b&gt;Content:&lt;/b&gt;&lt;br&gt;\", wrapped_content\n    )\n  )\n\n# -- Step 4: Plot timeline\np &lt;- ggplot(plot_data, aes(x = comm_date, y = comm_time_of_day)) +\n  geom_point(aes(\n    color = matched_keywords,\n    shape = sender_sub_type,\n    text = tooltip_text,\n    group = matched_keywords\n  ), size = 2.5, alpha = 0.7, show.legend = TRUE) +\n  scale_shape_manual(values = c(\n    \"Person\" = 16,\n    \"Vessel\" = 17,\n    \"Organization\" = 15,\n    \"Location\" = 18\n  )) +\n  facet_wrap(~ matched_keywords, ncol = 1, scales = \"fixed\") +\n  scale_y_time(\n    limits = hms::as_hms(c(\"08:00:00\", \"13:00:00\")),\n    breaks = hms::as_hms(c(\"08:00:00\", \"09:00:00\", \"10:00:00\", \"11:00:00\", \"12:00:00\", \"13:00:00\")),\n    labels = c(\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\")\n  ) +\n  scale_x_date(date_breaks = \"1 day\", date_labels = \"%d %b\") +\n  labs(\n    title = \"Interactive Timeline: Keyword Mentions by Day and Time\",\n    x = \"Date\",\n    y = \"Time of Day\",\n    shape = \"Sender Type\",\n    color = \"Keyword\"\n  ) +\n  theme_grey() +\n  theme(\n    axis.text.y = element_text(size = 6),\n    axis.title.y = element_text(size = 7),\n    axis.ticks.y = element_line(),\n    axis.text.x = element_text(size = 6, angle = 45, hjust = 1),\n    axis.title.x = element_text(margin = margin(t = 10), size = 7),\n    panel.spacing = unit(0.5, \"lines\"),\n    strip.text = element_text(size = 8, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 6),\n    legend.title = element_blank()\n  )\n\n# -- Step 5: Convert to plotly\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\n4.6.1.1 Findings in sequential order:\n\nThere were overlaps as the blue permit also included the red NR-1045 permit and green CR-7844 permit.\n\n\n\nShow the code\nlibrary(reactable)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(readr) # Used for read_lines\n\n# 1. Prepare data from the text provided\ndata_text &lt;- \"\nDate & Time | Event Description\n------------|---------------------------------------------------------------------------------------------------------------\n2 Oct (12:16pm) | Rodriguez was from the Sailor Shifts Team.\n5 Oct (10:54am) | Jensen from City Council approved Nemo Reef permit.\n6 Oct (9:57am) | Remora told Sailor Shifts Team that Nadia got Commissioner Torres to sign off the permit.\n6 Oct (10:45am) | Mako acknowledged NR-1045 permit to Nemo Reef.\n6 Oct (12:33pm) | Mako was lead vessel to Neptune and Remora as authorised by V. Miesel Shipping.\n7 Oct (9:40am) | Mako was operating under permit NR-1045 for conservation research.\n8 Oct (10:24am) | Mako was operating under V. Miesel's special marine research permit CR-7844 approved by Oceanus City Council.\n8 Oct (10:30am) | Mako informed Remora that both of them were operating under permit CR-7844 and have a 5 day deadline.\n8 Oct (10:40am) | Remora was approved by Paackland Harbor to operate with extended hours under permit NR-1045.\n9 Oct (11:53am) | Mako requesed for additional crew from v Miesel Shipping for the 24hr operations over next 5 days.\n11 Oct (6:00am) | Nemo Reef closure mandated by Oceanus City Council.\n11 Oct (8:57am) | All research permits must be submitted within 72 hours.\n11 Oct (10:05am) | V. Miesel Shipping informed Remora that 30% of her crew to be reassigned to Neptune.\n12 Oct (10:01am) | Davis as Captain oversaw crew reallocation.\n12 Oct (11:19am) | Nadia secured documentation for CR-7844.\n12 Oct (12:52pm) | Harbor closure for 3 days from 13 Oct 06:00.\n\"\n\n# Parse the data into a data frame\n# Use read_lines to handle the multi-line string\ndata_lines &lt;- read_lines(data_text)\n\n# Remove the header separator line and any empty lines\ndata_lines &lt;- data_lines[!grepl(\"^---|===\", data_lines) & data_lines != \"\"]\n\n# The first non-separator line is the header\ncol_names_raw &lt;- str_split(data_lines[1], \"\\\\|\")[[1]]\ncol_names &lt;- str_trim(col_names_raw)\n\n# The rest are data rows\ndata_content &lt;- data_lines[-1]\n\n# Create data frame by splitting lines and putting into a tibble\ndf &lt;- tibble(line = data_content) %&gt;%\n  mutate(\n    `Date & Time` = str_trim(str_extract(line, \"^[^|]+\")),\n    `Event Description` = str_trim(str_extract(line, \"(?&lt;=\\\\|).+$\"))\n  ) %&gt;%\n  select(`Date & Time`, `Event Description`) # Ensure correct column order and names\n\n# 2. Create the reactable table with desired features\n\nreactable(\n  df,\n  filterable = TRUE, # Enable column-specific filters (from the tutorial)\n  searchable = TRUE, # Enable global search box (from the tutorial)\n  paginationType = \"numbers\", # Display page numbers (corrected from \"pages\")\n  defaultPageSize = 5, # Show 5 rows per page\n  showPageSizeOptions = TRUE, # Allow users to change page size\n  pageSizeOptions = c(5, 10, 15, 20, 50), # Options for page sizes\n  striped = TRUE, # Add alternating row colors (from the tutorial)\n  highlight = TRUE, # Highlight row on hover (from the tutorial)\n  columns = list(\n    `Date & Time` = colDef(\n      name = \"Date & Time\",\n      minWidth = 120, # Adjust width to fit content\n      align = \"left\"\n    ),\n    `Event Description` = colDef(\n      name = \"Event Description\",\n      minWidth = 500, # Ensure enough width for event descriptions\n      align = \"left\"\n    )\n  ),\n  # Apply a custom theme for better aesthetics (inspired by the tutorial)\n  theme = reactableTheme(\n    borderColor = \"#dfe2e5\",\n    stripedColor = \"#f6f8fa\",\n    highlightColor = \"#f0f5f9\",\n    cellPadding = \"8px 12px\",\n    style = list(fontFamily = \"Verdana, Geneva, sans-serif\", fontSize = \"14px\"),\n    headerStyle = list(\n      \"&.rt-th:hover\" = list(backgroundColor = \"#e0e6eb\"),\n      fontSize = \"15px\",\n      fontWeight = 600,\n      color = \"#333\", # Darker header text for contrast\n      background = \"#f7f7f7\" # Slightly grey background for header\n    ),\n    rowSelectedStyle = list(backgroundColor = \"#e6f2ff\", \"&:hover\" = list(backgroundColor = \"#e6f2ff\")),\n    # Styles for search/filter inputs (from tutorial's theme example)\n    searchInputStyle = list(width = \"100%\", margin = \"5px 0\", padding = \"5px\"),\n    filterInputStyle = list(width = \"100%\", margin = \"2px 0\", padding = \"4px\")\n  )\n)\n\n\n\n\n\n\n\nSince there were little communications on 13 Oct, we looked into other word queries.\nUsing information obtained from question 2 and 4, we had in mind certain keywords to query for.\n\n\n\n4.6.2 Plotted Timeline (Word Query: Music Video Related)\n\n\nShow the code\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(hms)\nlibrary(tidyr)\n\n# -- Step 1: Define keywords\nkeywords &lt;- c(\"mine\", \"mining\", \"music video\", \"lighting\", \"reef operation\")\npattern &lt;- paste0(\"\\\\b(\", paste(keywords, collapse = \"|\"), \")\\\\b\")\n\n# -- Step 2: Filter messages\nsearch_target_content &lt;- tolower(other_communications_df$content)\n\nkeyword_matches_df &lt;- other_communications_df %&gt;%\n  filter(str_detect(search_target_content, pattern))\n\n# -- Step 3: Extract keywords\nplot_data &lt;- keyword_matches_df %&gt;%\n  mutate(matched_keywords = str_extract_all(tolower(content), pattern)) %&gt;%\n  unnest(matched_keywords) %&gt;%\n  mutate(matched_keywords = str_to_title(matched_keywords)) %&gt;%\n  arrange(matched_keywords, timestamp) %&gt;%\n  mutate(\n    timestamp = as.POSIXct(timestamp),\n    comm_date = as.Date(timestamp),\n    comm_time_of_day = hms::as_hms(format(timestamp, \"%H:%M:%S\")),\n    wrapped_content = str_wrap(content, width = 50),\n    tooltip_text = paste0(\n      \"&lt;b&gt;Date:&lt;/b&gt; \", comm_date,\n      \"&lt;br&gt;&lt;b&gt;Time:&lt;/b&gt; \", comm_time_of_day,\n      \"&lt;br&gt;&lt;b&gt;Event ID:&lt;/b&gt; \", event_id,\n      \"&lt;br&gt;&lt;b&gt;From:&lt;/b&gt; \", sender_name,\n      \"&lt;br&gt;&lt;b&gt;To:&lt;/b&gt; \", recipient_name,\n      \"&lt;br&gt;&lt;b&gt;Content:&lt;/b&gt;&lt;br&gt;\", wrapped_content\n    )\n  )\n\n# -- Step 4: Plot\np &lt;- ggplot(plot_data, aes(x = comm_date, y = comm_time_of_day)) +\n  geom_point(aes(\n    color = matched_keywords,\n    shape = sender_sub_type,\n    text = tooltip_text,\n    group = matched_keywords  # ensures matched_keywords is in layer\n  ), size = 2.5, alpha = 0.7, show.legend = TRUE) +\n  scale_shape_manual(values = c(\n    \"Person\" = 16,\n    \"Vessel\" = 17,\n    \"Organization\" = 15,\n    \"Location\" = 18\n  )) +\n  facet_wrap(~ matched_keywords, ncol = 1, scales = \"fixed\") +\n  scale_y_time(\n    limits = hms::as_hms(c(\"08:00:00\", \"13:00:00\")),\n    breaks = hms::as_hms(c(\"08:00:00\", \"09:00:00\", \"10:00:00\", \"11:00:00\", \"12:00:00\", \"13:00:00\")),\n    labels = c(\"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\")\n  ) +\n  scale_x_date(date_breaks = \"1 day\", date_labels = \"%d %b\") +\n  labs(\n    title = \"Interactive Timeline: Keyword Mentions by Day and Time\",\n    x = \"Date\",\n    y = \"Time of Day\",\n    shape = \"Sender Type\",\n    color = \"Keyword\"\n  ) +\n  theme_grey() +\n  theme(\n    axis.text.y = element_text(size = 6),\n    axis.title.y = element_text(size = 7),\n    axis.ticks.y = element_line(),\n    axis.text.x = element_text(size = 6, angle = 45, hjust = 1),\n    axis.title.x = element_text(margin = margin(t = 10), size = 7),\n    panel.spacing = unit(0.5, \"lines\"),  # Applies to both x and y spacing\n    strip.text = element_text(size = 8, face = \"bold\"),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 6),\n    legend.title = element_blank()\n  )\n\n# -- Step 5: Convert to plotly\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n\n\n\n4.6.2.1 Findings through Questions & Answers:\n\nQuestion and Answer Analysis\n\n\n\n\n\n\n\nQuestion\nAnswer\n\n\n\n\nWhich vessel was the suspicious permit #CR-7844 prepared for?\n(See 4.6.1.1)\nFrom question 2 and 4, we know this is V. Miesel’s Marine Research Permit, and prepared for Mako (lead vessel), Neptune, and Remora.\n\n\nWhat suspicious activity was performed at Nemo Reef? Which day was it?\n(See 4.6.2)\n14 Oct 2040 for a music video production.\n\n\nWhy is underwater lighting placement needed at Nemo Reef?\n(See 4.6.2)\nFor a music video production.\n\n\nWhat were the expedited approvals and secretive logistics?\n(See 4.6.1 and 4.6.2)\nPermits for Nemo Reef through NR-1045 and CR-788 were expedited. The secretive logistics were the crates and equipment on the vessels for the music video production.\n\n\nWho were the high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group?\n(Various Ids)\nOceanus Officials: Commissioner Blake, Commissioner Torres, Council Knowles, The Middleman, Jensen, Liam Thorne\nSailor Shift’s Team: Boss, Council Knowles, Davis, Glitters Team, Liam Thorne, Mako, Mrs. Money, Nadia, Neptune, Remora, Rodriguez, Sam, Samantha Blake, Small Fry, The Accountant, The Intern, The Middleman\nLocal Influential Families: Council Knowles, V. Miesel Shipping\nLocal Conservationist Group: Defender, EcoVigil, Green Guardians, Horizon, Kelly, Reef Guardians, Seawatch, Sentinel, The Lookout\n\n\nWas the music video production activity legal?\n(Id 979)\nThere was no environmental damage or mining involved in the music production. However, an environmental assessment was not conducted prior. Clepper may assess that his suspicions about Nadia Conti’s illicit activity may not be straightforward and could depend on whether an assessment was mandatory before commercial activities."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "🌊 Project Introduction 🪸",
    "section": "",
    "text": "In this study, we will be tackling Mini-case 3 of VAST Challenge 2025.\n\n\nOver the past decade, the community of Oceanus has faced numerous transformations and challenges evolving from its fishing-centric origins. Following major crackdowns on illegal fishing activities, suspects have shifted investments into more regulated sectors such as the ocean tourism industry, resulting in growing tensions. This increased tourism has recently attracted the likes of international pop star Sailor Shift, who announced plans to film a music video on the island.\nClepper Jensen, a former analyst at FishEye and now a seasoned journalist for the Hacklee Herald, has been keenly observing these rising tensions. Recently, he turned his attention towards the temporary closure of Nemo Reef. By listening to radio communications and utilizing his investigative tools, Clepper uncovered a complex web of expedited approvals and secretive logistics. These efforts revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group The Green Guardians, pointing towards a story of corruption and manipulation.\nOur task is to develop new and novel visualizations and visual analytics approaches to help Clepper get to the bottom of this story.\n\n\n\nClepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following 4 questions.\n\nQuestion 1\nClepper found that messages frequently came in at around the same time each day.\n1a. Develop a graph-based visual analytics approach to identify any daily temporal patterns in communications.\n1b. How do these patterns shift over the two weeks of observations?\n1c. Focus on a specific entity and use this information to determine who has influence over them.\nQuestion 2\nClepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation.\n2a. Use visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph.\n2b. Are there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?\n\nFor example, these groupings could be related to: Environmentalism (known associates of Green Guardians), Sailor Shift, and fishing/leisure vessels.\n\nQuestion 3\nIt was noted by Clepper’s intern that some people and vessels are using pseudonyms to communicate.\n3a. Expanding upon your prior visual analytics, determine who is using pseudonyms to communicate, and what these pseudonyms are.\n\nSome that Clepper has already identified include: “Boss”, and “The Lookout”, but there appear to be many more.\nTo complicate the matter, pseudonyms may be used by multiple people or vessels.\n\n3b. Describe how your visualizations make it easier for Clepper to identify common entities in the knowledge graph.\n3c. How does your understanding of activities change given your understanding of pseudonyms?\nQuestion 4\nClepper suspects that Nadia Conti, who was formerly entangled in an illegal fishing scheme, may have continued illicit activity within Oceanus.\n4a. Through visual analytics, provide evidence that Nadia is, or is not, doing something illegal.\n4b. Summarize Nadia’s actions visually. Are Clepper’s suspicions justified?"
  },
  {
    "objectID": "intro.html#background-and-questions",
    "href": "intro.html#background-and-questions",
    "title": "🌊 Project Introduction 🪸",
    "section": "",
    "text": "In this study, we will be tackling Mini-case 3 of VAST Challenge 2025.\n\n\nOver the past decade, the community of Oceanus has faced numerous transformations and challenges evolving from its fishing-centric origins. Following major crackdowns on illegal fishing activities, suspects have shifted investments into more regulated sectors such as the ocean tourism industry, resulting in growing tensions. This increased tourism has recently attracted the likes of international pop star Sailor Shift, who announced plans to film a music video on the island.\nClepper Jensen, a former analyst at FishEye and now a seasoned journalist for the Hacklee Herald, has been keenly observing these rising tensions. Recently, he turned his attention towards the temporary closure of Nemo Reef. By listening to radio communications and utilizing his investigative tools, Clepper uncovered a complex web of expedited approvals and secretive logistics. These efforts revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group The Green Guardians, pointing towards a story of corruption and manipulation.\nOur task is to develop new and novel visualizations and visual analytics approaches to help Clepper get to the bottom of this story.\n\n\n\nClepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following 4 questions.\n\nQuestion 1\nClepper found that messages frequently came in at around the same time each day.\n1a. Develop a graph-based visual analytics approach to identify any daily temporal patterns in communications.\n1b. How do these patterns shift over the two weeks of observations?\n1c. Focus on a specific entity and use this information to determine who has influence over them.\nQuestion 2\nClepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation.\n2a. Use visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph.\n2b. Are there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?\n\nFor example, these groupings could be related to: Environmentalism (known associates of Green Guardians), Sailor Shift, and fishing/leisure vessels.\n\nQuestion 3\nIt was noted by Clepper’s intern that some people and vessels are using pseudonyms to communicate.\n3a. Expanding upon your prior visual analytics, determine who is using pseudonyms to communicate, and what these pseudonyms are.\n\nSome that Clepper has already identified include: “Boss”, and “The Lookout”, but there appear to be many more.\nTo complicate the matter, pseudonyms may be used by multiple people or vessels.\n\n3b. Describe how your visualizations make it easier for Clepper to identify common entities in the knowledge graph.\n3c. How does your understanding of activities change given your understanding of pseudonyms?\nQuestion 4\nClepper suspects that Nadia Conti, who was formerly entangled in an illegal fishing scheme, may have continued illicit activity within Oceanus.\n4a. Through visual analytics, provide evidence that Nadia is, or is not, doing something illegal.\n4b. Summarize Nadia’s actions visually. Are Clepper’s suspicions justified?"
  },
  {
    "objectID": "intro.html#the-data",
    "href": "intro.html#the-data",
    "title": "🌊 Project Introduction 🪸",
    "section": "1.2 The Data",
    "text": "1.2 The Data\nWe used the dataset provided by VAST Challenge. We were provided a knowledge graph created from transcripts of boat radio communications for two weeks on Oceanus. We were asked to identify people, their roles, and the events and locations they talked to get to the bottom of the story. This graph is a network data that contains nodes that represent the different entities, events, and relationships, and edges which represent the relationships between different nodes."
  },
  {
    "objectID": "intro.html#methodology",
    "href": "intro.html#methodology",
    "title": "🌊 Project Introduction 🪸",
    "section": "1.3 Methodology",
    "text": "1.3 Methodology\nTo answer these questions, we investigated the communications and relationships among entities. We did this by creating visualisation such as subgraphs of networks, chord diagrams, timeline plots, wordclouds, and circular bar charts. Then we tabled the findings, and discussion/ interpretations."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "datapre.html",
    "href": "datapre.html",
    "title": "🌊 Data Preparation 🪸",
    "section": "",
    "text": "To build this prototype module, we adopted a structured visual analytics approach, starting from data ingestion to visual storytelling. The knowledge graph provided in Mini-Challenge 3 was first cleaned, transformed, and modeled using tidygraph. Communication patterns, relationships, and anomalies were then extracted through modular analysis and visualized using both static (ggplot2, ggraph) and interactive (plotly, visNetwork) tools.\nThe overall methodology consists of the following stages:\n\nData Preparation We loaded and flattened the JSON-based knowledge graph, extracted nodes and edges, cleaned missing values, and validated the network structure for compatibility with tidygraph. Each entity was classified by type and sub-type to enable filtering and targeted analysis.\nModular Task Execution Each of the four investigative tasks was assigned to team member, allowing parallel and comparison development:\n\n\nTemporal trends were analyzed by aggregating communication timestamps by hour and date.\nEntity relationships were explored through network graph layouts and centrality measures.\nAnomaly detection used Z-score normalization on daily message counts.\nSuspicious activity was investigated through person-to-person messaging analysis.\n\n\nPrototype Development All modules were translated into reactive components suitable for a Shiny application. Input widgets such as selectInput(), dateRangeInput(), and checkboxGroupInput() allow user-driven filtering, while outputs include plotlyOutput() and visNetworkOutput() for dynamic and exploratory analysis.\nDesign and Storyboarding A UI storyboard was drafted to guide the layout of the final Shiny app, ensuring usability and clarity. Each module was built to function independently but integrate smoothly into the full application."
  },
  {
    "objectID": "datapre.html#defining-common-variables",
    "href": "datapre.html#defining-common-variables",
    "title": "🌊 Data Preparation 🪸",
    "section": "2.1 Defining common variables",
    "text": "2.1 Defining common variables\nWe will also set some values for consistency throughout all graphs.\n\nStyle and Colours\n\n\n\n\nShow the code\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",\n  \"Relationship\" = \"#AF8DC3\",\n  \"Nadia Conti\" = \"red\"\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",\n  \"Relationship\" = \"square x\",\n  \"Nadia Conti\" = \"star\"\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)"
  },
  {
    "objectID": "datapre.html#inspecting-knowledge-graph-structure",
    "href": "datapre.html#inspecting-knowledge-graph-structure",
    "title": "🌊 Data Preparation 🪸",
    "section": "2.2 Inspecting knowledge graph structure",
    "text": "2.2 Inspecting knowledge graph structure\nIn the code chunk below glimpse() is used to reveal the structure of mc3_data knowledge graph.\n\nThe CodeThe Result\n\n\nglimpse(mc3_data)\n\n\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "datapre.html#extracting-the-edges-and-nodes-tables",
    "href": "datapre.html#extracting-the-edges-and-nodes-tables",
    "title": "🌊 Data Preparation 🪸",
    "section": "2.3 Extracting the edges and nodes tables",
    "text": "2.3 Extracting the edges and nodes tables\nNext, as_tibble() of tibble package package is used to extract the nodes and links tibble data frames from mc3 tibble dataframe into two separate tibble dataframes called mc3_nodes_raw and mc3_edges_raw respectively.\n\nThe CodeNodes structureEdges structure\n\n\n\n\nShow the code\nmc3_nodes_raw &lt;- as_tibble(mc3_data$nodes)\nmc3_edges_raw &lt;- as_tibble(mc3_data$edges)\n\n\nWe also looked into the nodes and edges structure.\n\n\n\n\nShow the code\nExpData(data=mc3_nodes_raw,type=2)\n\n\n   Index     Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1              type     character     1159             0          0.000\n2      2             label     character     1159             0          0.000\n3      3              name     character       72          1087          0.938\n4      4          sub_type     character     1159             0          0.000\n5      5                id     character     1159             0          0.000\n6      6         timestamp     character      770           389          0.336\n7      7   monitoring_type     character       70          1089          0.940\n8      8          findings     character       70          1089          0.940\n9      9           content     character      584           575          0.496\n10    10   assessment_type     character       33          1126          0.972\n11    11           results     character       32          1127          0.972\n12    12     movement_type     character       33          1126          0.972\n13    13       destination     character       41          1118          0.965\n14    14  enforcement_type     character       21          1138          0.982\n15    15           outcome     character       19          1140          0.984\n16    16     activity_type     character        4          1155          0.997\n17    17      participants       integer        1          1158          0.999\n18    18   thing_collected    data.frame    -2314          2316       1158.000\n19    19         reference     character        1          1158          0.999\n20    20              date     character        5          1154          0.996\n21    21              time     character        3          1156          0.997\n22    22   friendship_type     character        2          1157          0.998\n23    23   permission_type     character       55          1104          0.953\n24    24        start_date     character       90          1069          0.922\n25    25          end_date     character        6          1153          0.995\n26    26       report_type     character       19          1140          0.984\n27    27   submission_date     character       22          1137          0.981\n28    28 jurisdiction_type     character       13          1146          0.989\n29    29   authority_level     character        7          1152          0.994\n30    30 coordination_type     character       73          1086          0.937\n31    31  operational_role     character       38          1121          0.967\n   No_of_distinct_values\n1                      3\n2                     92\n3                     73\n4                     25\n5                   1159\n6                    612\n7                      6\n8                     70\n9                    581\n10                     4\n11                    33\n12                     4\n13                    26\n14                     3\n15                    20\n16                     3\n17                     1\n18                     2\n19                     2\n20                     6\n21                     4\n22                     3\n23                     4\n24                    69\n25                     6\n26                     4\n27                    23\n28                    13\n29                     3\n30                    53\n31                    35\n\n\n\n\n\n\nShow the code\nExpData(data=mc3_edges_raw,type=2)\n\n\n  Index Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1     1            id     character     3169            57          0.018\n2     2   is_inferred       logical     3226             0          0.000\n3     3        source     character     3226             0          0.000\n4     4        target     character     3226             0          0.000\n5     5          type     character     2204          1022          0.317\n  No_of_distinct_values\n1                  3170\n2                     2\n3                  1052\n4                  1156\n5                     4"
  },
  {
    "objectID": "datapre.html#nodes-via-shiny",
    "href": "datapre.html#nodes-via-shiny",
    "title": "🌊 Data Preparation 🪸",
    "section": "3.1 Nodes via Shiny",
    "text": "3.1 Nodes via Shiny\n\nNodesDrilling into Node sub_typeEntity subtypesEvent subtypesRelationship subtypes\n\n\nIn the code chunk below, ExpCatViz() of SmartEDA package is used to reveal the frequency distribution of all categorical fields in mc3_nodes tibble dataframe.\n\n\nShow the code\nlibrary(shiny)\nlibrary(ggplot2)\n\n# Run ExpCatViz once at the top to avoid recomputing\nExpCatViz(data=mc3_nodes_raw,\n          col=\"navyblue\")\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n\n\n\n\n\nCode chunk below uses ggplot2 functions to reveal the frequency distribution of sub_type field of mc3_nodes_raw.\n\n\nShow the code\n# Step 1: Count and reorder\nmc3_nodes_ordered &lt;- mc3_nodes_raw %&gt;%\n  count(sub_type) %&gt;%\n  arrange((n)) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type))\n\n# Step 2: Plot with navy bars, sorted, and horizontal\nggplot(mc3_nodes_ordered, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(x = \"Sub_type\", y = \"Count\",\n    title = \"Distribution of Subtypes\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the Entity subtypes are filtered.\n\n\nShow the code\n# Step 1: Filter for type == \"Entity\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Entity\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type)) \n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Entity Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Entity Subtypes\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the Event subtypes are filtered.\n\n\nShow the code\n# Step 1: Filter for type == \"Event\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Event\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type)) \n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Event Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Event Subtypes\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the relationship subtypes are filtered.\n\n\nShow the code\n# Step 1: Filter for type == \"Relationship\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Relationship\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type))\n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Relationship Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Relationship Subtypes\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "datapre.html#findings-from-eda",
    "href": "datapre.html#findings-from-eda",
    "title": "🌊 Data Preparation 🪸",
    "section": "3.1.1 Findings from EDA",
    "text": "3.1.1 Findings from EDA\n\nNodesEvent TypesRelationship TypesEntity TypesCourse of Action\n\n\nWe will use the EDA findings to determine data to focus on or eliminate. From the bar charts and the original data on mc3_nodes_raw, it was observed that:\n\nNodes were one of three types (Entity, Event, Relationship), where each of these types have their sub_types. Majority were of event type, followed by relationship, and entity.\n\nThere were 25 subtypes. Communications made up the bulk of the sub_type for Events. Coordinates made up the bulk of the sub_type for Relationship. The additional node sub_types not mentioned in the VAST 2025 MC3 Data Description under Node Attributes were: fishing, communication and coordinates.\n\n\n\n\n\nObservations of EDA from Event types:\n\nFindings field were filled when there were monitoring_type.\nContent refers to radio communication content.\nResults field were filled when there were assessment_type performed.\nWhen there is an enforcement_type of enforcement operations or warnings, there might be an outcome at times.\nWhen there is a movement_type, there might be a place of destination at times.\n\n\n\n\n\nObservations of EDA from Relationship types:\n\nWhen the subtype was coordinate, there were data in the field named coordination_types.\nWhen the subtype was operate, there were data in the field named operational_roles.\nWhen there is a jurisdiction_type, there might be an authority_level.\nThere are only restricted or special access data within permission_types.\nWhen there is a report_type of data transmission or environmental report, there might be a submission_date.\n\n\n\n\n\nObservations of EDA from Entity types:\n\nThe 5 id under Group sub-types were not very useful information.\n\n\n\n\n\nElimination and directed focus:\n\nRelative to the entire dataset, there were little assessment_type (3%), movement_type (2%), enforcement_type (2%), permission_type (4%), report_type (2%), authority_level (1%). We will direct our focus on other areas instead of these.\nThere were no to little useful data in the fields named: activity_type, references, dates, time, and friendship_type. These were not utilised.\nWe directed our focus on Event_Communication, Event_Monitoring, and Event_VesselMovement."
  },
  {
    "objectID": "datapre.html#edges",
    "href": "datapre.html#edges",
    "title": "🌊 Data Preparation 🪸",
    "section": "3.2 Edges",
    "text": "3.2 Edges\nThe code chunk below used ExpCATViz() of SmartEDA package to reveal the frequency distribution of all categorical fields in mc3_edges_raw tibble dataframe.\n\nFrequency Distribution of Categorical FieldsFilter by type == sent\n\n\n\n\nShow the code\nExpCatViz(data=mc3_edges_raw,\n          col=\"navyblue\")\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\nEntities are connected by edges to other Entities via an Event or Relationship node. The one exception to this is the Communication Event subtype, which is additionally linked to either an Event or Relationship node. The type field denotes the connector or edge type for the Entities, Event, and Relationship nodes. The edges are one of these: received, evidence_for, sent, NA.\n\n\n\n\nShow the code\n# Step 1: Filter for type == \"sent\"\nfiltered_edges &lt;- mc3_edges_raw %&gt;%\n  filter(type == \"sent\") %&gt;%\n  count(source) %&gt;%\n  arrange(desc(n)) %&gt;%\n  mutate(source = factor(source, levels = rev(unique(source))))  # descending \n\n# Step 2: Plot\nggplot(filtered_edges, aes(x = source, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of 'sent' Edges type by Source\",\n    x = \"Source\",\n    y = \"Count\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nWhat we understood from the information provided by Vast Challenge on Directional Edges:\n\nFor relationship as colleagues node or friends node, the node will have arrows/ edges pointing towards the relationship node.\nFor other relationships and events, the direction would be following the source and target."
  },
  {
    "objectID": "datapre.html#data-cleaning-and-wrangling",
    "href": "datapre.html#data-cleaning-and-wrangling",
    "title": "🌊 Data Preparation 🪸",
    "section": "4.1 Data Cleaning and Wrangling",
    "text": "4.1 Data Cleaning and Wrangling\n\nCleaning and wrangling nodesUnique Node CountCleaning and wrangling edgesUnique Edges CountOther preparatory work\n\n\n\nconvert values in id field into character data type,\nexclude records with id value are na,\nexclude records with similar id values,\nexclude thing_collected , time , date, friendship_type field, and\nsave the cleaned tibble dataframe into a new tibble datatable called mc3_nodes_cleaned.\n\n\n\nShow the code\nmc3_nodes_cleaned &lt;- mc3_nodes_raw %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  select(-thing_collected, -time, -date, -friendship_type)\n\n\n\n\n\n\n# A tibble: 27 × 2\n   column            unique_count\n   &lt;chr&gt;                    &lt;int&gt;\n 1 id                        1159\n 2 timestamp                  612\n 3 content                    581\n 4 label                       92\n 5 name                        73\n 6 findings                    70\n 7 start_date                  69\n 8 coordination_type           53\n 9 operational_role            35\n10 results                     33\n# ℹ 17 more rows\n\n\n\n\n\nrenamed source and target fields to from_id and to_id respectively,\nconverted values in from_id and to_id fields to character data type,\nexcluded values in from_id and to_id which not found in the id field of mc3_nodes_cleaned,\nexcluded records whereby from_id and/or to_id values are missing, and\nsaved the cleaned tibble dataframe and called it mc3_edges_cleaned.\n\n\n\nShow the code\nmc3_edges_cleaned &lt;- mc3_edges_raw %&gt;%\n  rename(from_id = source,\n         to_id = target) %&gt;%\n  mutate(across(c(from_id, to_id), as.character)) %&gt;%\n  # Parse to_id to get supertype and sub_type for target nodes (e.g., Event_Communication)\n  separate(to_id, into = c(\"to_id_supertype\", \"to_id_sub_type\", \"to_id_num\"),\n           sep = \"_\", remove = FALSE, fill = \"right\", extra = \"merge\") %&gt;%\n  # Filter to ensure from_id and to_id exist in mc3_nodes_cleaned (prevent orphaned edges)\n  filter(from_id %in% mc3_nodes_cleaned$id,\n         to_id %in% mc3_nodes_cleaned$id) %&gt;%\n  filter(!is.na(from_id), !is.na(to_id))\n\nprint(\"Columns in mc3_edges_cleaned after initial cleaning:\")\n\n\n[1] \"Columns in mc3_edges_cleaned after initial cleaning:\"\n\n\nShow the code\nprint(colnames(mc3_edges_cleaned))\n\n\n[1] \"id\"              \"is_inferred\"     \"from_id\"         \"to_id\"          \n[5] \"to_id_supertype\" \"to_id_sub_type\"  \"to_id_num\"       \"type\"           \n\n\nShow the code\nprint(\"Head of mc3_edges_cleaned after initial cleaning:\")\n\n\n[1] \"Head of mc3_edges_cleaned after initial cleaning:\"\n\n\nShow the code\nprint(head(mc3_edges_cleaned))\n\n\n# A tibble: 6 × 8\n  id    is_inferred from_id to_id to_id_supertype to_id_sub_type to_id_num type \n  &lt;chr&gt; &lt;lgl&gt;       &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt;\n1 2     TRUE        Sam     Rela… Relationship    Suspicious     217       &lt;NA&gt; \n2 3     FALSE       Sam     Even… Event           Communication  370       sent \n3 5     TRUE        Sam     Even… Event           Assessment     600       &lt;NA&gt; \n4 3013  TRUE        Sam     Rela… Relationship    Colleagues     430       &lt;NA&gt; \n5 &lt;NA&gt;  TRUE        Sam     Rela… Relationship    Friends        272       &lt;NA&gt; \n6 &lt;NA&gt;  TRUE        Sam     Rela… Relationship    Colleagues     215       &lt;NA&gt; \n\n\n\n\n\n\nShow the code\n# Find the number of unique types in each column\nunique_counts &lt;- mc3_edges_cleaned %&gt;%\n  summarise_all(n_distinct) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"column\", values_to = \"unique_count\")\n\n# Print the unique counts for each column\nprint(unique_counts)\n\n\n# A tibble: 8 × 2\n  column          unique_count\n  &lt;chr&gt;                  &lt;int&gt;\n1 id                      3170\n2 is_inferred                2\n3 from_id                 1052\n4 to_id                   1156\n5 to_id_supertype           71\n6 to_id_sub_type            21\n7 to_id_num                860\n8 type                       4\n\n\n\n\nNext, code chunk below will be used to create mapping of character id in mc3_nodes_cleaned to row index\n\n\nShow the code\nnode_index_lookup &lt;- mc3_nodes_cleaned %&gt;%\n  mutate(.row_id = row_number()) %&gt;%\n  select(id, .row_id)\n\n\nNext, the code chunk below was used to join and convert from_id and to_id to integer indices. At the same time we also dropped rows with unmatched nodes.\n\n\nShow the code\nmc3_edges_indexed &lt;- mc3_edges_cleaned %&gt;%\n  left_join(node_index_lookup, by = c(\"from_id\" = \"id\")) %&gt;%\n  rename(from = .row_id) %&gt;%\n  left_join(node_index_lookup, by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(to = .row_id) %&gt;%\n  # Filter out edges where either source or target node was not found\n  filter(!is.na(from) & !is.na(to)) %&gt;%\n  # Select all columns to carry forward to mc3_edges_final\n  select(from, to, id, is_inferred, type, # Original edge attributes\n         from_id, to_id, to_id_supertype, to_id_sub_type, to_id_num # Original IDs and parsed target type\n         )\n\n\nNext the code chunk below was used to subset nodes to only those referenced by edges.\n\n\nShow the code\nused_node_indices &lt;- sort(unique(c(mc3_edges_indexed$from, mc3_edges_indexed$to)))\nmc3_nodes_final &lt;- mc3_nodes_cleaned %&gt;%\n  slice(used_node_indices) %&gt;%\n  mutate(new_index = row_number())\n\n\nWe then used the code chunk below to rebuild lookup from old index to new index.\n\n\nShow the code\nold_to_new_index &lt;- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(used_node_indices)\n)\n\n\nLastly, the code chunk below was used to update edge indices to match new node table.\n\n\nShow the code\nmc3_edges_final &lt;- mc3_edges_indexed %&gt;%\n  left_join(old_to_new_index, by = c(\"from\" = \"old_index\")) %&gt;%\n  rename(from_new = new_index) %&gt;%\n  left_join(old_to_new_index, by = c(\"to\" = \"old_index\")) %&gt;%\n  rename(to_new = new_index) %&gt;%\n  # Explicitly select all columns that are needed downstream\n  select(from = from_new, to = to_new,\n         id, is_inferred, type,\n         from_id, to_id, to_id_supertype, to_id_sub_type, to_id_num)"
  },
  {
    "objectID": "datapre.html#building-the-tidygraph-object",
    "href": "datapre.html#building-the-tidygraph-object",
    "title": "🌊 Data Preparation 🪸",
    "section": "4.2 Building the tidygraph object",
    "text": "4.2 Building the tidygraph object\n\nBuild the object-tbl_graphExamining the object\n\n\n\n\nShow the code\nmc3_graph &lt;- tbl_graph(\n  nodes = mc3_nodes_final,\n  edges = mc3_edges_final,\n  directed = TRUE\n)\n\n\n\n\n\n\nShow the code\nstr(mc3_graph)\n\n\nClasses 'tbl_graph', 'igraph'  hidden list of 10\n $ : num 1159\n $ : logi TRUE\n $ : num [1:3226] 0 0 0 0 0 0 0 1 1 1 ...\n $ : num [1:3226] 1137 356 746 894 875 ...\n $ : NULL\n $ : NULL\n $ : NULL\n $ : NULL\n $ :List of 4\n  ..$ : num [1:3] 1 0 1\n  ..$ : Named list()\n  ..$ :List of 28\n  .. ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  .. ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  .. ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  .. ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ findings         : chr [1:1159] NA NA NA NA ...\n  .. ..$ content          : chr [1:1159] NA NA NA NA ...\n  .. ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ results          : chr [1:1159] NA NA NA NA ...\n  .. ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ destination      : chr [1:1159] NA NA NA NA ...\n  .. ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  .. ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  .. ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  .. ..$ reference        : chr [1:1159] NA NA NA NA ...\n  .. ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  .. ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  .. ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  .. ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  .. ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  .. ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ operational_role : chr [1:1159] NA NA NA NA ...\n  .. ..$ new_index        : int [1:1159] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ :List of 8\n  .. ..$ id             : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  .. ..$ is_inferred    : logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  .. ..$ type           : chr [1:3226] NA \"sent\" NA NA ...\n  .. ..$ from_id        : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  .. ..$ to_id          : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  .. ..$ to_id_supertype: chr [1:3226] \"Relationship\" \"Event\" \"Event\" \"Relationship\" ...\n  .. ..$ to_id_sub_type : chr [1:3226] \"Suspicious\" \"Communication\" \"Assessment\" \"Colleagues\" ...\n  .. ..$ to_id_num      : chr [1:3226] \"217\" \"370\" \"600\" \"430\" ...\n $ :&lt;environment: 0x7fa891454218&gt; \n - attr(*, \"active\")= chr \"nodes\""
  },
  {
    "objectID": "datapre.html#visnetwork",
    "href": "datapre.html#visnetwork",
    "title": "🌊 Data Preparation 🪸",
    "section": "VisNetwork",
    "text": "VisNetwork\nVisNetwork provides the user to understand relationships through interactivity. For instance:\n\nThe individual nodes can be selected from the drop-down menu to view its connected nodes and edges.\nThe hover tooltip provides additional details from fields such as content, coordination_type, findings, destination, operational_role, results, and jurisdiction_type based on the related id information from mc3_nodes_final."
  },
  {
    "objectID": "datapre.html#the-graph--visnetwork",
    "href": "datapre.html#the-graph--visnetwork",
    "title": "🌊 Data Preparation 🪸",
    "section": "The Graph- VisNetwork",
    "text": "The Graph- VisNetwork\n\n\n\n\n\n\n\n\n\n\nShow the code\n# ---- 1. Define styles and legends ----\n\nevent_subtypes &lt;- c(\n  \"Communication\", \"Monitoring\", \"VesselMovement\", \"Assessment\",\n  \"Collaborate\", \"Endorsement\", \"TourActivity\", \"TransponderPing\",\n  \"Harbor Report\", \"Fishing\", \"Criticize\"\n)\n\nrelationship_subtypes &lt;- c(\n  \"Coordinates\", \"AccessPermission\", \"Operates\", \"Colleagues\",\n  \"Suspicious\", \"Reports\", \"Jurisdiction\", \"Unfriendly\", \"Friends\"\n)\n\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",         # type level\n  \"Relationship\" = \"#AF8DC3\"   # type level\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",              # type level\n  \"Relationship\" = \"square x\"    # type level\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)\n\n# ---- 2. Prepare nodes ----\nnodes &lt;- mc3_nodes_final %&gt;%\n  mutate(\n    label = ifelse(is.na(name), id, name),\n    \n    # These parts are for pulling the related data from other fields\n    tooltip_extra = case_when(\n      type == \"Event\" & sub_type == \"Communication\" ~ content,\n      type == \"Event\" & sub_type == \"Monitoring\" ~ findings,\n      type == \"Event\" & sub_type == \"VesselMovement\" ~ destination,\n      type == \"Event\" & sub_type == \"Assessment\" ~ results,\n      type == \"Relationship\" & sub_type == \"Coordinates\" ~ coordination_type,\n      type == \"Relationship\" & sub_type == \"Operates\" ~ operational_role,\n      type == \"Relationship\" & sub_type == \"Jurisdiction\" ~ jurisdiction_type,\n      TRUE ~ NA_character_\n    ),\n    \n    title = paste0(\n      \"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Type: \", type, \"&lt;br&gt;\",\n      \"Sub-type: \", sub_type, \"&lt;br&gt;\",\n      ifelse(!is.na(tooltip_extra), paste0(\"&lt;br&gt;&lt;b&gt;Details:&lt;/b&gt; \", tooltip_extra), \"\")\n    ),\n    \n    # Fallback logic: if sub_type is NA or not in styling list, use type instead\n    group = ifelse(sub_type %in% names(node_legend_colors_plot), sub_type, type)\n  ) %&gt;%\n  select(id, label, group, title) %&gt;%\n  distinct()\n\n# ---- 3. Prepare directed edges (type == \"sent\") ----\n\nedges &lt;- mc3_edges_final %&gt;%\n  filter(from_id %in% nodes$id & to_id %in% nodes$id) %&gt;%\n  select(from = from_id, to = to_id)\n\n# ---- 4. Build visNetwork ----\n\nnet &lt;- visNetwork(nodes, edges, width = \"100%\", height = \"600px\") %&gt;%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 1.5))) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(\n    size = 14,\n    color = STYLES$node_label_dark,\n    face = STYLES$font_family,\n    vadjust = -15\n  ))\n\n# ---- 5. Apply shape and color per group ----\n\nfor (group_name in names(node_legend_colors_plot)) {\n  net &lt;- net %&gt;% visGroups(\n    groupname = group_name,\n    color = node_legend_colors_plot[[group_name]],\n    shape = node_legend_shapes_plot[[group_name]]\n  )\n}\n# ---- 6. Add legend ----\n\nused_groups &lt;- unique(nodes$group)\n\nlegend_df &lt;- tibble::tibble(\n  label = used_groups,\n  shape = node_legend_shapes_plot[used_groups],\n  color = node_legend_colors_plot[used_groups]\n) %&gt;%\n  distinct(label, .keep_all = TRUE)  # remove duplicates just in case\n\nnet &lt;- net %&gt;% visLegend(\n  addNodes = legend_df,\n  ncol = 2,                         # number of columns\n  position = \"left\",              \n  main = \"Entity (Sub)Types\",      # title\n  useGroups = FALSE                # show custom legend entries\n)\n# ---- 7. Render ----\nnet"
  }
]
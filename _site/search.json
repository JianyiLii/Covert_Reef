[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "🌊 Covert Reef Team Members 🪸",
    "section": "",
    "text": "Yang LuAudrey TanLi Jianyi\n\n\nWrite something!!!!\n\n\n\n\n\n\nYang Lu\n\n\n\nPlease feel free to click on my LinkedIn and GitHub links for more info!   Linkedin  |   GitHub\n\n\n\n\nWrite something!!!!\n\n\n\n\n\n\nAudrey\n\n\n\nPlease feel free to click on my LinkedIn and GitHub links for more info!   Linkedin  |   GitHub\n\n\n\n\nMy name is Jianyi, and I came into the Visual Analytics module hoping to learn how to turn complex data into clear and engaging visuals. The module exceeded my expectations by equipping me with practical skills in R, Shiny, and Quarto, while also teaching me the importance of design, storytelling, and user experience in data communication. I especially enjoyed building interactive dashboards and applying visual thinking to real-world scenarios. I believe these skills will be valuable in future projects, business reporting, and communicating insights to both technical and non-technical audiences.\n\n\n\n\n\n\nJianyi\n\n\n\nPlease feel free to click on my LinkedIn and GitHub links for more info!   Linkedin  |   GitHub"
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "🌊 Project Proposal 🪸",
    "section": "",
    "text": "Clepper, a lead investigator on Oceanus, has been closely monitoring the closure of Nemo Reef. Over the span of two weeks, he and his intern listened to and analyzed radio communications and utilized his investigative tools to uncover a complex web of expedited approvals, hidden communication, and secretive logistics. Their investigation revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and the Green Guardians, who are a local conservationist group, pointing towards possibilities of corruption and manipulation. Amidst this investigation, Nadia Conti, a known figure formerly entangled in illegal fishing operations, has resurfaced as a person of interest. The project aims to develop new and novel visual analytics techniques to support Clepper’s investigation in uncovering the full extent of the events on Oceanus."
  },
  {
    "objectID": "proposal.html#website-look",
    "href": "proposal.html#website-look",
    "title": "🌊 Project Proposal 🪸",
    "section": "Website Look",
    "text": "Website Look"
  },
  {
    "objectID": "proposal.html#shiny-applications-on-networks-and-visualisations",
    "href": "proposal.html#shiny-applications-on-networks-and-visualisations",
    "title": "🌊 Project Proposal 🪸",
    "section": "Shiny Applications on Networks and Visualisations",
    "text": "Shiny Applications on Networks and Visualisations\n\n\nInputsOutputs\n\n\nThe Shiny app will include some of these parts.\n\nKnowledge graph\nAs the entire network is very large, containing 1,159 nodes and 3,226 edges, it is not suitable to visualize the entire network. Hence, we will plot with subgraphs and other visualisations.\n\n\nReference Node\nFor Nadia’s ego network, we require a reference node (Nadia).\n\n\nNetwork depth\nIn relation to the reference node, this serves to narrow down the network to view. The depth dictates how far from the reference node to network. As Nadia’s networks are at distance 1 or distance 2, we will add an option to toggle whether to render the full network or use the option to render by distance to the reference node.\n\n\n\n\nPlot area\nShows the network or visualisation plot. It will be interactive to enable closer inspection of network or visual elements.\n\n\n\n\nThese are some prototypes of the webpage and shiny application that we are planning to build for the project. The whole concept of this storyboard is mainly to allow the user to utilise interactive visualisations such as timeseries slides, clickable components, or hovers to get to the bottom of the activites brewing at Oceanus such as the Nemo Reef Operation. Hence, enhancing the whole user experience as they follow us along on uncovering the story."
  },
  {
    "objectID": "meeting_minutes.html",
    "href": "meeting_minutes.html",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 15/05/2025 \nTime: 7:30 - 8:00 PM\nIn Attendance: Li Jianyi, Yang Lu \nAgenda Items \n\nDiscussion on project topic \n\n\n\nAction items \n\nAgenda Item 1: Discussion on project topic \n\nPrior to the meeting, the team read the different challenges from VAST Challenge 2025 to select our respective preferences.  \n\n\n\nThe team disagreed to do the challenge as Yang Lu prefers MC2, while Li JianYi prefers MC3. \n\n\n\nThe team agreed on MC3 as we thought that through the challenge, we could utilise what we have learned in class and add more insights from our own current knowledge bank. \n\n\n\nThe team also informed Audrey on the team’s choice of MC3 as she mentioned she was fine with any topic since she was on medical leave. \n\nAction Items \n\nAll members will revisit the MC3 document to identify any gaps in understanding the knowledge graph’s structure and content. \n\n\n\n\nDate: 24/05/2025 \nTime: 3.45 - 4:15 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nSharing our work progress for MC3 \n\n\n\nDivision of tasks for Project Proposal \n\nAgenda Item 1: Sharing our work progress \n\nYang Lu is completing Question 1. Audrey is completing Questions 2 and 4.  \n\n\n\nJianyi will work on Question 3 and attempt other Questions if he has the time.  \n\nAgenda Item 2: Division of tasks for the project. \n\nThe team agreed to complete their assigned questions and attempt to complete other questions as much as possible if they have the time. \n\n\n\nThe team will refer to the project requirements and seniors’ work for references.\n\n\n\n\nDate: 02/06/2025 \nTime: 8.00 - 8:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nDivision of tasks for the project. \n\n\n\nAction items \n\nAgenda Item 1: Division of tasks for Project \n\nWe decided to focus on the most urgent component, which was the project proposal due on 8 June 2025.  \n\n\n\nJianyi will cover the Shiny and Netlify setup. \n\n\n\nYang Lu and Audrey will cover the Meeting Minutes and Project Proposal. \n\nAgenda Item 2: Action Items \n\nJianyi will help the team to push the Project Proposal to GitHub after Yang Lu and Audrey finish the Meeting Minutes and Project Proposal. \n\n\n\n\nDate: 07/06/2025 \nTime: 2.45 - 4:35 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nUI storyboard template and format\nThe distinction between Take-home Exercise 3 and the group project deliverable\nGitHub branching & collaboration workflow\n\nAgenda Item 1: UI Storyboard Template & Format\nTemplate Style\n\nAdopt a clean “dark-blue” or similar professional colour palette to be consistent with the theme of the project.\nUse consistent title headers, footers, and navigation bar mock-ups.\nPrint-screen of each implemented UI page\nCapture one overall shot of each primary view in the app, such as the homepage, the detail page, and the filter/control panel, so the storyboard illustrates the full user journey.\n\nAgenda Item 2: Distinction Group Project Website (Covert Reef)\n\nStatic homepage summarizing group methodology, team introduction and proposal.\nMay include embedded visuals, but not required to be Shiny.\nShared Netlify site under group account\nGitHub repo link for group deliverable (proposal, poster, minutes).\n\n\n\n\nDate: 23/06/2025 \nTime: 8.00PM - 9:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nHarmonization of data variables and nomenclature\nWebsite architecture and content framework\nWork distribution and consolidation approach\nInteractive vs static visualization deployment strategy\n\nAgenda Item 1: Harmonization of data variables and nomenclature\n\nIssue Identified: Inconsistent variable naming across individual team contributions creating merge conflicts\n\n\n\nResolution: Establish unified naming standards for all data objects and variables prior to code integration\n\n\n\nImplementation: Conduct comprehensive review to synchronize nomenclature across all team member submissions\n\nAgenda Item 2: Website architecture and content framework\n\nData Preparation Section: Decided to create a unified data preparation section combining all team members’ preprocessing work\nMethodology vs Findings: Clarified that methodology should cover overall approach, while findings will contain question-specific analyses\nContent Strategy:\n\nCopy and paste shared components (packages, introduction, data preparation)\nCombine individual question analyses under findings section\nMaintain consistent formatting across all sections\n\n\nAgenda Item 3: Work distribution and consolidation approach\nAnalysis 1: Primary implementation using Yang Lu’s temporal heat map visualization, supplemented by Audrey’s community structure analysis\nAnalysis 2:\n\nComponent A: Deploy Audrey’s community detection visualizations (reference sections 7.5.8 through 7.5.11)\nComponent B: Incorporate Li Jianyi’s network metrics including betweenness centrality calculations\nIntegration: Merge Audrey’s visual community mapping with Jianyi’s quantitative connectivity analysis (degree and betweenness centrality measures)\n\nAnalysis 3: Synthesize findings from Analyses 2A&B with 3A investigation, utilizing Audrey’s Interactive Alluvial Diagrams as analytical foundation while ensuring coherence across related questions\nAnalysis 4: Maintain existing individual response with team validation\nAgenda Item 4: Interactive vs static visualization deployment strategy\n\nTechnical Constraint: Shiny applications offer superior user interaction but lack direct Netlify compatibility\n\n\n\nHybrid Approach:\n\nPreserve Shiny implementations for enhanced demonstration capabilities\nDevelop static alternatives optimized for Netlify integration\n\n\n\n\nDevelopment Priority: Emphasize functional delivery over visual sophistication for web deployment"
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-1",
    "href": "meeting_minutes.html#project-meeting-1",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 15/05/2025 \nTime: 7:30 - 8:00 PM\nIn Attendance: Li Jianyi, Yang Lu \nAgenda Items \n\nDiscussion on project topic \n\n\n\nAction items \n\nAgenda Item 1: Discussion on project topic \n\nPrior to the meeting, the team read the different challenges from VAST Challenge 2025 to select our respective preferences.  \n\n\n\nThe team disagreed to do the challenge as Yang Lu prefers MC2, while Li JianYi prefers MC3. \n\n\n\nThe team agreed on MC3 as we thought that through the challenge, we could utilise what we have learned in class and add more insights from our own current knowledge bank. \n\n\n\nThe team also informed Audrey on the team’s choice of MC3 as she mentioned she was fine with any topic since she was on medical leave. \n\nAction Items \n\nAll members will revisit the MC3 document to identify any gaps in understanding the knowledge graph’s structure and content."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-2",
    "href": "meeting_minutes.html#project-meeting-2",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 24/05/2025 \nTime: 3.45 - 4:15 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nSharing our work progress for MC3 \n\n\n\nDivision of tasks for Project Proposal \n\nAgenda Item 1: Sharing our work progress \n\nYang Lu is completing Question 1. Audrey is completing Questions 2 and 4.  \n\n\n\nJianyi will work on Question 3 and attempt other Questions if he has the time.  \n\nAgenda Item 2: Division of tasks for the project. \n\nThe team agreed to complete their assigned questions and attempt to complete other questions as much as possible if they have the time. \n\n\n\nThe team will refer to the project requirements and seniors’ work for references."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-3",
    "href": "meeting_minutes.html#project-meeting-3",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 02/06/2025 \nTime: 8.00 - 8:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items \n\nDivision of tasks for the project. \n\n\n\nAction items \n\nAgenda Item 1: Division of tasks for Project \n\nWe decided to focus on the most urgent component, which was the project proposal due on 8 June 2025.  \n\n\n\nJianyi will cover the Shiny and Netlify setup. \n\n\n\nYang Lu and Audrey will cover the Meeting Minutes and Project Proposal. \n\nAgenda Item 2: Action Items \n\nJianyi will help the team to push the Project Proposal to GitHub after Yang Lu and Audrey finish the Meeting Minutes and Project Proposal."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-4",
    "href": "meeting_minutes.html#project-meeting-4",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 07/06/2025 \nTime: 2.45 - 4:35 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nUI storyboard template and format\nThe distinction between Take-home Exercise 3 and the group project deliverable\nGitHub branching & collaboration workflow\n\nAgenda Item 1: UI Storyboard Template & Format\nTemplate Style\n\nAdopt a clean “dark-blue” or similar professional colour palette to be consistent with the theme of the project.\nUse consistent title headers, footers, and navigation bar mock-ups.\nPrint-screen of each implemented UI page\nCapture one overall shot of each primary view in the app, such as the homepage, the detail page, and the filter/control panel, so the storyboard illustrates the full user journey.\n\nAgenda Item 2: Distinction Group Project Website (Covert Reef)\n\nStatic homepage summarizing group methodology, team introduction and proposal.\nMay include embedded visuals, but not required to be Shiny.\nShared Netlify site under group account\nGitHub repo link for group deliverable (proposal, poster, minutes)."
  },
  {
    "objectID": "meeting_minutes.html#project-meeting-5",
    "href": "meeting_minutes.html#project-meeting-5",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Date: 23/06/2025 \nTime: 8.00PM - 9:30 PM \nIn Attendance: Li Jianyi, Yang Lu, Audrey \nAgenda Items\n\nHarmonization of data variables and nomenclature\nWebsite architecture and content framework\nWork distribution and consolidation approach\nInteractive vs static visualization deployment strategy\n\nAgenda Item 1: Harmonization of data variables and nomenclature\n\nIssue Identified: Inconsistent variable naming across individual team contributions creating merge conflicts\n\n\n\nResolution: Establish unified naming standards for all data objects and variables prior to code integration\n\n\n\nImplementation: Conduct comprehensive review to synchronize nomenclature across all team member submissions\n\nAgenda Item 2: Website architecture and content framework\n\nData Preparation Section: Decided to create a unified data preparation section combining all team members’ preprocessing work\nMethodology vs Findings: Clarified that methodology should cover overall approach, while findings will contain question-specific analyses\nContent Strategy:\n\nCopy and paste shared components (packages, introduction, data preparation)\nCombine individual question analyses under findings section\nMaintain consistent formatting across all sections\n\n\nAgenda Item 3: Work distribution and consolidation approach\nAnalysis 1: Primary implementation using Yang Lu’s temporal heat map visualization, supplemented by Audrey’s community structure analysis\nAnalysis 2:\n\nComponent A: Deploy Audrey’s community detection visualizations (reference sections 7.5.8 through 7.5.11)\nComponent B: Incorporate Li Jianyi’s network metrics including betweenness centrality calculations\nIntegration: Merge Audrey’s visual community mapping with Jianyi’s quantitative connectivity analysis (degree and betweenness centrality measures)\n\nAnalysis 3: Synthesize findings from Analyses 2A&B with 3A investigation, utilizing Audrey’s Interactive Alluvial Diagrams as analytical foundation while ensuring coherence across related questions\nAnalysis 4: Maintain existing individual response with team validation\nAgenda Item 4: Interactive vs static visualization deployment strategy\n\nTechnical Constraint: Shiny applications offer superior user interaction but lack direct Netlify compatibility\n\n\n\nHybrid Approach:\n\nPreserve Shiny implementations for enhanced demonstration capabilities\nDevelop static alternatives optimized for Netlify integration\n\n\n\n\nDevelopment Priority: Emphasize functional delivery over visual sophistication for web deployment"
  },
  {
    "objectID": "datapre.html",
    "href": "datapre.html",
    "title": "🌊 Data Preparation 🪸",
    "section": "",
    "text": "To build this prototype module, we adopted a structured visual analytics approach, starting from data ingestion to visual storytelling. The knowledge graph provided in Mini-Challenge 3 was first cleaned, transformed, and modeled using tidygraph. Communication patterns, relationships, and anomalies were then extracted through modular analysis and visualized using both static (ggplot2, ggraph) and interactive (plotly, visNetwork) tools.\nThe overall methodology consists of the following stages:\n\nData Preparation We loaded and flattened the JSON-based knowledge graph, extracted nodes and edges, cleaned missing values, and validated the network structure for compatibility with tidygraph. Each entity was classified by type and sub-type to enable filtering and targeted analysis.\nModular Task Execution Each of the four investigative tasks was assigned to team member, allowing parallel and comparison development:\n\n\nTemporal trends were analyzed by aggregating communication timestamps by hour and date.\nEntity relationships were explored through network graph layouts and centrality measures.\nAnomaly detection used Z-score normalization on daily message counts.\nSuspicious activity was investigated through person-to-person messaging analysis.\n\n\nPrototype Development All modules were translated into reactive components suitable for a Shiny application. Input widgets such as selectInput(), dateRangeInput(), and checkboxGroupInput() allow user-driven filtering, while outputs include plotlyOutput() and visNetworkOutput() for dynamic and exploratory analysis.\nDesign and Storyboarding A UI storyboard was drafted to guide the layout of the final Shiny app, ensuring usability and clarity. Each module was built to function independently but integrate smoothly into the full application."
  },
  {
    "objectID": "datapre.html#defining-common-variables",
    "href": "datapre.html#defining-common-variables",
    "title": "🌊 Data Preparation 🪸",
    "section": "2.1 Defining common variables",
    "text": "2.1 Defining common variables\nWe will also set some values for consistency throughout all graphs.\n\nStyle and Colours\n\n\n\n\nShow the code\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",\n  \"Relationship\" = \"#AF8DC3\",\n  \"Nadia Conti\" = \"red\"\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",\n  \"Relationship\" = \"square x\",\n  \"Nadia Conti\" = \"star\"\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)"
  },
  {
    "objectID": "datapre.html#inspecting-knowledge-graph-structure",
    "href": "datapre.html#inspecting-knowledge-graph-structure",
    "title": "🌊 Data Preparation 🪸",
    "section": "2.2 Inspecting knowledge graph structure",
    "text": "2.2 Inspecting knowledge graph structure\nIn the code chunk below glimpse() is used to reveal the structure of mc3_data knowledge graph.\n\nThe CodeThe Result\n\n\nglimpse(mc3_data)\n\n\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "datapre.html#extracting-the-edges-and-nodes-tables",
    "href": "datapre.html#extracting-the-edges-and-nodes-tables",
    "title": "🌊 Data Preparation 🪸",
    "section": "2.3 Extracting the edges and nodes tables",
    "text": "2.3 Extracting the edges and nodes tables\nNext, as_tibble() of tibble package package is used to extract the nodes and links tibble data frames from mc3 tibble dataframe into two separate tibble dataframes called mc3_nodes_raw and mc3_edges_raw respectively.\n\nThe CodeNodes structureEdges structure\n\n\n\n\nShow the code\nmc3_nodes_raw &lt;- as_tibble(mc3_data$nodes)\nmc3_edges_raw &lt;- as_tibble(mc3_data$edges)\n\n\nWe also looked into the nodes and edges structure.\n\n\n\n\nShow the code\nExpData(data=mc3_nodes_raw,type=2)\n\n\n   Index     Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1              type     character     1159             0          0.000\n2      2             label     character     1159             0          0.000\n3      3              name     character       72          1087          0.938\n4      4          sub_type     character     1159             0          0.000\n5      5                id     character     1159             0          0.000\n6      6         timestamp     character      770           389          0.336\n7      7   monitoring_type     character       70          1089          0.940\n8      8          findings     character       70          1089          0.940\n9      9           content     character      584           575          0.496\n10    10   assessment_type     character       33          1126          0.972\n11    11           results     character       32          1127          0.972\n12    12     movement_type     character       33          1126          0.972\n13    13       destination     character       41          1118          0.965\n14    14  enforcement_type     character       21          1138          0.982\n15    15           outcome     character       19          1140          0.984\n16    16     activity_type     character        4          1155          0.997\n17    17      participants       integer        1          1158          0.999\n18    18   thing_collected    data.frame    -2314          2316       1158.000\n19    19         reference     character        1          1158          0.999\n20    20              date     character        5          1154          0.996\n21    21              time     character        3          1156          0.997\n22    22   friendship_type     character        2          1157          0.998\n23    23   permission_type     character       55          1104          0.953\n24    24        start_date     character       90          1069          0.922\n25    25          end_date     character        6          1153          0.995\n26    26       report_type     character       19          1140          0.984\n27    27   submission_date     character       22          1137          0.981\n28    28 jurisdiction_type     character       13          1146          0.989\n29    29   authority_level     character        7          1152          0.994\n30    30 coordination_type     character       73          1086          0.937\n31    31  operational_role     character       38          1121          0.967\n   No_of_distinct_values\n1                      3\n2                     92\n3                     73\n4                     25\n5                   1159\n6                    612\n7                      6\n8                     70\n9                    581\n10                     4\n11                    33\n12                     4\n13                    26\n14                     3\n15                    20\n16                     3\n17                     1\n18                     2\n19                     2\n20                     6\n21                     4\n22                     3\n23                     4\n24                    69\n25                     6\n26                     4\n27                    23\n28                    13\n29                     3\n30                    53\n31                    35\n\n\n\n\n\n\nShow the code\nExpData(data=mc3_edges_raw,type=2)\n\n\n  Index Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1     1            id     character     3169            57          0.018\n2     2   is_inferred       logical     3226             0          0.000\n3     3        source     character     3226             0          0.000\n4     4        target     character     3226             0          0.000\n5     5          type     character     2204          1022          0.317\n  No_of_distinct_values\n1                  3170\n2                     2\n3                  1052\n4                  1156\n5                     4"
  },
  {
    "objectID": "datapre.html#nodes-via-shiny",
    "href": "datapre.html#nodes-via-shiny",
    "title": "🌊 Data Preparation 🪸",
    "section": "3.1 Nodes via Shiny",
    "text": "3.1 Nodes via Shiny\n\nNodesDrilling into Node sub_typeEntity subtypesEvent subtypesRelationship subtypes\n\n\nIn the code chunk below, ExpCatViz() of SmartEDA package is used to reveal the frequency distribution of all categorical fields in mc3_nodes tibble dataframe.\n\n\nShow the code\nlibrary(shiny)\nlibrary(ggplot2)\n\n# Run ExpCatViz once at the top to avoid recomputing\nExpCatViz(data=mc3_nodes_raw,\n          col=\"navyblue\")\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n\n\n\n\n[[7]]\n\n\n\n\n\n\n\n\n\n\n[[8]]\n\n\n\n\n\n\n\n\n\n\n[[9]]\n\n\n\n\n\n\n\n\n\n\n[[10]]\n\n\n\n\n\n\n\n\n\n\n[[11]]\n\n\n\n\n\n\n\n\n\n\n[[12]]\n\n\n\n\n\n\n\n\n\n\n[[13]]\n\n\n\n\n\n\n\n\n\n\n[[14]]\n\n\n\n\n\n\n\n\n\n\n\nCode chunk below uses ggplot2 functions to reveal the frequency distribution of sub_type field of mc3_nodes_raw.\n\n\nShow the code\n# Step 1: Count and reorder\nmc3_nodes_ordered &lt;- mc3_nodes_raw %&gt;%\n  count(sub_type) %&gt;%\n  arrange((n)) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type))\n\n# Step 2: Plot with navy bars, sorted, and horizontal\nggplot(mc3_nodes_ordered, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(x = \"Sub_type\", y = \"Count\",\n    title = \"Distribution of Subtypes\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the Entity subtypes are filtered.\n\n\nShow the code\n# Step 1: Filter for type == \"Entity\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Entity\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type)) \n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Entity Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Entity Subtypes\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the Event subtypes are filtered.\n\n\nShow the code\n# Step 1: Filter for type == \"Event\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Event\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type)) \n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Event Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Event Subtypes\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, the relationship subtypes are filtered.\n\n\nShow the code\n# Step 1: Filter for type == \"Relationship\", count sub_type, sort \nrelationship_subtypes &lt;- mc3_nodes_raw %&gt;%\n  filter(type == \"Relationship\") %&gt;%\n  count(sub_type) %&gt;%\n  arrange(n) %&gt;%\n  mutate(sub_type = factor(sub_type, levels = sub_type))\n\n# Step 2: Plot\nggplot(relationship_subtypes, aes(x = sub_type, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    x = \"Relationship Subtype\",\n    y = \"Count\",\n    title = \"Distribution of Relationship Subtypes\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "datapre.html#findings-from-eda",
    "href": "datapre.html#findings-from-eda",
    "title": "🌊 Data Preparation 🪸",
    "section": "3.1.1 Findings from EDA",
    "text": "3.1.1 Findings from EDA\n\nNodesEvent TypesRelationship TypesEntity TypesCourse of Action\n\n\nWe will use the EDA findings to determine data to focus on or eliminate. From the bar charts and the original data on mc3_nodes_raw, it was observed that:\n\nNodes were one of three types (Entity, Event, Relationship), where each of these types have their sub_types. Majority were of event type, followed by relationship, and entity.\n\nThere were 25 subtypes. Communications made up the bulk of the sub_type for Events. Coordinates made up the bulk of the sub_type for Relationship. The additional node sub_types not mentioned in the VAST 2025 MC3 Data Description under Node Attributes were: fishing, communication and coordinates.\n\n\n\n\n\nObservations of EDA from Event types:\n\nFindings field were filled when there were monitoring_type.\nContent refers to radio communication content.\nResults field were filled when there were assessment_type performed.\nWhen there is an enforcement_type of enforcement operations or warnings, there might be an outcome at times.\nWhen there is a movement_type, there might be a place of destination at times.\n\n\n\n\n\nObservations of EDA from Relationship types:\n\nWhen the subtype was coordinate, there were data in the field named coordination_types.\nWhen the subtype was operate, there were data in the field named operational_roles.\nWhen there is a jurisdiction_type, there might be an authority_level.\nThere are only restricted or special access data within permission_types.\nWhen there is a report_type of data transmission or environmental report, there might be a submission_date.\n\n\n\n\n\nObservations of EDA from Entity types:\n\nThe 5 id under Group sub-types were not very useful information.\n\n\n\n\n\nElimination and directed focus:\n\nRelative to the entire dataset, there were little assessment_type (3%), movement_type (2%), enforcement_type (2%), permission_type (4%), report_type (2%), authority_level (1%). We will direct our focus on other areas instead of these.\nThere were no to little useful data in the fields named: activity_type, references, dates, time, and friendship_type. These were not utilised.\nWe directed our focus on Event_Communication, Event_Monitoring, and Event_VesselMovement."
  },
  {
    "objectID": "datapre.html#edges",
    "href": "datapre.html#edges",
    "title": "🌊 Data Preparation 🪸",
    "section": "3.2 Edges",
    "text": "3.2 Edges\nThe code chunk below used ExpCATViz() of SmartEDA package to reveal the frequency distribution of all categorical fields in mc3_edges_raw tibble dataframe.\n\nFrequency Distribution of Categorical FieldsFilter by type == sent\n\n\n\n\nShow the code\nExpCatViz(data=mc3_edges_raw,\n          col=\"navyblue\")\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\nEntities are connected by edges to other Entities via an Event or Relationship node. The one exception to this is the Communication Event subtype, which is additionally linked to either an Event or Relationship node. The type field denotes the connector or edge type for the Entities, Event, and Relationship nodes. The edges are one of these: received, evidence_for, sent, NA.\n\n\n\n\nShow the code\n# Step 1: Filter for type == \"sent\"\nfiltered_edges &lt;- mc3_edges_raw %&gt;%\n  filter(type == \"sent\") %&gt;%\n  count(source) %&gt;%\n  arrange(desc(n)) %&gt;%\n  mutate(source = factor(source, levels = rev(unique(source))))  # descending \n\n# Step 2: Plot\nggplot(filtered_edges, aes(x = source, y = n)) +\n  geom_col(fill = \"navy\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of 'sent' Edges type by Source\",\n    x = \"Source\",\n    y = \"Count\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nWhat we understood from the information provided by Vast Challenge on Directional Edges:\n\nFor relationship as colleagues node or friends node, the node will have arrows/ edges pointing towards the relationship node.\nFor other relationships and events, the direction would be following the source and target."
  },
  {
    "objectID": "datapre.html#data-cleaning-and-wrangling",
    "href": "datapre.html#data-cleaning-and-wrangling",
    "title": "🌊 Data Preparation 🪸",
    "section": "4.1 Data Cleaning and Wrangling",
    "text": "4.1 Data Cleaning and Wrangling\n\nCleaning and wrangling nodesUnique Node CountCleaning and wrangling edgesUnique Edges CountOther preparatory work\n\n\n\nconvert values in id field into character data type,\nexclude records with id value are na,\nexclude records with similar id values,\nexclude thing_collected , time , date, friendship_type field, and\nsave the cleaned tibble dataframe into a new tibble datatable called mc3_nodes_cleaned.\n\n\n\nShow the code\nmc3_nodes_cleaned &lt;- mc3_nodes_raw %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  select(-thing_collected, -time, -date, -friendship_type)\n\n\n\n\n\n\n# A tibble: 27 × 2\n   column            unique_count\n   &lt;chr&gt;                    &lt;int&gt;\n 1 id                        1159\n 2 timestamp                  612\n 3 content                    581\n 4 label                       92\n 5 name                        73\n 6 findings                    70\n 7 start_date                  69\n 8 coordination_type           53\n 9 operational_role            35\n10 results                     33\n# ℹ 17 more rows\n\n\n\n\n\nrenamed source and target fields to from_id and to_id respectively,\nconverted values in from_id and to_id fields to character data type,\nexcluded values in from_id and to_id which not found in the id field of mc3_nodes_cleaned,\nexcluded records whereby from_id and/or to_id values are missing, and\nsaved the cleaned tibble dataframe and called it mc3_edges_cleaned.\n\n\n\nShow the code\nmc3_edges_cleaned &lt;- mc3_edges_raw %&gt;%\n  rename(from_id = source,\n         to_id = target) %&gt;%\n  mutate(across(c(from_id, to_id), as.character)) %&gt;%\n  # Parse to_id to get supertype and sub_type for target nodes (e.g., Event_Communication)\n  separate(to_id, into = c(\"to_id_supertype\", \"to_id_sub_type\", \"to_id_num\"),\n           sep = \"_\", remove = FALSE, fill = \"right\", extra = \"merge\") %&gt;%\n  # Filter to ensure from_id and to_id exist in mc3_nodes_cleaned (prevent orphaned edges)\n  filter(from_id %in% mc3_nodes_cleaned$id,\n         to_id %in% mc3_nodes_cleaned$id) %&gt;%\n  filter(!is.na(from_id), !is.na(to_id))\n\nprint(\"Columns in mc3_edges_cleaned after initial cleaning:\")\n\n\n[1] \"Columns in mc3_edges_cleaned after initial cleaning:\"\n\n\nShow the code\nprint(colnames(mc3_edges_cleaned))\n\n\n[1] \"id\"              \"is_inferred\"     \"from_id\"         \"to_id\"          \n[5] \"to_id_supertype\" \"to_id_sub_type\"  \"to_id_num\"       \"type\"           \n\n\nShow the code\nprint(\"Head of mc3_edges_cleaned after initial cleaning:\")\n\n\n[1] \"Head of mc3_edges_cleaned after initial cleaning:\"\n\n\nShow the code\nprint(head(mc3_edges_cleaned))\n\n\n# A tibble: 6 × 8\n  id    is_inferred from_id to_id to_id_supertype to_id_sub_type to_id_num type \n  &lt;chr&gt; &lt;lgl&gt;       &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt;\n1 2     TRUE        Sam     Rela… Relationship    Suspicious     217       &lt;NA&gt; \n2 3     FALSE       Sam     Even… Event           Communication  370       sent \n3 5     TRUE        Sam     Even… Event           Assessment     600       &lt;NA&gt; \n4 3013  TRUE        Sam     Rela… Relationship    Colleagues     430       &lt;NA&gt; \n5 &lt;NA&gt;  TRUE        Sam     Rela… Relationship    Friends        272       &lt;NA&gt; \n6 &lt;NA&gt;  TRUE        Sam     Rela… Relationship    Colleagues     215       &lt;NA&gt; \n\n\n\n\n\n\nShow the code\n# Find the number of unique types in each column\nunique_counts &lt;- mc3_edges_cleaned %&gt;%\n  summarise_all(n_distinct) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"column\", values_to = \"unique_count\")\n\n# Print the unique counts for each column\nprint(unique_counts)\n\n\n# A tibble: 8 × 2\n  column          unique_count\n  &lt;chr&gt;                  &lt;int&gt;\n1 id                      3170\n2 is_inferred                2\n3 from_id                 1052\n4 to_id                   1156\n5 to_id_supertype           71\n6 to_id_sub_type            21\n7 to_id_num                860\n8 type                       4\n\n\n\n\nNext, code chunk below will be used to create mapping of character id in mc3_nodes_cleaned to row index\n\n\nShow the code\nnode_index_lookup &lt;- mc3_nodes_cleaned %&gt;%\n  mutate(.row_id = row_number()) %&gt;%\n  select(id, .row_id)\n\n\nNext, the code chunk below was used to join and convert from_id and to_id to integer indices. At the same time we also dropped rows with unmatched nodes.\n\n\nShow the code\nmc3_edges_indexed &lt;- mc3_edges_cleaned %&gt;%\n  left_join(node_index_lookup, by = c(\"from_id\" = \"id\")) %&gt;%\n  rename(from = .row_id) %&gt;%\n  left_join(node_index_lookup, by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(to = .row_id) %&gt;%\n  # Filter out edges where either source or target node was not found\n  filter(!is.na(from) & !is.na(to)) %&gt;%\n  # Select all columns to carry forward to mc3_edges_final\n  select(from, to, id, is_inferred, type, # Original edge attributes\n         from_id, to_id, to_id_supertype, to_id_sub_type, to_id_num # Original IDs and parsed target type\n         )\n\n\nNext the code chunk below was used to subset nodes to only those referenced by edges.\n\n\nShow the code\nused_node_indices &lt;- sort(unique(c(mc3_edges_indexed$from, mc3_edges_indexed$to)))\nmc3_nodes_final &lt;- mc3_nodes_cleaned %&gt;%\n  slice(used_node_indices) %&gt;%\n  mutate(new_index = row_number())\n\n\nWe then used the code chunk below to rebuild lookup from old index to new index.\n\n\nShow the code\nold_to_new_index &lt;- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(used_node_indices)\n)\n\n\nLastly, the code chunk below was used to update edge indices to match new node table.\n\n\nShow the code\nmc3_edges_final &lt;- mc3_edges_indexed %&gt;%\n  left_join(old_to_new_index, by = c(\"from\" = \"old_index\")) %&gt;%\n  rename(from_new = new_index) %&gt;%\n  left_join(old_to_new_index, by = c(\"to\" = \"old_index\")) %&gt;%\n  rename(to_new = new_index) %&gt;%\n  # Explicitly select all columns that are needed downstream\n  select(from = from_new, to = to_new,\n         id, is_inferred, type,\n         from_id, to_id, to_id_supertype, to_id_sub_type, to_id_num)"
  },
  {
    "objectID": "datapre.html#building-the-tidygraph-object",
    "href": "datapre.html#building-the-tidygraph-object",
    "title": "🌊 Data Preparation 🪸",
    "section": "4.2 Building the tidygraph object",
    "text": "4.2 Building the tidygraph object\n\nBuild the object-tbl_graphExamining the object\n\n\n\n\nShow the code\nmc3_graph &lt;- tbl_graph(\n  nodes = mc3_nodes_final,\n  edges = mc3_edges_final,\n  directed = TRUE\n)\n\n\n\n\n\n\nShow the code\nstr(mc3_graph)\n\n\nClasses 'tbl_graph', 'igraph'  hidden list of 10\n $ : num 1159\n $ : logi TRUE\n $ : num [1:3226] 0 0 0 0 0 0 0 1 1 1 ...\n $ : num [1:3226] 1137 356 746 894 875 ...\n $ : NULL\n $ : NULL\n $ : NULL\n $ : NULL\n $ :List of 4\n  ..$ : num [1:3] 1 0 1\n  ..$ : Named list()\n  ..$ :List of 28\n  .. ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  .. ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  .. ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  .. ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ findings         : chr [1:1159] NA NA NA NA ...\n  .. ..$ content          : chr [1:1159] NA NA NA NA ...\n  .. ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ results          : chr [1:1159] NA NA NA NA ...\n  .. ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ destination      : chr [1:1159] NA NA NA NA ...\n  .. ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  .. ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  .. ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  .. ..$ reference        : chr [1:1159] NA NA NA NA ...\n  .. ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  .. ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  .. ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  .. ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  .. ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  .. ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ operational_role : chr [1:1159] NA NA NA NA ...\n  .. ..$ new_index        : int [1:1159] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ :List of 8\n  .. ..$ id             : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  .. ..$ is_inferred    : logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  .. ..$ type           : chr [1:3226] NA \"sent\" NA NA ...\n  .. ..$ from_id        : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  .. ..$ to_id          : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  .. ..$ to_id_supertype: chr [1:3226] \"Relationship\" \"Event\" \"Event\" \"Relationship\" ...\n  .. ..$ to_id_sub_type : chr [1:3226] \"Suspicious\" \"Communication\" \"Assessment\" \"Colleagues\" ...\n  .. ..$ to_id_num      : chr [1:3226] \"217\" \"370\" \"600\" \"430\" ...\n $ :&lt;environment: 0x7f930cbcb218&gt; \n - attr(*, \"active\")= chr \"nodes\""
  },
  {
    "objectID": "datapre.html#visnetwork",
    "href": "datapre.html#visnetwork",
    "title": "🌊 Data Preparation 🪸",
    "section": "VisNetwork",
    "text": "VisNetwork\nVisNetwork provides the user to understand relationships through interactivity. For instance:\n\nThe individual nodes can be selected from the drop-down menu to view its connected nodes and edges.\nThe hover tooltip provides additional details from fields such as content, coordination_type, findings, destination, operational_role, results, and jurisdiction_type based on the related id information from mc3_nodes_final."
  },
  {
    "objectID": "datapre.html#the-graph--visnetwork",
    "href": "datapre.html#the-graph--visnetwork",
    "title": "🌊 Data Preparation 🪸",
    "section": "The Graph- VisNetwork",
    "text": "The Graph- VisNetwork\n\n\n\n\n\n\n\n\n\n\nShow the code\n# ---- 1. Define styles and legends ----\n\nevent_subtypes &lt;- c(\n  \"Communication\", \"Monitoring\", \"VesselMovement\", \"Assessment\",\n  \"Collaborate\", \"Endorsement\", \"TourActivity\", \"TransponderPing\",\n  \"Harbor Report\", \"Fishing\", \"Criticize\"\n)\n\nrelationship_subtypes &lt;- c(\n  \"Coordinates\", \"AccessPermission\", \"Operates\", \"Colleagues\",\n  \"Suspicious\", \"Reports\", \"Jurisdiction\", \"Unfriendly\", \"Friends\"\n)\n\nnode_legend_colors_plot &lt;- c(\n  \"Person\" = \"#88CCEE\",\n  \"Vessel\" = \"#D55E00\",\n  \"Organization\" = \"#117733\",\n  \"Location\" = \"#AA4499\",\n  \"Group\"= \"#CC79A7\",\n  \"Event\" = \"#DDCC77\",         # type level\n  \"Relationship\" = \"#AF8DC3\"   # type level\n)\n\nnode_legend_shapes_plot &lt;- c(\n  \"Person\" = \"dot\",\n  \"Vessel\" = \"triangle\",\n  \"Organization\" = \"square\",\n  \"Location\" = \"diamond\",\n  \"Group\" = \"circle plus\",\n  \"Event\" = \"star\",              # type level\n  \"Relationship\" = \"square x\"    # type level\n)\n\nSTYLES &lt;- list(\n  node_label_dark = \"black\",\n  font_family = \"Roboto Condensed\"\n)\n\n# ---- 2. Prepare nodes ----\nnodes &lt;- mc3_nodes_final %&gt;%\n  mutate(\n    label = ifelse(is.na(name), id, name),\n    \n    # These parts are for pulling the related data from other fields\n    tooltip_extra = case_when(\n      type == \"Event\" & sub_type == \"Communication\" ~ content,\n      type == \"Event\" & sub_type == \"Monitoring\" ~ findings,\n      type == \"Event\" & sub_type == \"VesselMovement\" ~ destination,\n      type == \"Event\" & sub_type == \"Assessment\" ~ results,\n      type == \"Relationship\" & sub_type == \"Coordinates\" ~ coordination_type,\n      type == \"Relationship\" & sub_type == \"Operates\" ~ operational_role,\n      type == \"Relationship\" & sub_type == \"Jurisdiction\" ~ jurisdiction_type,\n      TRUE ~ NA_character_\n    ),\n    \n    title = paste0(\n      \"&lt;b&gt;\", label, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Type: \", type, \"&lt;br&gt;\",\n      \"Sub-type: \", sub_type, \"&lt;br&gt;\",\n      ifelse(!is.na(tooltip_extra), paste0(\"&lt;br&gt;&lt;b&gt;Details:&lt;/b&gt; \", tooltip_extra), \"\")\n    ),\n    \n    # Fallback logic: if sub_type is NA or not in styling list, use type instead\n    group = ifelse(sub_type %in% names(node_legend_colors_plot), sub_type, type)\n  ) %&gt;%\n  select(id, label, group, title) %&gt;%\n  distinct()\n\n# ---- 3. Prepare directed edges (type == \"sent\") ----\n\nedges &lt;- mc3_edges_final %&gt;%\n  filter(from_id %in% nodes$id & to_id %in% nodes$id) %&gt;%\n  select(from = from_id, to = to_id)\n\n# ---- 4. Build visNetwork ----\n\nnet &lt;- visNetwork(nodes, edges, width = \"100%\", height = \"600px\") %&gt;%\n  visEdges(arrows = list(to = list(enabled = TRUE, scaleFactor = 1.5))) %&gt;%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visNodes(font = list(\n    size = 14,\n    color = STYLES$node_label_dark,\n    face = STYLES$font_family,\n    vadjust = -15\n  ))\n\n# ---- 5. Apply shape and color per group ----\n\nfor (group_name in names(node_legend_colors_plot)) {\n  net &lt;- net %&gt;% visGroups(\n    groupname = group_name,\n    color = node_legend_colors_plot[[group_name]],\n    shape = node_legend_shapes_plot[[group_name]]\n  )\n}\n# ---- 6. Add legend ----\n\nused_groups &lt;- unique(nodes$group)\n\nlegend_df &lt;- tibble::tibble(\n  label = used_groups,\n  shape = node_legend_shapes_plot[used_groups],\n  color = node_legend_colors_plot[used_groups]\n) %&gt;%\n  distinct(label, .keep_all = TRUE)  # remove duplicates just in case\n\nnet &lt;- net %&gt;% visLegend(\n  addNodes = legend_df,\n  ncol = 2,                         # number of columns\n  position = \"left\",              \n  main = \"Entity (Sub)Types\",      # title\n  useGroups = FALSE                # show custom legend entries\n)\n# ---- 7. Render ----\nnet"
  },
  {
    "objectID": "about.html#li-jianyi",
    "href": "about.html#li-jianyi",
    "title": "🌊 Covert Reef Team Members 🪸",
    "section": "",
    "text": "My name is Jianyi, and I came into the Visual Analytics module hoping to learn how to turn complex data into clear and engaging visuals. The module exceeded my expectations by equipping me with practical skills in R, Shiny, and Quarto, while also teaching me the importance of design, storytelling, and user experience in data communication. I especially enjoyed building interactive dashboards and applying visual thinking to real-world scenarios. I believe these skills will be valuable in future projects, business reporting, and communicating insights to both technical and non-technical audiences."
  }
]